# Automatically generated by Pynguin.
import script_92 as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.any_int(bool_0, bool_0, bool_0)
    assert var_0 is False


def test_case_1():
    float_0 = 3030.141552
    list_0 = [float_0, float_0]
    tuple_0 = (float_0, list_0)
    var_0 = module_0.any_int(tuple_0, list_0, tuple_0)
    assert var_0 is False


def test_case_2():
    bool_0 = True
    none_type_0 = None
    var_0 = module_0.any_int(bool_0, none_type_0, none_type_0)
    assert var_0 is False
    var_1 = module_0.any_int(none_type_0, var_0, bool_0)
    assert var_1 is False
    var_2 = module_0.any_int(bool_0, bool_0, bool_0)
    assert var_2 is False


def test_case_3():
    bool_0 = False
    var_0 = module_0.any_int(bool_0, bool_0, bool_0)
    assert var_0 is True
    tuple_0 = (bool_0,)
    bool_1 = False
    list_0 = [var_0, bool_1, bool_1]
    var_1 = module_0.any_int(var_0, var_0, list_0)
    assert var_1 is False
    none_type_0 = None
    var_2 = module_0.any_int(tuple_0, tuple_0, none_type_0)
    assert var_2 is False


def test_case_4():
    bool_0 = True
    none_type_0 = None
    var_0 = module_0.any_int(bool_0, none_type_0, bool_0)
    assert var_0 is False
    bool_1 = False
    none_type_1 = None
    var_1 = module_0.any_int(bool_1, none_type_1, none_type_1)
    assert var_1 is False
    var_2 = module_0.any_int(bool_1, bool_1, bool_1)
    assert var_2 is True


def test_case_5():
    bool_0 = True
    var_0 = module_0.any_int(bool_0, bool_0, bool_0)
    assert var_0 is False
    none_type_0 = None
    var_1 = module_0.any_int(var_0, none_type_0, bool_0)
    assert var_1 is False
    tuple_0 = (var_0,)
    str_0 = ";JfKo/YNi?=4j@"
    var_2 = module_0.any_int(var_0, bool_0, tuple_0)
    assert var_2 is False
    var_3 = module_0.any_int(var_1, var_2, bool_0)
    assert var_3 is False
    var_4 = module_0.any_int(var_0, bool_0, tuple_0)
    assert var_4 is False
    var_5 = module_0.any_int(var_0, str_0, bool_0)
    assert var_5 is False
    var_6 = module_0.any_int(tuple_0, str_0, bool_0)
    assert var_6 is False
    var_7 = module_0.any_int(none_type_0, tuple_0, tuple_0)
    assert var_7 is False
    var_8 = module_0.any_int(none_type_0, bool_0, bool_0)
    assert var_8 is False
    int_0 = 1575
    tuple_1 = (bool_0, int_0)
    var_9 = module_0.any_int(tuple_0, none_type_0, none_type_0)
    assert var_9 is False
    bool_1 = False
    var_10 = module_0.any_int(bool_0, var_7, var_7)
    assert var_10 is False
    var_11 = module_0.any_int(bool_1, var_0, bool_1)
    assert var_11 is True
    var_12 = module_0.any_int(var_11, var_10, tuple_1)
    assert var_12 is False
    var_13 = module_0.any_int(bool_0, bool_0, var_8)
    assert var_13 is True
    var_14 = module_0.any_int(var_0, var_12, var_13)
    assert var_14 is False
    var_15 = module_0.any_int(int_0, var_8, int_0)
    assert var_15 is True
    var_16 = module_0.any_int(bool_0, var_0, var_8)
    assert var_16 is False
    var_17 = module_0.any_int(var_7, tuple_0, var_8)
    assert var_17 is False
    var_18 = module_0.any_int(tuple_0, var_15, var_17)
    assert var_18 is False
    var_19 = module_0.any_int(var_5, var_11, var_7)
    assert var_19 is False
    var_20 = module_0.any_int(bool_1, var_0, var_12)
    assert var_20 is True
    var_21 = module_0.any_int(bool_0, var_13, none_type_0)
    assert var_21 is False
    var_22 = module_0.any_int(tuple_1, int_0, tuple_1)
    assert var_22 is False
