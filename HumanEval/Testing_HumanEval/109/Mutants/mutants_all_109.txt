[*] Start mutation process:
   - targets: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/109/script_NDS_109.py
   - tests: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/109/Copilot/test_109_cp_few_shot.py
[*] 0 tests passed:
   - test_109_cp_few_shot [0.00006 s]
[*] Start mutants generation and execution:
   - [#   1] AOR script_NDS_109: 
--------------------------------------------------------------------------------
   6:     my_arr = []
   7:     
   8:     min_value = min(arr)
   9:     min_index = arr.index(min_value)
- 10:     my_arr = arr[min_index:] + arr[0:min_index]
+ 10:     my_arr = arr[min_index:] - arr[0:min_index]
  11:     for i in range(len(arr)):
  12:         if my_arr[i] != sorted_array[i]:
  13:             return False
  14:     return True
--------------------------------------------------------------------------------
[0.00821 s] survived
   - [#   2] COI script_NDS_109: 
--------------------------------------------------------------------------------
   1: def move_one_ball(arr):
   2:     
-  3:     if len(arr) == 0:
+  3:     if not (len(arr) == 0):
   4:         return True
   5:     sorted_array = sorted(arr)
   6:     my_arr = []
   7:     
--------------------------------------------------------------------------------
[0.00753 s] survived
   - [#   3] COI script_NDS_109: 
--------------------------------------------------------------------------------
   8:     min_value = min(arr)
   9:     min_index = arr.index(min_value)
  10:     my_arr = arr[min_index:] + arr[0:min_index]
  11:     for i in range(len(arr)):
- 12:         if my_arr[i] != sorted_array[i]:
+ 12:         if not (my_arr[i] != sorted_array[i]):
  13:             return False
  14:     return True
--------------------------------------------------------------------------------
[0.00672 s] survived
   - [#   4] ROR script_NDS_109: 
--------------------------------------------------------------------------------
   1: def move_one_ball(arr):
   2:     
-  3:     if len(arr) == 0:
+  3:     if len(arr) != 0:
   4:         return True
   5:     sorted_array = sorted(arr)
   6:     my_arr = []
   7:     
--------------------------------------------------------------------------------
[0.00574 s] survived
   - [#   5] ROR script_NDS_109: 
--------------------------------------------------------------------------------
   8:     min_value = min(arr)
   9:     min_index = arr.index(min_value)
  10:     my_arr = arr[min_index:] + arr[0:min_index]
  11:     for i in range(len(arr)):
- 12:         if my_arr[i] != sorted_array[i]:
+ 12:         if my_arr[i] == sorted_array[i]:
  13:             return False
  14:     return True
--------------------------------------------------------------------------------
[0.00617 s] survived
   - [#   6] SIR script_NDS_109: 
--------------------------------------------------------------------------------
   6:     my_arr = []
   7:     
   8:     min_value = min(arr)
   9:     min_index = arr.index(min_value)
- 10:     my_arr = arr[min_index:] + arr[0:min_index]
+ 10:     my_arr = arr[:] + arr[0:min_index]
  11:     for i in range(len(arr)):
  12:         if my_arr[i] != sorted_array[i]:
  13:             return False
  14:     return True
--------------------------------------------------------------------------------
[0.00767 s] survived
   - [#   7] SIR script_NDS_109: 
--------------------------------------------------------------------------------
   6:     my_arr = []
   7:     
   8:     min_value = min(arr)
   9:     min_index = arr.index(min_value)
- 10:     my_arr = arr[min_index:] + arr[0:min_index]
+ 10:     my_arr = arr[min_index:] + arr[:min_index]
  11:     for i in range(len(arr)):
  12:         if my_arr[i] != sorted_array[i]:
  13:             return False
  14:     return True
--------------------------------------------------------------------------------
[0.00775 s] survived
   - [#   8] SIR script_NDS_109: 
--------------------------------------------------------------------------------
   6:     my_arr = []
   7:     
   8:     min_value = min(arr)
   9:     min_index = arr.index(min_value)
- 10:     my_arr = arr[min_index:] + arr[0:min_index]
+ 10:     my_arr = arr[min_index:] + arr[0:]
  11:     for i in range(len(arr)):
  12:         if my_arr[i] != sorted_array[i]:
  13:             return False
  14:     return True
--------------------------------------------------------------------------------
[0.00749 s] survived
[*] Mutation score [0.27063 s]: 0.0%
   - all: 8
   - killed: 0 (0.0%)
   - survived: 8 (100.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
