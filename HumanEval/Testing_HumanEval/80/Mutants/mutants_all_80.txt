[*] Start mutation process:
   - targets: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/80/script_NDS_80.py
   - tests: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/80/Copilot/test_80_cp_few_shot.py
[*] 0 tests passed:
   - test_80_cp_few_shot [0.00006 s]
[*] Start mutants generation and execution:
   - [#   1] AOR script_NDS_80: 
--------------------------------------------------------------------------------
   2:     
   3:     if len(s) < 3:
   4:         return False
   5:     
-  6:     for i in range(len(s) - 2):
+  6:     for i in range(len(s) + 2):
   7:         
   8:         if (s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]):
   9:             return False
  10:     return True
--------------------------------------------------------------------------------
[0.00587 s] survived
   - [#   2] AOR script_NDS_80: 
--------------------------------------------------------------------------------
   4:         return False
   5:     
   6:     for i in range(len(s) - 2):
   7:         
-  8:         if (s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]):
+  8:         if (s[i] == s[i - 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]):
   9:             return False
  10:     return True
--------------------------------------------------------------------------------
[0.00571 s] survived
   - [#   3] AOR script_NDS_80: 
--------------------------------------------------------------------------------
   4:         return False
   5:     
   6:     for i in range(len(s) - 2):
   7:         
-  8:         if (s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]):
+  8:         if (s[i] == s[i + 1] or s[i - 1] == s[i + 2] or s[i] == s[i + 2]):
   9:             return False
  10:     return True
--------------------------------------------------------------------------------
[0.00626 s] survived
   - [#   4] AOR script_NDS_80: 
--------------------------------------------------------------------------------
   4:         return False
   5:     
   6:     for i in range(len(s) - 2):
   7:         
-  8:         if (s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]):
+  8:         if (s[i] == s[i + 1] or s[i + 1] == s[i - 2] or s[i] == s[i + 2]):
   9:             return False
  10:     return True
--------------------------------------------------------------------------------
[0.00618 s] survived
   - [#   5] AOR script_NDS_80: 
--------------------------------------------------------------------------------
   4:         return False
   5:     
   6:     for i in range(len(s) - 2):
   7:         
-  8:         if (s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]):
+  8:         if (s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i - 2]):
   9:             return False
  10:     return True
--------------------------------------------------------------------------------
[0.00559 s] survived
   - [#   6] COI script_NDS_80: 
--------------------------------------------------------------------------------
   1: def is_happy(s):
   2:     
-  3:     if len(s) < 3:
+  3:     if not (len(s) < 3):
   4:         return False
   5:     
   6:     for i in range(len(s) - 2):
   7:         
--------------------------------------------------------------------------------
[0.00675 s] survived
   - [#   7] COI script_NDS_80: 
--------------------------------------------------------------------------------
   4:         return False
   5:     
   6:     for i in range(len(s) - 2):
   7:         
-  8:         if (s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]):
+  8:         if not ((s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2])):
   9:             return False
  10:     return True
--------------------------------------------------------------------------------
[0.00776 s] survived
   - [#   8] LCR script_NDS_80: 
--------------------------------------------------------------------------------
   4:         return False
   5:     
   6:     for i in range(len(s) - 2):
   7:         
-  8:         if (s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]):
+  8:         if (s[i] == s[i + 1] and s[i + 1] == s[i + 2] and s[i] == s[i + 2]):
   9:             return False
  10:     return True
--------------------------------------------------------------------------------
[0.00633 s] survived
   - [#   9] ROR script_NDS_80: 
--------------------------------------------------------------------------------
   1: def is_happy(s):
   2:     
-  3:     if len(s) < 3:
+  3:     if len(s) > 3:
   4:         return False
   5:     
   6:     for i in range(len(s) - 2):
   7:         
--------------------------------------------------------------------------------
[0.00527 s] survived
   - [#  10] ROR script_NDS_80: 
--------------------------------------------------------------------------------
   1: def is_happy(s):
   2:     
-  3:     if len(s) < 3:
+  3:     if len(s) <= 3:
   4:         return False
   5:     
   6:     for i in range(len(s) - 2):
   7:         
--------------------------------------------------------------------------------
[0.00586 s] survived
   - [#  11] ROR script_NDS_80: 
--------------------------------------------------------------------------------
   4:         return False
   5:     
   6:     for i in range(len(s) - 2):
   7:         
-  8:         if (s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]):
+  8:         if (s[i] != s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]):
   9:             return False
  10:     return True
--------------------------------------------------------------------------------
[0.00650 s] survived
   - [#  12] ROR script_NDS_80: 
--------------------------------------------------------------------------------
   4:         return False
   5:     
   6:     for i in range(len(s) - 2):
   7:         
-  8:         if (s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]):
+  8:         if (s[i] == s[i + 1] or s[i + 1] != s[i + 2] or s[i] == s[i + 2]):
   9:             return False
  10:     return True
--------------------------------------------------------------------------------
[0.00604 s] survived
   - [#  13] ROR script_NDS_80: 
--------------------------------------------------------------------------------
   4:         return False
   5:     
   6:     for i in range(len(s) - 2):
   7:         
-  8:         if (s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]):
+  8:         if (s[i] == s[i + 1] or s[i + 1] == s[i + 2] or s[i] != s[i + 2]):
   9:             return False
  10:     return True
--------------------------------------------------------------------------------
[0.00609 s] survived
[*] Mutation score [0.34763 s]: 0.0%
   - all: 13
   - killed: 0 (0.0%)
   - survived: 13 (100.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
