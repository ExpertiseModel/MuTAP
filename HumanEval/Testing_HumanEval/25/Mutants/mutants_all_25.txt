[*] Start mutation process:
   - targets: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/25/script_NDS_25.py
   - tests: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/25/Copilot/test_25_cp_few_shot.py
[*] 0 tests passed:
   - test_25_cp_few_shot [0.00007 s]
[*] Start mutants generation and execution:
   - [#   1] AOR script_NDS_25: 
--------------------------------------------------------------------------------
   5:     
   6:     import math
   7:     fact = []
   8:     i = 2
-  9:     while i <= int(math.sqrt(n) + 1):
+  9:     while i <= int(math.sqrt(n) - 1):
  10:         if n % i == 0:
  11:             fact.append(i)
  12:             n //= i
  13:         else:
--------------------------------------------------------------------------------
[0.00567 s] survived
   - [#   2] AOR script_NDS_25: 
--------------------------------------------------------------------------------
   6:     import math
   7:     fact = []
   8:     i = 2
   9:     while i <= int(math.sqrt(n) + 1):
- 10:         if n % i == 0:
+ 10:         if n * i == 0:
  11:             fact.append(i)
  12:             n //= i
  13:         else:
  14:             i += 1
--------------------------------------------------------------------------------
[0.00477 s] survived
   - [#   3] ASR script_NDS_25: 
--------------------------------------------------------------------------------
   8:     i = 2
   9:     while i <= int(math.sqrt(n) + 1):
  10:         if n % i == 0:
  11:             fact.append(i)
- 12:             n //= i
+ 12:             n /= i
  13:         else:
  14:             i += 1
  15:     
  16:     if n > 1:
--------------------------------------------------------------------------------
[0.00560 s] survived
   - [#   4] ASR script_NDS_25: 
--------------------------------------------------------------------------------
   8:     i = 2
   9:     while i <= int(math.sqrt(n) + 1):
  10:         if n % i == 0:
  11:             fact.append(i)
- 12:             n //= i
+ 12:             n *= i
  13:         else:
  14:             i += 1
  15:     
  16:     if n > 1:
--------------------------------------------------------------------------------
[0.00556 s] survived
   - [#   5] ASR script_NDS_25: 
--------------------------------------------------------------------------------
  10:         if n % i == 0:
  11:             fact.append(i)
  12:             n //= i
  13:         else:
- 14:             i += 1
+ 14:             i -= 1
  15:     
  16:     if n > 1:
  17:         fact.append(n)
  18:     return fact
--------------------------------------------------------------------------------
[0.00589 s] survived
   - [#   6] COI script_NDS_25: 
--------------------------------------------------------------------------------
   5:     
   6:     import math
   7:     fact = []
   8:     i = 2
-  9:     while i <= int(math.sqrt(n) + 1):
+  9:     while not (i <= int(math.sqrt(n) + 1)):
  10:         if n % i == 0:
  11:             fact.append(i)
  12:             n //= i
  13:         else:
--------------------------------------------------------------------------------
[0.00599 s] survived
   - [#   7] COI script_NDS_25: 
--------------------------------------------------------------------------------
   6:     import math
   7:     fact = []
   8:     i = 2
   9:     while i <= int(math.sqrt(n) + 1):
- 10:         if n % i == 0:
+ 10:         if not (n % i == 0):
  11:             fact.append(i)
  12:             n //= i
  13:         else:
  14:             i += 1
--------------------------------------------------------------------------------
[0.00511 s] survived
   - [#   8] COI script_NDS_25: 
--------------------------------------------------------------------------------
  12:             n //= i
  13:         else:
  14:             i += 1
  15:     
- 16:     if n > 1:
+ 16:     if not (n > 1):
  17:         fact.append(n)
  18:     return fact
--------------------------------------------------------------------------------
[0.00644 s] survived
   - [#   9] ROR script_NDS_25: 
--------------------------------------------------------------------------------
   5:     
   6:     import math
   7:     fact = []
   8:     i = 2
-  9:     while i <= int(math.sqrt(n) + 1):
+  9:     while i >= int(math.sqrt(n) + 1):
  10:         if n % i == 0:
  11:             fact.append(i)
  12:             n //= i
  13:         else:
--------------------------------------------------------------------------------
[0.00599 s] survived
   - [#  10] ROR script_NDS_25: 
--------------------------------------------------------------------------------
   5:     
   6:     import math
   7:     fact = []
   8:     i = 2
-  9:     while i <= int(math.sqrt(n) + 1):
+  9:     while i < int(math.sqrt(n) + 1):
  10:         if n % i == 0:
  11:             fact.append(i)
  12:             n //= i
  13:         else:
--------------------------------------------------------------------------------
[0.00703 s] survived
   - [#  11] ROR script_NDS_25: 
--------------------------------------------------------------------------------
   6:     import math
   7:     fact = []
   8:     i = 2
   9:     while i <= int(math.sqrt(n) + 1):
- 10:         if n % i == 0:
+ 10:         if n % i != 0:
  11:             fact.append(i)
  12:             n //= i
  13:         else:
  14:             i += 1
--------------------------------------------------------------------------------
[0.00622 s] survived
   - [#  12] ROR script_NDS_25: 
--------------------------------------------------------------------------------
  12:             n //= i
  13:         else:
  14:             i += 1
  15:     
- 16:     if n > 1:
+ 16:     if n < 1:
  17:         fact.append(n)
  18:     return fact
--------------------------------------------------------------------------------
[0.00516 s] survived
   - [#  13] ROR script_NDS_25: 
--------------------------------------------------------------------------------
  12:             n //= i
  13:         else:
  14:             i += 1
  15:     
- 16:     if n > 1:
+ 16:     if n >= 1:
  17:         fact.append(n)
  18:     return fact
--------------------------------------------------------------------------------
[0.00653 s] survived
[*] Mutation score [0.33771 s]: 0.0%
   - all: 13
   - killed: 0 (0.0%)
   - survived: 13 (100.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
