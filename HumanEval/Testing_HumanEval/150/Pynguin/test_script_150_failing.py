# Automatically generated by Pynguin.
import pytest
import script_150 as module_0


def test_case_0():
    try:
        str_0 = 'f17\x0c'
        bool_0 = True
        str_1 = '++i+o"(Dm!4'
        var_0 = module_0.x_or_y(bool_0, str_1, str_0)
        assert var_0 == 'f17\x0c'
        int_0 = -2266
        str_2 = 'H|mF'
        str_3 = '{[O.cHCFhk~'
        var_1 = module_0.x_or_y(str_2, int_0, str_3)
    except BaseException:
        pass


def test_case_1():
    try:
        float_0 = -533.814
        tuple_0 = ()
        str_0 = 'x4d/TI~ET:$eN,ow5{'
        var_0 = module_0.x_or_y(float_0, tuple_0, str_0)
    except BaseException:
        pass


def test_case_2():
    try:
        str_0 = 'r@gO?Wixhv'
        int_0 = 1406
        float_0 = -873.0138
        var_0 = module_0.x_or_y(int_0, str_0, float_0)
        assert var_0 == pytest.approx(-873.0138, abs=0.01, rel=0.01)
        set_0 = None
        float_1 = -3368.2
        str_1 = 'Zdet4Nna\r_8uT;L'
        var_1 = module_0.x_or_y(float_1, str_1, set_0)
    except BaseException:
        pass


def test_case_3():
    try:
        bytes_0 = b'o\x16\x10C8^\x14\x9b\t\xb9b\xee\xfcf\x9d\xa7\x85I\xb6'
        int_0 = -894
        list_0 = [int_0, bytes_0, bytes_0]
        var_0 = module_0.x_or_y(int_0, list_0, bytes_0)
        assert var_0 == [-894,
            b'o\x16\x10C8^\x14\x9b\t\xb9b\xee\xfcf\x9d\xa7\x85I\xb6',
            b'o\x16\x10C8^\x14\x9b\t\xb9b\xee\xfcf\x9d\xa7\x85I\xb6']
        dict_0 = None
        bytes_1 = b'\xd9\xa8\xee\xcd\x84I'
        var_1 = module_0.x_or_y(bytes_0, dict_0, bytes_1)
    except BaseException:
        pass


def test_case_4():
    try:
        int_0 = 1541
        str_0 = 'r@"O?Wixhv'
        list_0 = [int_0]
        dict_0 = {}
        int_1 = 1406
        float_0 = -873.0138
        var_0 = module_0.x_or_y(int_1, str_0, float_0)
        assert var_0 == pytest.approx(-873.0138, abs=0.01, rel=0.01)
        str_1 = 'NM'
        tuple_0 = list_0, dict_0, list_0, str_1
        var_1 = module_0.x_or_y(int_0, str_0, tuple_0)
        assert var_1 == ([1541], {}, [1541], 'NM')
        set_0 = None
        var_2 = module_0.x_or_y(set_0, tuple_0, list_0)
    except BaseException:
        pass
