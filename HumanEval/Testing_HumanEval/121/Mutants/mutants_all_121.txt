[*] Start mutation process:
   - targets: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/121/script_NDS_121.py
   - tests: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/121/Copilot/test_121_cp_few_shot.py
[*] 0 tests passed:
   - test_121_cp_few_shot [0.00006 s]
[*] Start mutants generation and execution:
   - [#   1] AOR script_NDS_121: 
--------------------------------------------------------------------------------
  1: def solution(lst):
  2:     
- 3:     return sum([x for (idx, x) in enumerate(lst) if (idx % 2 == 0 and x % 2 == 1)])
+ 3:     return sum([x for (idx, x) in enumerate(lst) if (idx * 2 == 0 and x % 2 == 1)])
--------------------------------------------------------------------------------
[0.00534 s] survived
   - [#   2] AOR script_NDS_121: 
--------------------------------------------------------------------------------
  1: def solution(lst):
  2:     
- 3:     return sum([x for (idx, x) in enumerate(lst) if (idx % 2 == 0 and x % 2 == 1)])
+ 3:     return sum([x for (idx, x) in enumerate(lst) if (idx % 2 == 0 and x * 2 == 1)])
--------------------------------------------------------------------------------
[0.00773 s] survived
   - [#   3] LCR script_NDS_121: 
--------------------------------------------------------------------------------
  1: def solution(lst):
  2:     
- 3:     return sum([x for (idx, x) in enumerate(lst) if (idx % 2 == 0 and x % 2 == 1)])
+ 3:     return sum([x for (idx, x) in enumerate(lst) if (idx % 2 == 0 or x % 2 == 1)])
--------------------------------------------------------------------------------
[0.00575 s] survived
   - [#   4] ROR script_NDS_121: 
--------------------------------------------------------------------------------
  1: def solution(lst):
  2:     
- 3:     return sum([x for (idx, x) in enumerate(lst) if (idx % 2 == 0 and x % 2 == 1)])
+ 3:     return sum([x for (idx, x) in enumerate(lst) if (idx % 2 != 0 and x % 2 == 1)])
--------------------------------------------------------------------------------
[0.00702 s] survived
   - [#   5] ROR script_NDS_121: 
--------------------------------------------------------------------------------
  1: def solution(lst):
  2:     
- 3:     return sum([x for (idx, x) in enumerate(lst) if (idx % 2 == 0 and x % 2 == 1)])
+ 3:     return sum([x for (idx, x) in enumerate(lst) if (idx % 2 == 0 and x % 2 != 1)])
--------------------------------------------------------------------------------
[0.00656 s] survived
[*] Mutation score [0.11640 s]: 0.0%
   - all: 5
   - killed: 0 (0.0%)
   - survived: 5 (100.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
