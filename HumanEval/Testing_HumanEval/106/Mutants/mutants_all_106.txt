[*] Start mutation process:
   - targets: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/106/script_NDS_106.py
   - tests: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/106/Copilot/test_106_cp_few_shot.py
[*] 0 tests passed:
   - test_106_cp_few_shot [0.00006 s]
[*] Start mutants generation and execution:
   - [#   1] AOR script_NDS_106: 
--------------------------------------------------------------------------------
   1: def f(n):
   2:     
   3:     ret = []
-  4:     for i in range(1, n + 1):
+  4:     for i in range(1, n - 1):
   5:         if i % 2 == 0:
   6:             x = 1
   7:             for j in range(1, i + 1):
   8:                 x *= j
--------------------------------------------------------------------------------
[0.00741 s] survived
   - [#   2] AOR script_NDS_106: 
--------------------------------------------------------------------------------
   1: def f(n):
   2:     
   3:     ret = []
   4:     for i in range(1, n + 1):
-  5:         if i % 2 == 0:
+  5:         if i * 2 == 0:
   6:             x = 1
   7:             for j in range(1, i + 1):
   8:                 x *= j
   9:             ret += [x]
--------------------------------------------------------------------------------
[0.00543 s] survived
   - [#   3] AOR script_NDS_106: 
--------------------------------------------------------------------------------
   3:     ret = []
   4:     for i in range(1, n + 1):
   5:         if i % 2 == 0:
   6:             x = 1
-  7:             for j in range(1, i + 1):
+  7:             for j in range(1, i - 1):
   8:                 x *= j
   9:             ret += [x]
  10:         else:x = 0
  11:             for j in range(1, i + 1):x += j
--------------------------------------------------------------------------------
[0.00472 s] survived
   - [#   4] AOR script_NDS_106: 
--------------------------------------------------------------------------------
   7:             for j in range(1, i + 1):
   8:                 x *= j
   9:             ret += [x]
  10:         else:x = 0
- 11:             for j in range(1, i + 1):x += j
+ 11:             for j in range(1, i - 1):x += j
  12:             ret += [x]
  13:     return ret
--------------------------------------------------------------------------------
[0.00602 s] survived
   - [#   5] ASR script_NDS_106: 
--------------------------------------------------------------------------------
   4:     for i in range(1, n + 1):
   5:         if i % 2 == 0:
   6:             x = 1
   7:             for j in range(1, i + 1):
-  8:                 x *= j
+  8:                 x /= j
   9:             ret += [x]
  10:         else:x = 0
  11:             for j in range(1, i + 1):x += j
  12:             ret += [x]
--------------------------------------------------------------------------------
[0.00557 s] survived
   - [#   6] ASR script_NDS_106: 
--------------------------------------------------------------------------------
   4:     for i in range(1, n + 1):
   5:         if i % 2 == 0:
   6:             x = 1
   7:             for j in range(1, i + 1):
-  8:                 x *= j
+  8:                 x //= j
   9:             ret += [x]
  10:         else:x = 0
  11:             for j in range(1, i + 1):x += j
  12:             ret += [x]
--------------------------------------------------------------------------------
[0.00633 s] survived
   - [#   7] ASR script_NDS_106: 
--------------------------------------------------------------------------------
   4:     for i in range(1, n + 1):
   5:         if i % 2 == 0:
   6:             x = 1
   7:             for j in range(1, i + 1):
-  8:                 x *= j
+  8:                 x **= j
   9:             ret += [x]
  10:         else:x = 0
  11:             for j in range(1, i + 1):x += j
  12:             ret += [x]
--------------------------------------------------------------------------------
[0.00583 s] survived
   - [#   8] ASR script_NDS_106: 
--------------------------------------------------------------------------------
   5:         if i % 2 == 0:
   6:             x = 1
   7:             for j in range(1, i + 1):
   8:                 x *= j
-  9:             ret += [x]
+  9:             ret -= [x]
  10:         else:x = 0
  11:             for j in range(1, i + 1):x += j
  12:             ret += [x]
  13:     return ret
--------------------------------------------------------------------------------
[0.00712 s] survived
   - [#   9] ASR script_NDS_106: 
--------------------------------------------------------------------------------
   7:             for j in range(1, i + 1):
   8:                 x *= j
   9:             ret += [x]
  10:         else:x = 0
- 11:             for j in range(1, i + 1):x += j
+ 11:             for j in range(1, i + 1):x -= j
  12:             ret += [x]
  13:     return ret
--------------------------------------------------------------------------------
[0.00498 s] survived
   - [#  10] ASR script_NDS_106: 
--------------------------------------------------------------------------------
   8:                 x *= j
   9:             ret += [x]
  10:         else:x = 0
  11:             for j in range(1, i + 1):x += j
- 12:             ret += [x]
+ 12:             ret -= [x]
  13:     return ret
--------------------------------------------------------------------------------
[0.00566 s] survived
   - [#  11] COI script_NDS_106: 
--------------------------------------------------------------------------------
   1: def f(n):
   2:     
   3:     ret = []
   4:     for i in range(1, n + 1):
-  5:         if i % 2 == 0:
+  5:         if not (i % 2 == 0):
   6:             x = 1
   7:             for j in range(1, i + 1):
   8:                 x *= j
   9:             ret += [x]
--------------------------------------------------------------------------------
[0.00894 s] survived
   - [#  12] ROR script_NDS_106: 
--------------------------------------------------------------------------------
   1: def f(n):
   2:     
   3:     ret = []
   4:     for i in range(1, n + 1):
-  5:         if i % 2 == 0:
+  5:         if i % 2 != 0:
   6:             x = 1
   7:             for j in range(1, i + 1):
   8:                 x *= j
   9:             ret += [x]
--------------------------------------------------------------------------------
[0.00619 s] survived
[*] Mutation score [0.30555 s]: 0.0%
   - all: 12
   - killed: 0 (0.0%)
   - survived: 12 (100.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
