[*] Start mutation process:
   - targets: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/146/script_NDS_146.py
   - tests: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/146/Copilot/test_146_cp_few_shot.py
[*] 0 tests passed:
   - test_146_cp_few_shot [0.00011 s]
[*] Start mutants generation and execution:
   - [#   1] AOD script_NDS_146: 
--------------------------------------------------------------------------------
   5:     for num in nums:
   6:         if num > 10:
   7:             odd_digits = (1, 3, 5, 7, 9)
   8:             number_as_string = str(num)
-  9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits):
+  9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[1]) in odd_digits):
  10:                 count += 1
  11:     
  12:     return count
--------------------------------------------------------------------------------
[0.00555 s] survived
   - [#   2] AOR script_NDS_146: 
--------------------------------------------------------------------------------
   5:     for num in nums:
   6:         if num > 10:
   7:             odd_digits = (1, 3, 5, 7, 9)
   8:             number_as_string = str(num)
-  9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits):
+  9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[+1]) in odd_digits):
  10:                 count += 1
  11:     
  12:     return count
--------------------------------------------------------------------------------
[0.00671 s] survived
   - [#   3] ASR script_NDS_146: 
--------------------------------------------------------------------------------
   6:         if num > 10:
   7:             odd_digits = (1, 3, 5, 7, 9)
   8:             number_as_string = str(num)
   9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits):
- 10:                 count += 1
+ 10:                 count -= 1
  11:     
  12:     return count
--------------------------------------------------------------------------------
[0.00838 s] survived
   - [#   4] COI script_NDS_146: 
--------------------------------------------------------------------------------
   2:     
   3:     
   4:     count = 0
   5:     for num in nums:
-  6:         if num > 10:
+  6:         if not (num > 10):
   7:             odd_digits = (1, 3, 5, 7, 9)
   8:             number_as_string = str(num)
   9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits):
  10:                 count += 1
--------------------------------------------------------------------------------
[0.00501 s] survived
   - [#   5] COI script_NDS_146: 
--------------------------------------------------------------------------------
   5:     for num in nums:
   6:         if num > 10:
   7:             odd_digits = (1, 3, 5, 7, 9)
   8:             number_as_string = str(num)
-  9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits):
+  9:             if not ((int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits)):
  10:                 count += 1
  11:     
  12:     return count
--------------------------------------------------------------------------------
[0.00734 s] survived
   - [#   6] COI script_NDS_146: 
--------------------------------------------------------------------------------
   5:     for num in nums:
   6:         if num > 10:
   7:             odd_digits = (1, 3, 5, 7, 9)
   8:             number_as_string = str(num)
-  9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits):
+  9:             if (int(number_as_string[0]) not in odd_digits and int(number_as_string[-1]) in odd_digits):
  10:                 count += 1
  11:     
  12:     return count
--------------------------------------------------------------------------------
[0.00763 s] survived
   - [#   7] COI script_NDS_146: 
--------------------------------------------------------------------------------
   5:     for num in nums:
   6:         if num > 10:
   7:             odd_digits = (1, 3, 5, 7, 9)
   8:             number_as_string = str(num)
-  9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits):
+  9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) not in odd_digits):
  10:                 count += 1
  11:     
  12:     return count
--------------------------------------------------------------------------------
[0.00753 s] survived
   - [#   8] LCR script_NDS_146: 
--------------------------------------------------------------------------------
   5:     for num in nums:
   6:         if num > 10:
   7:             odd_digits = (1, 3, 5, 7, 9)
   8:             number_as_string = str(num)
-  9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits):
+  9:             if (int(number_as_string[0]) in odd_digits or int(number_as_string[-1]) in odd_digits):
  10:                 count += 1
  11:     
  12:     return count
--------------------------------------------------------------------------------
[0.00820 s] survived
   - [#   9] ROR script_NDS_146: 
--------------------------------------------------------------------------------
   2:     
   3:     
   4:     count = 0
   5:     for num in nums:
-  6:         if num > 10:
+  6:         if num < 10:
   7:             odd_digits = (1, 3, 5, 7, 9)
   8:             number_as_string = str(num)
   9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits):
  10:                 count += 1
--------------------------------------------------------------------------------
[0.00665 s] survived
   - [#  10] ROR script_NDS_146: 
--------------------------------------------------------------------------------
   2:     
   3:     
   4:     count = 0
   5:     for num in nums:
-  6:         if num > 10:
+  6:         if num >= 10:
   7:             odd_digits = (1, 3, 5, 7, 9)
   8:             number_as_string = str(num)
   9:             if (int(number_as_string[0]) in odd_digits and int(number_as_string[-1]) in odd_digits):
  10:                 count += 1
--------------------------------------------------------------------------------
[0.00659 s] survived
[*] Mutation score [0.28871 s]: 0.0%
   - all: 10
   - killed: 0 (0.0%)
   - survived: 10 (100.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
