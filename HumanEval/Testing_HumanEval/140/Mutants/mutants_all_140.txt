[*] Start mutation process:
   - targets: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/140/script_NDS_140.py
   - tests: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/140/Copilot/test_140_cp_few_shot.py
[*] 0 tests passed:
   - test_140_cp_few_shot [0.00007 s]
[*] Start mutants generation and execution:
   - [#   1] AOR script_NDS_140: 
--------------------------------------------------------------------------------
   6:     while i < len(text):
   7:         if text[i] == ' ':
   8:             end += 1
   9:         else:
- 10:             if end - start > 2:
+ 10:             if end + start > 2:
  11:                 new_text += '-' + text[i]
  12:             elif end - start > 0:
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
--------------------------------------------------------------------------------
[0.00647 s] survived
   - [#   2] AOR script_NDS_140: 
--------------------------------------------------------------------------------
   7:         if text[i] == ' ':
   8:             end += 1
   9:         else:
  10:             if end - start > 2:
- 11:                 new_text += '-' + text[i]
+ 11:                 new_text += '-' - text[i]
  12:             elif end - start > 0:
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
--------------------------------------------------------------------------------
[0.00552 s] survived
   - [#   3] AOR script_NDS_140: 
--------------------------------------------------------------------------------
   8:             end += 1
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
- 12:             elif end - start > 0:
+ 12:             elif end + start > 0:
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
--------------------------------------------------------------------------------
[0.00681 s] survived
   - [#   4] AOR script_NDS_140: 
--------------------------------------------------------------------------------
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
  12:             elif end - start > 0:
- 13:                 new_text += ('_' * (end - start)) + text[i]
+ 13:                 new_text += ('_' / (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
--------------------------------------------------------------------------------
[0.00542 s] survived
   - [#   5] AOR script_NDS_140: 
--------------------------------------------------------------------------------
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
  12:             elif end - start > 0:
- 13:                 new_text += ('_' * (end - start)) + text[i]
+ 13:                 new_text += ('_' // (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
--------------------------------------------------------------------------------
[0.00444 s] survived
   - [#   6] AOR script_NDS_140: 
--------------------------------------------------------------------------------
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
  12:             elif end - start > 0:
- 13:                 new_text += ('_' * (end - start)) + text[i]
+ 13:                 new_text += ('_' ** (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
--------------------------------------------------------------------------------
[0.00586 s] survived
   - [#   7] AOR script_NDS_140: 
--------------------------------------------------------------------------------
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
  12:             elif end - start > 0:
- 13:                 new_text += ('_' * (end - start)) + text[i]
+ 13:                 new_text += ('_' * (end + start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
--------------------------------------------------------------------------------
[0.00619 s] survived
   - [#   8] AOR script_NDS_140: 
--------------------------------------------------------------------------------
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
  12:             elif end - start > 0:
- 13:                 new_text += ('_' * (end - start)) + text[i]
+ 13:                 new_text += ('_' * (end - start)) - text[i]
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
--------------------------------------------------------------------------------
[0.00518 s] survived
   - [#   9] AOR script_NDS_140: 
--------------------------------------------------------------------------------
  12:             elif end - start > 0:
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
- 16:             (start, end) = (i + 1, i + 1)
+ 16:             (start, end) = (i - 1, i + 1)
  17:         i += 1
  18:     if end - start > 2:
  19:         new_text += '-'
  20:     elif end - start > 0:
--------------------------------------------------------------------------------
[0.00663 s] survived
   - [#  10] AOR script_NDS_140: 
--------------------------------------------------------------------------------
  12:             elif end - start > 0:
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
- 16:             (start, end) = (i + 1, i + 1)
+ 16:             (start, end) = (i + 1, i - 1)
  17:         i += 1
  18:     if end - start > 2:
  19:         new_text += '-'
  20:     elif end - start > 0:
--------------------------------------------------------------------------------
[0.00521 s] survived
   - [#  11] AOR script_NDS_140: 
--------------------------------------------------------------------------------
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
- 18:     if end - start > 2:
+ 18:     if end + start > 2:
  19:         new_text += '-'
  20:     elif end - start > 0:
  21:         new_text += '_'
  22:     return new_text
--------------------------------------------------------------------------------
[0.00886 s] survived
   - [#  12] AOR script_NDS_140: 
--------------------------------------------------------------------------------
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
  18:     if end - start > 2:
  19:         new_text += '-'
- 20:     elif end - start > 0:
+ 20:     elif end + start > 0:
  21:         new_text += '_'
  22:     return new_text
--------------------------------------------------------------------------------
[0.00831 s] survived
   - [#  13] ASR script_NDS_140: 
--------------------------------------------------------------------------------
   4:     i = 0
   5:     (start, end) = (0, 0)
   6:     while i < len(text):
   7:         if text[i] == ' ':
-  8:             end += 1
+  8:             end -= 1
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
  12:             elif end - start > 0:
--------------------------------------------------------------------------------
[0.00539 s] survived
   - [#  14] ASR script_NDS_140: 
--------------------------------------------------------------------------------
   7:         if text[i] == ' ':
   8:             end += 1
   9:         else:
  10:             if end - start > 2:
- 11:                 new_text += '-' + text[i]
+ 11:                 new_text -= '-' + text[i]
  12:             elif end - start > 0:
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
--------------------------------------------------------------------------------
[0.00487 s] survived
   - [#  15] ASR script_NDS_140: 
--------------------------------------------------------------------------------
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
  12:             elif end - start > 0:
- 13:                 new_text += ('_' * (end - start)) + text[i]
+ 13:                 new_text -= ('_' * (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
--------------------------------------------------------------------------------
[0.00647 s] survived
   - [#  16] ASR script_NDS_140: 
--------------------------------------------------------------------------------
  11:                 new_text += '-' + text[i]
  12:             elif end - start > 0:
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
- 15:                 new_text += text[i]
+ 15:                 new_text -= text[i]
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
  18:     if end - start > 2:
  19:         new_text += '-'
--------------------------------------------------------------------------------
[0.00596 s] survived
   - [#  17] ASR script_NDS_140: 
--------------------------------------------------------------------------------
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
- 17:         i += 1
+ 17:         i -= 1
  18:     if end - start > 2:
  19:         new_text += '-'
  20:     elif end - start > 0:
  21:         new_text += '_'
--------------------------------------------------------------------------------
[0.00683 s] survived
   - [#  18] ASR script_NDS_140: 
--------------------------------------------------------------------------------
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
  18:     if end - start > 2:
- 19:         new_text += '-'
+ 19:         new_text -= '-'
  20:     elif end - start > 0:
  21:         new_text += '_'
  22:     return new_text
--------------------------------------------------------------------------------
[0.00628 s] survived
   - [#  19] ASR script_NDS_140: 
--------------------------------------------------------------------------------
  17:         i += 1
  18:     if end - start > 2:
  19:         new_text += '-'
  20:     elif end - start > 0:
- 21:         new_text += '_'
+ 21:         new_text -= '_'
  22:     return new_text
--------------------------------------------------------------------------------
[0.00504 s] survived
   - [#  20] COI script_NDS_140: 
--------------------------------------------------------------------------------
   2:     
   3:     new_text = ''
   4:     i = 0
   5:     (start, end) = (0, 0)
-  6:     while i < len(text):
+  6:     while not (i < len(text)):
   7:         if text[i] == ' ':
   8:             end += 1
   9:         else:
  10:             if end - start > 2:
--------------------------------------------------------------------------------
[0.00671 s] survived
   - [#  21] COI script_NDS_140: 
--------------------------------------------------------------------------------
   3:     new_text = ''
   4:     i = 0
   5:     (start, end) = (0, 0)
   6:     while i < len(text):
-  7:         if text[i] == ' ':
+  7:         if not (text[i] == ' '):
   8:             end += 1
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
--------------------------------------------------------------------------------
[0.00564 s] survived
   - [#  22] COI script_NDS_140: 
--------------------------------------------------------------------------------
   6:     while i < len(text):
   7:         if text[i] == ' ':
   8:             end += 1
   9:         else:
- 10:             if end - start > 2:
+ 10:             if not (end - start > 2):
  11:                 new_text += '-' + text[i]
  12:             elif end - start > 0:
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
--------------------------------------------------------------------------------
[0.00650 s] survived
   - [#  23] COI script_NDS_140: 
--------------------------------------------------------------------------------
   8:             end += 1
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
- 12:             elif end - start > 0:
+ 12:             elif not (end - start > 0):
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
--------------------------------------------------------------------------------
[0.00520 s] survived
   - [#  24] COI script_NDS_140: 
--------------------------------------------------------------------------------
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
- 18:     if end - start > 2:
+ 18:     if not (end - start > 2):
  19:         new_text += '-'
  20:     elif end - start > 0:
  21:         new_text += '_'
  22:     return new_text
--------------------------------------------------------------------------------
[0.00631 s] survived
   - [#  25] COI script_NDS_140: 
--------------------------------------------------------------------------------
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
  18:     if end - start > 2:
  19:         new_text += '-'
- 20:     elif end - start > 0:
+ 20:     elif not (end - start > 0):
  21:         new_text += '_'
  22:     return new_text
--------------------------------------------------------------------------------
[0.00816 s] survived
   - [#  26] ROR script_NDS_140: 
--------------------------------------------------------------------------------
   2:     
   3:     new_text = ''
   4:     i = 0
   5:     (start, end) = (0, 0)
-  6:     while i < len(text):
+  6:     while i > len(text):
   7:         if text[i] == ' ':
   8:             end += 1
   9:         else:
  10:             if end - start > 2:
--------------------------------------------------------------------------------
[0.00463 s] survived
   - [#  27] ROR script_NDS_140: 
--------------------------------------------------------------------------------
   2:     
   3:     new_text = ''
   4:     i = 0
   5:     (start, end) = (0, 0)
-  6:     while i < len(text):
+  6:     while i <= len(text):
   7:         if text[i] == ' ':
   8:             end += 1
   9:         else:
  10:             if end - start > 2:
--------------------------------------------------------------------------------
[0.00591 s] survived
   - [#  28] ROR script_NDS_140: 
--------------------------------------------------------------------------------
   3:     new_text = ''
   4:     i = 0
   5:     (start, end) = (0, 0)
   6:     while i < len(text):
-  7:         if text[i] == ' ':
+  7:         if text[i] != ' ':
   8:             end += 1
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
--------------------------------------------------------------------------------
[0.00610 s] survived
   - [#  29] ROR script_NDS_140: 
--------------------------------------------------------------------------------
   6:     while i < len(text):
   7:         if text[i] == ' ':
   8:             end += 1
   9:         else:
- 10:             if end - start > 2:
+ 10:             if end - start < 2:
  11:                 new_text += '-' + text[i]
  12:             elif end - start > 0:
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
--------------------------------------------------------------------------------
[0.00640 s] survived
   - [#  30] ROR script_NDS_140: 
--------------------------------------------------------------------------------
   6:     while i < len(text):
   7:         if text[i] == ' ':
   8:             end += 1
   9:         else:
- 10:             if end - start > 2:
+ 10:             if end - start >= 2:
  11:                 new_text += '-' + text[i]
  12:             elif end - start > 0:
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
--------------------------------------------------------------------------------
[0.00572 s] survived
   - [#  31] ROR script_NDS_140: 
--------------------------------------------------------------------------------
   8:             end += 1
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
- 12:             elif end - start > 0:
+ 12:             elif end - start < 0:
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
--------------------------------------------------------------------------------
[0.00611 s] survived
   - [#  32] ROR script_NDS_140: 
--------------------------------------------------------------------------------
   8:             end += 1
   9:         else:
  10:             if end - start > 2:
  11:                 new_text += '-' + text[i]
- 12:             elif end - start > 0:
+ 12:             elif end - start >= 0:
  13:                 new_text += ('_' * (end - start)) + text[i]
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
--------------------------------------------------------------------------------
[0.00639 s] survived
   - [#  33] ROR script_NDS_140: 
--------------------------------------------------------------------------------
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
- 18:     if end - start > 2:
+ 18:     if end - start < 2:
  19:         new_text += '-'
  20:     elif end - start > 0:
  21:         new_text += '_'
  22:     return new_text
--------------------------------------------------------------------------------
[0.00623 s] survived
   - [#  34] ROR script_NDS_140: 
--------------------------------------------------------------------------------
  14:             else:
  15:                 new_text += text[i]
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
- 18:     if end - start > 2:
+ 18:     if end - start >= 2:
  19:         new_text += '-'
  20:     elif end - start > 0:
  21:         new_text += '_'
  22:     return new_text
--------------------------------------------------------------------------------
[0.00741 s] survived
   - [#  35] ROR script_NDS_140: 
--------------------------------------------------------------------------------
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
  18:     if end - start > 2:
  19:         new_text += '-'
- 20:     elif end - start > 0:
+ 20:     elif end - start < 0:
  21:         new_text += '_'
  22:     return new_text
--------------------------------------------------------------------------------
[0.00506 s] survived
   - [#  36] ROR script_NDS_140: 
--------------------------------------------------------------------------------
  16:             (start, end) = (i + 1, i + 1)
  17:         i += 1
  18:     if end - start > 2:
  19:         new_text += '-'
- 20:     elif end - start > 0:
+ 20:     elif end - start >= 0:
  21:         new_text += '_'
  22:     return new_text
--------------------------------------------------------------------------------
[0.00606 s] survived
[*] Mutation score [1.16582 s]: 0.0%
   - all: 36
   - killed: 0 (0.0%)
   - survived: 36 (100.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
