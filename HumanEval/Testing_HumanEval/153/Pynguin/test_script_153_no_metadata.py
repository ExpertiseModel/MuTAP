# Automatically generated by Pynguin.
import script_153 as module_0


def test_case_0():
    str_0 = "n"
    var_0 = module_0.Strongest_Extension(str_0, str_0)
    assert var_0 == "n.n"
    var_1 = module_0.Strongest_Extension(str_0, str_0)
    assert var_1 == "n.n"



def test_case_1():
    str_0 = "mioIL="
    var_0 = module_0.Strongest_Extension(str_0, str_0)
    assert var_0 == "mioIL=.I"
    var_1 = module_0.Strongest_Extension(str_0, var_0)
    assert var_1 == "mioIL=.I"
    var_2 = module_0.Strongest_Extension(var_1, var_1)
    assert var_2 == "mioIL=.I.I"
    var_3 = module_0.Strongest_Extension(str_0, var_1)
    assert var_3 == "mioIL=.I"
    var_4 = module_0.Strongest_Extension(var_0, var_0)
    assert var_4 == "mioIL=.I.I"
    var_5 = module_0.Strongest_Extension(var_4, str_0)
    assert var_5 == "mioIL=.I.I.I"
   



def test_case_2():
    str_0 = "+~&`\r\\5^?"
    var_0 = module_0.Strongest_Extension(str_0, str_0)
    assert var_0 == "+~&`\r\\5^?.+"
    var_1 = module_0.Strongest_Extension(str_0, str_0)
    assert var_1 == "+~&`\r\\5^?.+"
    var_2 = module_0.Strongest_Extension(str_0, var_0)
    assert var_2 == "+~&`\r\\5^?.+"
    none_type_0 = None
    var_3 = module_0.Strongest_Extension(var_1, var_1)
    assert var_3 == "+~&`\r\\5^?.+.+"
  


def test_case_3():
    str_0 = "Up?<Qo)~8g&@Q"
    var_0 = module_0.Strongest_Extension(str_0, str_0)
    assert var_0 == "Up?<Qo)~8g&@Q.U"
    