[*] Start mutation process:
   - targets: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/123/script_NDS_123.py
   - tests: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/123/Copilot/test_123_cp_few_shot.py
[*] 0 tests passed:
   - test_123_cp_few_shot [0.00006 s]
[*] Start mutants generation and execution:
   - [#   1] AOR script_NDS_123: 
--------------------------------------------------------------------------------
   1: def get_odd_collatz(n):
   2:     
-  3:     if n % 2 == 0:
+  3:     if n * 2 == 0:
   4:         odd_collatz = []
   5:     else:
   6:         odd_collatz = [n]
   7:     while n > 1:
--------------------------------------------------------------------------------
[0.00830 s] survived
   - [#   2] AOR script_NDS_123: 
--------------------------------------------------------------------------------
   4:         odd_collatz = []
   5:     else:
   6:         odd_collatz = [n]
   7:     while n > 1:
-  8:         if n % 2 == 0:
+  8:         if n * 2 == 0:
   9:             n = n / 2
  10:         else:
  11:             n = (n * 3) + 1
  12:         
--------------------------------------------------------------------------------
[0.00542 s] survived
   - [#   3] AOR script_NDS_123: 
--------------------------------------------------------------------------------
   5:     else:
   6:         odd_collatz = [n]
   7:     while n > 1:
   8:         if n % 2 == 0:
-  9:             n = n / 2
+  9:             n = n // 2
  10:         else:
  11:             n = (n * 3) + 1
  12:         
  13:         if n % 2 == 1:
--------------------------------------------------------------------------------
[0.00531 s] survived
   - [#   4] AOR script_NDS_123: 
--------------------------------------------------------------------------------
   5:     else:
   6:         odd_collatz = [n]
   7:     while n > 1:
   8:         if n % 2 == 0:
-  9:             n = n / 2
+  9:             n = n * 2
  10:         else:
  11:             n = (n * 3) + 1
  12:         
  13:         if n % 2 == 1:
--------------------------------------------------------------------------------
[0.00640 s] survived
   - [#   5] AOR script_NDS_123: 
--------------------------------------------------------------------------------
   7:     while n > 1:
   8:         if n % 2 == 0:
   9:             n = n / 2
  10:         else:
- 11:             n = (n * 3) + 1
+ 11:             n = (n / 3) + 1
  12:         
  13:         if n % 2 == 1:
  14:             odd_collatz.append(int(n))
  15:     
--------------------------------------------------------------------------------
[0.00766 s] survived
   - [#   6] AOR script_NDS_123: 
--------------------------------------------------------------------------------
   7:     while n > 1:
   8:         if n % 2 == 0:
   9:             n = n / 2
  10:         else:
- 11:             n = (n * 3) + 1
+ 11:             n = (n // 3) + 1
  12:         
  13:         if n % 2 == 1:
  14:             odd_collatz.append(int(n))
  15:     
--------------------------------------------------------------------------------
[0.00601 s] survived
   - [#   7] AOR script_NDS_123: 
--------------------------------------------------------------------------------
   7:     while n > 1:
   8:         if n % 2 == 0:
   9:             n = n / 2
  10:         else:
- 11:             n = (n * 3) + 1
+ 11:             n = (n ** 3) + 1
  12:         
  13:         if n % 2 == 1:
  14:             odd_collatz.append(int(n))
  15:     
--------------------------------------------------------------------------------
[0.00547 s] survived
   - [#   8] AOR script_NDS_123: 
--------------------------------------------------------------------------------
   7:     while n > 1:
   8:         if n % 2 == 0:
   9:             n = n / 2
  10:         else:
- 11:             n = (n * 3) + 1
+ 11:             n = (n * 3) - 1
  12:         
  13:         if n % 2 == 1:
  14:             odd_collatz.append(int(n))
  15:     
--------------------------------------------------------------------------------
[0.00580 s] survived
   - [#   9] AOR script_NDS_123: 
--------------------------------------------------------------------------------
   9:             n = n / 2
  10:         else:
  11:             n = (n * 3) + 1
  12:         
- 13:         if n % 2 == 1:
+ 13:         if n * 2 == 1:
  14:             odd_collatz.append(int(n))
  15:     
  16:     return sorted(odd_collatz)
--------------------------------------------------------------------------------
[0.00943 s] survived
   - [#  10] COI script_NDS_123: 
--------------------------------------------------------------------------------
   1: def get_odd_collatz(n):
   2:     
-  3:     if n % 2 == 0:
+  3:     if not (n % 2 == 0):
   4:         odd_collatz = []
   5:     else:
   6:         odd_collatz = [n]
   7:     while n > 1:
--------------------------------------------------------------------------------
[0.00754 s] survived
   - [#  11] COI script_NDS_123: 
--------------------------------------------------------------------------------
   3:     if n % 2 == 0:
   4:         odd_collatz = []
   5:     else:
   6:         odd_collatz = [n]
-  7:     while n > 1:
+  7:     while not (n > 1):
   8:         if n % 2 == 0:
   9:             n = n / 2
  10:         else:
  11:             n = (n * 3) + 1
--------------------------------------------------------------------------------
[0.00714 s] survived
   - [#  12] COI script_NDS_123: 
--------------------------------------------------------------------------------
   4:         odd_collatz = []
   5:     else:
   6:         odd_collatz = [n]
   7:     while n > 1:
-  8:         if n % 2 == 0:
+  8:         if not (n % 2 == 0):
   9:             n = n / 2
  10:         else:
  11:             n = (n * 3) + 1
  12:         
--------------------------------------------------------------------------------
[0.00512 s] survived
   - [#  13] COI script_NDS_123: 
--------------------------------------------------------------------------------
   9:             n = n / 2
  10:         else:
  11:             n = (n * 3) + 1
  12:         
- 13:         if n % 2 == 1:
+ 13:         if not (n % 2 == 1):
  14:             odd_collatz.append(int(n))
  15:     
  16:     return sorted(odd_collatz)
--------------------------------------------------------------------------------
[0.00648 s] survived
   - [#  14] ROR script_NDS_123: 
--------------------------------------------------------------------------------
   1: def get_odd_collatz(n):
   2:     
-  3:     if n % 2 == 0:
+  3:     if n % 2 != 0:
   4:         odd_collatz = []
   5:     else:
   6:         odd_collatz = [n]
   7:     while n > 1:
--------------------------------------------------------------------------------
[0.00773 s] survived
   - [#  15] ROR script_NDS_123: 
--------------------------------------------------------------------------------
   3:     if n % 2 == 0:
   4:         odd_collatz = []
   5:     else:
   6:         odd_collatz = [n]
-  7:     while n > 1:
+  7:     while n < 1:
   8:         if n % 2 == 0:
   9:             n = n / 2
  10:         else:
  11:             n = (n * 3) + 1
--------------------------------------------------------------------------------
[0.00544 s] survived
   - [#  16] ROR script_NDS_123: 
--------------------------------------------------------------------------------
   3:     if n % 2 == 0:
   4:         odd_collatz = []
   5:     else:
   6:         odd_collatz = [n]
-  7:     while n > 1:
+  7:     while n >= 1:
   8:         if n % 2 == 0:
   9:             n = n / 2
  10:         else:
  11:             n = (n * 3) + 1
--------------------------------------------------------------------------------
[0.00606 s] survived
   - [#  17] ROR script_NDS_123: 
--------------------------------------------------------------------------------
   4:         odd_collatz = []
   5:     else:
   6:         odd_collatz = [n]
   7:     while n > 1:
-  8:         if n % 2 == 0:
+  8:         if n % 2 != 0:
   9:             n = n / 2
  10:         else:
  11:             n = (n * 3) + 1
  12:         
--------------------------------------------------------------------------------
[0.00671 s] survived
   - [#  18] ROR script_NDS_123: 
--------------------------------------------------------------------------------
   9:             n = n / 2
  10:         else:
  11:             n = (n * 3) + 1
  12:         
- 13:         if n % 2 == 1:
+ 13:         if n % 2 != 1:
  14:             odd_collatz.append(int(n))
  15:     
  16:     return sorted(odd_collatz)
--------------------------------------------------------------------------------
[0.00619 s] survived
[*] Mutation score [0.44006 s]: 0.0%
   - all: 18
   - killed: 0 (0.0%)
   - survived: 18 (100.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
