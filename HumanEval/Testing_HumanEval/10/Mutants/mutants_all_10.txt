[*] Start mutation process:
   - targets: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/10/script_NDS_10.py
   - tests: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/10/Copilot/test_10_cp_few_shot.py
[*] 0 tests passed:
   - test_10_cp_few_shot [0.00006 s]
[*] Start mutants generation and execution:
   - [#   1] AOD script_NDS_10: 
--------------------------------------------------------------------------------
   1: def is_palindrome(string: str) -> bool:
   2:     
-  3:     return string == string[::-1]
+  3:     return string == string[::1]
   4: 
   5: 
   6: def make_palindrome(string: str) -> str:
   7:     
--------------------------------------------------------------------------------
[0.00554 s] survived
   - [#   2] AOD script_NDS_10: 
--------------------------------------------------------------------------------
  12:     
  13:     while not (is_palindrome(string[beginning_of_suffix:])):
  14:         beginning_of_suffix += 1
  15:     
- 16:     return string + string[:beginning_of_suffix][::-1]
+ 16:     return string + string[:beginning_of_suffix][::1]
--------------------------------------------------------------------------------
[0.00648 s] survived
   - [#   3] AOR script_NDS_10: 
--------------------------------------------------------------------------------
   1: def is_palindrome(string: str) -> bool:
   2:     
-  3:     return string == string[::-1]
+  3:     return string == string[::+1]
   4: 
   5: 
   6: def make_palindrome(string: str) -> str:
   7:     
--------------------------------------------------------------------------------
[0.00690 s] survived
   - [#   4] AOR script_NDS_10: 
--------------------------------------------------------------------------------
  12:     
  13:     while not (is_palindrome(string[beginning_of_suffix:])):
  14:         beginning_of_suffix += 1
  15:     
- 16:     return string + string[:beginning_of_suffix][::-1]
+ 16:     return string - string[:beginning_of_suffix][::-1]
--------------------------------------------------------------------------------
[0.00747 s] survived
   - [#   5] AOR script_NDS_10: 
--------------------------------------------------------------------------------
  12:     
  13:     while not (is_palindrome(string[beginning_of_suffix:])):
  14:         beginning_of_suffix += 1
  15:     
- 16:     return string + string[:beginning_of_suffix][::-1]
+ 16:     return string + string[:beginning_of_suffix][::+1]
--------------------------------------------------------------------------------
[0.00621 s] survived
   - [#   6] ASR script_NDS_10: 
--------------------------------------------------------------------------------
  10:     
  11:     beginning_of_suffix = 0
  12:     
  13:     while not (is_palindrome(string[beginning_of_suffix:])):
- 14:         beginning_of_suffix += 1
+ 14:         beginning_of_suffix -= 1
  15:     
  16:     return string + string[:beginning_of_suffix][::-1]
--------------------------------------------------------------------------------
[0.00477 s] survived
   - [#   7] COD script_NDS_10: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: def make_palindrome(string: str) -> str:
   7:     
-  8:     if not string:
+  8:     if string:
   9:         return ''
  10:     
  11:     beginning_of_suffix = 0
  12:     
--------------------------------------------------------------------------------
[0.00671 s] survived
   - [#   8] COD script_NDS_10: 
--------------------------------------------------------------------------------
   9:         return ''
  10:     
  11:     beginning_of_suffix = 0
  12:     
- 13:     while not (is_palindrome(string[beginning_of_suffix:])):
+ 13:     while is_palindrome(string[beginning_of_suffix:]):
  14:         beginning_of_suffix += 1
  15:     
  16:     return string + string[:beginning_of_suffix][::-1]
--------------------------------------------------------------------------------
[0.00621 s] survived
   - [#   9] COI script_NDS_10: 
--------------------------------------------------------------------------------
   4: 
   5: 
   6: def make_palindrome(string: str) -> str:
   7:     
-  8:     if not string:
+  8:     if not ((not string)):
   9:         return ''
  10:     
  11:     beginning_of_suffix = 0
  12:     
--------------------------------------------------------------------------------
[0.00624 s] survived
   - [#  10] COI script_NDS_10: 
--------------------------------------------------------------------------------
   9:         return ''
  10:     
  11:     beginning_of_suffix = 0
  12:     
- 13:     while not (is_palindrome(string[beginning_of_suffix:])):
+ 13:     while not ((not (is_palindrome(string[beginning_of_suffix:])))):
  14:         beginning_of_suffix += 1
  15:     
  16:     return string + string[:beginning_of_suffix][::-1]
--------------------------------------------------------------------------------
[0.00642 s] survived
   - [#  11] ROR script_NDS_10: 
--------------------------------------------------------------------------------
   1: def is_palindrome(string: str) -> bool:
   2:     
-  3:     return string == string[::-1]
+  3:     return string != string[::-1]
   4: 
   5: 
   6: def make_palindrome(string: str) -> str:
   7:     
--------------------------------------------------------------------------------
[0.00525 s] survived
   - [#  12] SIR script_NDS_10: 
--------------------------------------------------------------------------------
   1: def is_palindrome(string: str) -> bool:
   2:     
-  3:     return string == string[::-1]
+  3:     return string == string[:]
   4: 
   5: 
   6: def make_palindrome(string: str) -> str:
   7:     
--------------------------------------------------------------------------------
[0.00593 s] survived
   - [#  13] SIR script_NDS_10: 
--------------------------------------------------------------------------------
   9:         return ''
  10:     
  11:     beginning_of_suffix = 0
  12:     
- 13:     while not (is_palindrome(string[beginning_of_suffix:])):
+ 13:     while not (is_palindrome(string[:])):
  14:         beginning_of_suffix += 1
  15:     
  16:     return string + string[:beginning_of_suffix][::-1]
--------------------------------------------------------------------------------
[0.00560 s] survived
   - [#  14] SIR script_NDS_10: 
--------------------------------------------------------------------------------
  12:     
  13:     while not (is_palindrome(string[beginning_of_suffix:])):
  14:         beginning_of_suffix += 1
  15:     
- 16:     return string + string[:beginning_of_suffix][::-1]
+ 16:     return string + string[:][::-1]
--------------------------------------------------------------------------------
[0.00729 s] survived
   - [#  15] SIR script_NDS_10: 
--------------------------------------------------------------------------------
  12:     
  13:     while not (is_palindrome(string[beginning_of_suffix:])):
  14:         beginning_of_suffix += 1
  15:     
- 16:     return string + string[:beginning_of_suffix][::-1]
+ 16:     return string + string[:beginning_of_suffix][:]
--------------------------------------------------------------------------------
[0.00541 s] survived
[*] Mutation score [0.34499 s]: 0.0%
   - all: 15
   - killed: 0 (0.0%)
   - survived: 15 (100.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
