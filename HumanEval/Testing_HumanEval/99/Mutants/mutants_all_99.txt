[*] Start mutation process:
   - targets: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/99/script_NDS_99.py
   - tests: /home/arghavan/Git_Code/codex_test/HumanEval/Testing_HumanEval/99/Copilot/test_99_cp_few_shot.py
[*] 0 tests passed:
   - test_99_cp_few_shot [0.00007 s]
[*] Start mutants generation and execution:
   - [#   1] AOD script_NDS_99: 
--------------------------------------------------------------------------------
   3:     from math import floor, ceil
   4:     
   5:     if value.count('.') == 1:
   6:         
-  7:         while value[-1] == '0':
+  7:         while value[1] == '0':
   8:             value = value[:-1]
   9:     
  10:     num = float(value)
  11:     if value[-2:] == '.5':
--------------------------------------------------------------------------------
[0.00658 s] survived
   - [#   2] AOD script_NDS_99: 
--------------------------------------------------------------------------------
   4:     
   5:     if value.count('.') == 1:
   6:         
   7:         while value[-1] == '0':
-  8:             value = value[:-1]
+  8:             value = value[:1]
   9:     
  10:     num = float(value)
  11:     if value[-2:] == '.5':
  12:         if num > 0:
--------------------------------------------------------------------------------
[0.00558 s] survived
   - [#   3] AOD script_NDS_99: 
--------------------------------------------------------------------------------
   7:         while value[-1] == '0':
   8:             value = value[:-1]
   9:     
  10:     num = float(value)
- 11:     if value[-2:] == '.5':
+ 11:     if value[2:] == '.5':
  12:         if num > 0:
  13:             res = ceil(num)
  14:         else:
  15:             res = floor(num)
--------------------------------------------------------------------------------
[0.00471 s] survived
   - [#   4] AOR script_NDS_99: 
--------------------------------------------------------------------------------
   3:     from math import floor, ceil
   4:     
   5:     if value.count('.') == 1:
   6:         
-  7:         while value[-1] == '0':
+  7:         while value[+1] == '0':
   8:             value = value[:-1]
   9:     
  10:     num = float(value)
  11:     if value[-2:] == '.5':
--------------------------------------------------------------------------------
[0.00548 s] survived
   - [#   5] AOR script_NDS_99: 
--------------------------------------------------------------------------------
   4:     
   5:     if value.count('.') == 1:
   6:         
   7:         while value[-1] == '0':
-  8:             value = value[:-1]
+  8:             value = value[:+1]
   9:     
  10:     num = float(value)
  11:     if value[-2:] == '.5':
  12:         if num > 0:
--------------------------------------------------------------------------------
[0.00590 s] survived
   - [#   6] AOR script_NDS_99: 
--------------------------------------------------------------------------------
   7:         while value[-1] == '0':
   8:             value = value[:-1]
   9:     
  10:     num = float(value)
- 11:     if value[-2:] == '.5':
+ 11:     if value[+2:] == '.5':
  12:         if num > 0:
  13:             res = ceil(num)
  14:         else:
  15:             res = floor(num)
--------------------------------------------------------------------------------
[0.00816 s] survived
   - [#   7] COI script_NDS_99: 
--------------------------------------------------------------------------------
   1: def closest_integer(value):
   2:     
   3:     from math import floor, ceil
   4:     
-  5:     if value.count('.') == 1:
+  5:     if not (value.count('.') == 1):
   6:         
   7:         while value[-1] == '0':
   8:             value = value[:-1]
   9:     
--------------------------------------------------------------------------------
[0.00631 s] survived
   - [#   8] COI script_NDS_99: 
--------------------------------------------------------------------------------
   3:     from math import floor, ceil
   4:     
   5:     if value.count('.') == 1:
   6:         
-  7:         while value[-1] == '0':
+  7:         while not (value[-1] == '0'):
   8:             value = value[:-1]
   9:     
  10:     num = float(value)
  11:     if value[-2:] == '.5':
--------------------------------------------------------------------------------
[0.00744 s] survived
   - [#   9] COI script_NDS_99: 
--------------------------------------------------------------------------------
   7:         while value[-1] == '0':
   8:             value = value[:-1]
   9:     
  10:     num = float(value)
- 11:     if value[-2:] == '.5':
+ 11:     if not (value[-2:] == '.5'):
  12:         if num > 0:
  13:             res = ceil(num)
  14:         else:
  15:             res = floor(num)
--------------------------------------------------------------------------------
[0.00521 s] survived
   - [#  10] COI script_NDS_99: 
--------------------------------------------------------------------------------
   8:             value = value[:-1]
   9:     
  10:     num = float(value)
  11:     if value[-2:] == '.5':
- 12:         if num > 0:
+ 12:         if not (num > 0):
  13:             res = ceil(num)
  14:         else:
  15:             res = floor(num)
  16:     elif len(value) > 0:
--------------------------------------------------------------------------------
[0.00541 s] survived
   - [#  11] COI script_NDS_99: 
--------------------------------------------------------------------------------
  12:         if num > 0:
  13:             res = ceil(num)
  14:         else:
  15:             res = floor(num)
- 16:     elif len(value) > 0:
+ 16:     elif not (len(value) > 0):
  17:         res = int(round(num))
  18:     else:
  19:         res = 0
  20:     
--------------------------------------------------------------------------------
[0.00626 s] survived
   - [#  12] ROR script_NDS_99: 
--------------------------------------------------------------------------------
   1: def closest_integer(value):
   2:     
   3:     from math import floor, ceil
   4:     
-  5:     if value.count('.') == 1:
+  5:     if value.count('.') != 1:
   6:         
   7:         while value[-1] == '0':
   8:             value = value[:-1]
   9:     
--------------------------------------------------------------------------------
[0.00521 s] survived
   - [#  13] ROR script_NDS_99: 
--------------------------------------------------------------------------------
   3:     from math import floor, ceil
   4:     
   5:     if value.count('.') == 1:
   6:         
-  7:         while value[-1] == '0':
+  7:         while value[-1] != '0':
   8:             value = value[:-1]
   9:     
  10:     num = float(value)
  11:     if value[-2:] == '.5':
--------------------------------------------------------------------------------
[0.00707 s] survived
   - [#  14] ROR script_NDS_99: 
--------------------------------------------------------------------------------
   7:         while value[-1] == '0':
   8:             value = value[:-1]
   9:     
  10:     num = float(value)
- 11:     if value[-2:] == '.5':
+ 11:     if value[-2:] != '.5':
  12:         if num > 0:
  13:             res = ceil(num)
  14:         else:
  15:             res = floor(num)
--------------------------------------------------------------------------------
[0.00710 s] survived
   - [#  15] ROR script_NDS_99: 
--------------------------------------------------------------------------------
   8:             value = value[:-1]
   9:     
  10:     num = float(value)
  11:     if value[-2:] == '.5':
- 12:         if num > 0:
+ 12:         if num < 0:
  13:             res = ceil(num)
  14:         else:
  15:             res = floor(num)
  16:     elif len(value) > 0:
--------------------------------------------------------------------------------
[0.00616 s] survived
   - [#  16] ROR script_NDS_99: 
--------------------------------------------------------------------------------
   8:             value = value[:-1]
   9:     
  10:     num = float(value)
  11:     if value[-2:] == '.5':
- 12:         if num > 0:
+ 12:         if num >= 0:
  13:             res = ceil(num)
  14:         else:
  15:             res = floor(num)
  16:     elif len(value) > 0:
--------------------------------------------------------------------------------
[0.00706 s] survived
   - [#  17] ROR script_NDS_99: 
--------------------------------------------------------------------------------
  12:         if num > 0:
  13:             res = ceil(num)
  14:         else:
  15:             res = floor(num)
- 16:     elif len(value) > 0:
+ 16:     elif len(value) < 0:
  17:         res = int(round(num))
  18:     else:
  19:         res = 0
  20:     
--------------------------------------------------------------------------------
[0.00686 s] survived
   - [#  18] ROR script_NDS_99: 
--------------------------------------------------------------------------------
  12:         if num > 0:
  13:             res = ceil(num)
  14:         else:
  15:             res = floor(num)
- 16:     elif len(value) > 0:
+ 16:     elif len(value) >= 0:
  17:         res = int(round(num))
  18:     else:
  19:         res = 0
  20:     
--------------------------------------------------------------------------------
[0.00871 s] survived
   - [#  19] SIR script_NDS_99: 
--------------------------------------------------------------------------------
   4:     
   5:     if value.count('.') == 1:
   6:         
   7:         while value[-1] == '0':
-  8:             value = value[:-1]
+  8:             value = value[:]
   9:     
  10:     num = float(value)
  11:     if value[-2:] == '.5':
  12:         if num > 0:
--------------------------------------------------------------------------------
[0.00478 s] survived
   - [#  20] SIR script_NDS_99: 
--------------------------------------------------------------------------------
   7:         while value[-1] == '0':
   8:             value = value[:-1]
   9:     
  10:     num = float(value)
- 11:     if value[-2:] == '.5':
+ 11:     if value[:] == '.5':
  12:         if num > 0:
  13:             res = ceil(num)
  14:         else:
  15:             res = floor(num)
--------------------------------------------------------------------------------
[0.00685 s] survived
[*] Mutation score [0.57139 s]: 0.0%
   - all: 20
   - killed: 0 (0.0%)
   - survived: 20 (100.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
