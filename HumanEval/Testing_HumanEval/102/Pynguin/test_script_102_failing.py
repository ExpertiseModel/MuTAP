# Automatically generated by Pynguin.
import pytest
import script_102 as module_0


def test_case_0():
    try:
        str_0 = 'Qn\x0bh\x0b?~?R'
        str_1 = "Ma^[(h@Ifm'O"
        var_0 = module_0.choose_num(str_0, str_1)
        assert var_0 == -1
        bytes_0 = (
            b'_j\xb3\x8c\xe9x\xc1\x89\xcd\xaa\xd37\xc3?\xae\xc1\x98\xdf\xc9')
        str_2 = "9+e7)#p,'jl"
        var_1 = module_0.choose_num(bytes_0, str_2)
    except BaseException:
        pass


def test_case_1():
    try:
        bool_0 = True
        float_0 = 1205.170231
        var_0 = module_0.choose_num(bool_0, float_0)
        assert var_0 == pytest.approx(1204.170231, abs=0.01, rel=0.01)
        int_0 = None
        bytes_0 = b')\xbdq\x8d\xb4m\x8f\x02'
        var_1 = module_0.choose_num(int_0, bytes_0)
    except BaseException:
        pass


def test_case_2():
    try:
        tuple_0 = ()
        bytes_0 = None
        var_0 = module_0.choose_num(tuple_0, bytes_0)
    except BaseException:
        pass


def test_case_3():
    try:
        float_0 = -1265.379
        var_0 = module_0.choose_num(float_0, float_0)
        assert var_0 == -1
        bytes_0 = (
            b'\xf5\x0f\x86\x08\xd6\xd8\x13\xf1\xd1\xab\x0c\xc3\x01i#\xd7\xa1;\x11\xb5'
            )
        var_1 = module_0.choose_num(bytes_0, bytes_0)
    except BaseException:
        pass


def test_case_4():
    try:
        list_0 = []
        bool_0 = False
        bool_1 = False
        var_0 = module_0.choose_num(bool_0, bool_1)
        assert var_0 is False
        float_0 = -1303.5946
        str_0 = 'rZqGC1ro f\t\nZv`:{'
        var_1 = module_0.choose_num(float_0, float_0)
        assert var_1 == -1
        var_2 = module_0.choose_num(list_0, str_0)
    except BaseException:
        pass
