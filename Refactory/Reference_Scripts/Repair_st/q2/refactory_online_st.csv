Question,Sampling Rate,Experiment ID,File Name,Status,Match (Rfty Code),Match (Ori Code),Buggy Code,Buggy Mutation,Refactored Correct Code,Original Correct File Name,Rule ID,Repair,Stru. Matching Time,Online Refactoring Time,GCR Time,Stru. Mutation Time,Block Mapping Time,Variable Mapping Time,Specification&Synthesis Time,Total Time,#Passed Test Case,#Test Case,RPS
question_2,100,0,wrong_2_363.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
        else :
            i = i
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
        else :
            i = i
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_145.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_counter = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            ref_counter += 1
        else :
            continue
    if ( ref_counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.853,0.158,0.000,0.000,0.194,0.403,1.632,17,17,1.078
question_2,100,0,wrong_2_230.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    return
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    return
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    days = [ birthday [ 1 ] for birthday in possible_birthdays ]
    return ( days . count ( date ) == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_275.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_days = [ ref_birthday [ 1 ] for ref_birthday in possible_birthdays ]
    return ( ref_days . count ( date ) == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.506,0.020,0.000,0.000,0.070,0.222,0.836,17,17,3.667
question_2,100,0,wrong_2_273.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            num += 1
    return ( num == 1 )
def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == month ) :
            num += 1
    return ( num == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and unique_day ( i [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            num += 1
    return ( num == 1 )
def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == month ) :
            num += 1
    return ( num == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and unique_day ( i [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and unique_day ( i [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_288.py', 'unique_month': 'correct_2_288.py', 'contains_unique_day': 'correct_2_012.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            num += 1
    return ( num == 1 )


def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            num += 1
    return ( num == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and unique_day ( i [ 1 ] , possible_birthdays ) ) :
            return True
    return False
",N/A,0.520,0.330,0.000,0.000,0.207,0.137,1.217,17,17,0.012
question_2,100,0,wrong_2_226.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for bday in possible_birthdays :
        if ( day == bday [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for bday in possible_birthdays :
        if ( month == bday [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for bday in possible_birthdays :
        if ( month == bday [ 0 ] ) :
            if unique_day ( bday [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for bday in possible_birthdays :
        if ( day == bday [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for bday in possible_birthdays :
        if ( month == bday [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for bday in possible_birthdays :
        if ( month == bday [ 0 ] ) :
            if unique_day ( bday [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for bday in possible_birthdays :
        if ( date == bday [ 1 ] ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for bday in possible_birthdays :
        if ( month == bday [ 0 ] ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    for bday in possible_birthdays :
        if ( month == bday [ 0 ] ) :
            if unique_day ( bday [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_138.py', 'unique_month': 'correct_2_138.py', 'contains_unique_day': 'correct_2_138.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for bday in possible_birthdays :
        if ( date == bday [ 1 ] ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for bday in possible_birthdays :
        if ( month == bday [ 0 ] ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for bday in possible_birthdays :
        if ( month == bday [ 0 ] ) :
            if unique_day ( bday [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.518,0.308,0.000,0.000,0.188,0.141,1.177,17,17,0.012
question_2,100,0,wrong_2_295.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_226.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.553,0.083,0.000,0.000,0.166,0.185,1.007,17,17,1.167
question_2,100,0,wrong_2_246.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x = ( x + ( i , ) )
    for a in x :
        if unique_day ( a [ 1 ] , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( day , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x = ( x + ( i , ) )
    for a in x :
        if unique_day ( a [ 1 ] , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_123.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            ref_result = ( ref_result + 1 )
        else :
            continue
    if ( ref_result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    x = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for a in range ( len ( x ) ) :
        if unique_day ( x [ a ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,0.529,0.322,0.000,0.000,0.313,1.147,2.346,17,17,0.296
question_2,100,0,wrong_2_014.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = 0
    for j in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ j ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_065.py', 'unique_month': 'correct_2_014.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,0.520,0.501,0.000,0.000,0.238,0.157,1.446,17,17,0.007
question_2,100,0,wrong_2_304.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    specific_set = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    get_days = tuple ( map ( ( lambda x : x [ 1 ] ) , specific_set ) )
    ans = tuple ( map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , get_days ) )
    if ( True in ans ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_107.py', 'unique_month': 'correct_2_103.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
    if ( True in ref_ans ) :
        return True
    else :
        return False
",N/A,0.504,0.207,0.000,0.000,0.204,0.406,1.343,12,17,N/A
question_2,100,0,wrong_2_007.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == days ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    month = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == days ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    month = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( day , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_014.py', 'unique_month': 'correct_2_109.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            ref_counter = ( ref_counter + 1 )
    if ( ref_counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,0.532,0.675,0.000,0.000,0.251,0.472,1.961,17,17,0.057
question_2,100,0,wrong_2_289.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( day ) == 1 )
def unique_month ( month , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( month ) == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    b = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            a += ( i , )
    for i in a :
        b = ( b or unique_day ( i [ 1 ] , possible_birthdays ) )
    return b


","def unique_day ( date , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( day ) == 1 )
def unique_month ( month , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( month ) == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    b = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            a += ( i , )
    for i in a :
        b = ( b or unique_day ( i [ 1 ] , possible_birthdays ) )
    return b


","def unique_day ( day , possible_birthdays ) :
    all_days = ( )
    for i in possible_birthdays :
        all_days += ( i [ 1 ] , )
    return ( all_days . count ( day ) == 1 )




def unique_month ( month , possible_birthdays ) :
    all_months = ( )
    for i in possible_birthdays :
        all_months += ( i [ 0 ] , )
    return ( all_months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    dayi = ( )
    result = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            dayi += ( i [ 1 ] , )
    for j in dayi :
        result = ( result or unique_day ( j , possible_birthdays ) )
    return result


","{'unique_day': 'correct_2_001.py', 'unique_month': 'correct_2_001.py', 'contains_unique_day': 'correct_2_123.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( date ) == 1 )


def unique_month ( month , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 0 ] , )
    return ( a . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    b = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            a += ( i [ 1 ] , )
    for ref_j in a :
        b = ( b or unique_day ( ref_j , possible_birthdays ) )
    return b
",N/A,0.527,0.037,0.000,0.000,0.267,0.304,1.160,17,17,0.102
question_2,100,0,wrong_2_331.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day in date ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( month in date ) :
            counter += 1
        if ( counter > 1 ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        ( months , day ) = date
        if unique_day ( day , possible_birthdays ) :
            return ( months == month )


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( day in date ) :
            counter += 1
        pass
    pass
    if ( counter > 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( month in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for date in possible_birthdays :
        ( months , day ) = date
        if unique_day ( day , possible_birthdays ) :
            return ( months == month )
        pass
    pass
","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day in date ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( ( birthday [ 0 ] == month ) and unique_day ( birthday [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_047.py', 'unique_month': 'correct_2_252.py', 'contains_unique_day': 'reference.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( day in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( month in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for ref_birthday in possible_birthdays :
        if ( ( ref_birthday [ 0 ] == month ) and unique_day ( ref_birthday [ 1 ] , possible_birthdays ) ) :
            return True
        pass
    return False
",N/A,4.177,0.784,0.000,0.002,0.253,0.315,5.553,17,17,0.420
question_2,100,0,wrong_2_326.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_017.py', 'unique_month': 'correct_2_017.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.726,0.384,0.000,0.000,0.215,0.129,1.479,17,17,0.381
question_2,100,0,wrong_2_034.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    tpl = ( )
    for i in possible_birthdays :
        tpl += ( i [ 1 ] , )
    if ( tpl . count ( date ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    tpl = ( )
    for j in possible_birthdays :
        tpl += ( j [ 0 ] , )
    if ( tpl . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    tpl = ( )
    for k in possible_birthdays :
        if ( k [ 0 ] == month ) :
            tpl += ( k [ 1 ] , )
    for l in tpl :
        if ( unique_day ( l , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    tpl = ( )
    for i in possible_birthdays :
        tpl += ( i [ 1 ] , )
    if ( tpl . count ( date ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    tpl = ( )
    for j in possible_birthdays :
        tpl += ( j [ 0 ] , )
    if ( tpl . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    tpl = ( )
    for k in possible_birthdays :
        if ( k [ 0 ] == month ) :
            tpl += ( k [ 1 ] , )
    for l in tpl :
        if ( unique_day ( l , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    possible_days = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            possible_days += ( i [ 1 ] , )
    for i in possible_days :
        if ( unique_day ( i , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_233.py', 'unique_month': 'correct_2_233.py', 'contains_unique_day': 'correct_2_022.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_b = [ ]
    for i in possible_birthdays :
        ref_b . append ( i [ 1 ] )
    if ( ref_b . count ( date ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    ref_b = [ ]
    for j in possible_birthdays :
        ref_b . append ( j [ 0 ] )
    if ( ref_b . count ( month ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    tpl = ( )
    for ref_i in possible_birthdays :
        if ( ref_i [ 0 ] == month ) :
            tpl += ( ref_i [ 1 ] , )
    for ref_i in tpl :
        if ( unique_day ( ref_i , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.505,0.396,0.000,0.000,0.261,1.031,2.222,17,17,0.240
question_2,100,0,wrong_2_080.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
    for i in result :
        if ( day == i [ 1 ] ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
    for i in result :
        if ( month == i [ 0 ] ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            result += ( i , )
    for i in result :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
        pass
    pass
    if ( result == 1 ) :
        pass
    else :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
        pass
    pass
    if ( result == 1 ) :
        pass
    else :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            result += ( i , )
        pass
    pass
    for i in result :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_271.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        pass
        if ( date == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
        pass
    pass
    if ( result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
        pass
    pass
    if ( result == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            result += ( i , )
        pass
    pass
    for i in result :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
",N/A,9.038,1.664,0.000,0.003,0.285,1.215,12.243,17,17,0.433
question_2,100,0,wrong_2_303.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == possile_birthdays [ 1 ] ) :
            count += 1
    if ( count == possible_birthdays [ 1 ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == possile_birthdays [ 1 ] ) :
            count += 1
    if ( count == possible_birthdays [ 1 ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    specific_set = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    get_days = tuple ( map ( ( lambda x : x [ 1 ] ) , specific_set ) )
    ans = tuple ( map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , get_days ) )
    if ( True in ans ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_107.py', 'unique_month': 'correct_2_103.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
    if ( True in ref_ans ) :
        return True
    else :
        return False
",N/A,0.797,0.350,0.000,0.000,0.135,0.593,1.899,12,17,N/A
question_2,100,0,wrong_2_194.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            y = ( y + ( i , ) )
    for a in y :
        if unique_day ( a [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            y = ( y + ( i , ) )
    for a in y :
        if unique_day ( a [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == month ) :
            result = ( result + ( birthdays , ) )
    for birthdayss in result :
        if unique_day ( birthdayss [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_123.py', 'contains_unique_day': 'correct_2_240.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            ref_result = ( ref_result + 1 )
        else :
            continue
    if ( ref_result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    x = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            y = ( y + ( i , ) )
    for a in y :
        if unique_day ( a [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.542,0.601,0.000,0.000,0.307,0.847,2.328,17,17,0.113
question_2,100,0,wrong_2_129.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x = ( x + ( i , ) )
    total = 0
    for i in x :
        total = ( total + unique_day ( i [ 1 ] , possible_birthdays ) )
    if ( total != 0 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x = ( x + ( i , ) )
    total = 0
    for i in x :
        total = ( total + unique_day ( i [ 1 ] , possible_birthdays ) )
    if ( total != 0 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    data = ( )
    number = 0
    for datas in possible_birthdays :
        if ( month in datas ) :
            data += ( datas , )
    for days in data :
        number += unique_day ( days [ 1 ] , possible_birthdays )
    if ( number >= 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_245.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    total = 0
    for ref_datas in possible_birthdays :
        if ( month in ref_datas ) :
            x += ( ref_datas , )
    for ref_days in x :
        total += unique_day ( ref_days [ 1 ] , possible_birthdays )
    if ( total != 0 ) :
        return True
    else :
        return False
",N/A,0.529,0.702,0.000,0.000,0.280,0.858,2.400,17,17,0.198
question_2,100,0,wrong_2_019.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    daysinmonth = ( )
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            daysinmonth += ( i [ 1 ] , )
    for i in daysinmonth :
        if unique_day ( i , possible_birthdays ) :
            count += 1
    return ( count == 1 )


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    daysinmonth = ( )
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            daysinmonth += ( i [ 1 ] , )
    for i in daysinmonth :
        if unique_day ( i , possible_birthdays ) :
            count += 1
    return ( count == 1 )


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            days += ( i [ 1 ] , )
    for i in days :
        if unique_day ( i , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_082.py', 'unique_month': 'correct_2_287.py', 'contains_unique_day': 'correct_2_287.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    daysinmonth = ( )
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            daysinmonth += ( i [ 1 ] , )
    for i in daysinmonth :
        if unique_day ( i , possible_birthdays ) :
            return True
    return ( count == 1 )
",N/A,0.533,0.696,0.000,0.000,0.249,0.209,1.715,17,17,0.039
question_2,100,0,wrong_2_337.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    while ( len ( bdaylist ) > 0 ) :
        single = bdaylist [ 0 ]
        if ( single [ 1 ] == day ) :
            count = ( count + 1 )
        if ( count == 2 ) :
            return False
            break
        bdaylist = bdaylist [ 1 : ]
    return True
def unique_month ( month , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    while ( len ( bdaylist ) > 0 ) :
        single = bdaylist [ 0 ]
        if ( single [ 0 ] == month ) :
            count = ( count + 1 )
        if ( count == 2 ) :
            return False
            break
        bdaylist = bdaylist [ 1 : ]
    return True
def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    while ( len ( bday_list ) > 0 ) :
        if ( bday_list [ 0 ] [ 0 ] == month ) :
            month_list = ( month_list + ( bday_list [ 0 ] , ) )
        bday_list = bday_list [ 1 : ]
    while ( len ( month_list ) > 0 ) :
        if unique_day ( month_list [ 0 ] [ 1 ] , possible_birthdays ) :
            return True
        month_list = month_list [ 1 : ]
    return False


","def unique_day ( date , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    for birthday in possible_birthdays :
        single = bdaylist [ 0 ]
        if ( single [ 1 ] == day ) :
            pass
        count = ( count + 1 )
    pass
    if ( count == 2 ) :
        return False
        break
    else :
        bdaylist = bdaylist [ 1 : ]
    return True


def unique_month ( month , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    for birthday in possible_birthdays :
        single = bdaylist [ 0 ]
        if ( single [ 0 ] == month ) :
            return True
        count = ( count + 1 )
    pass
    if ( count == 2 ) :
        return False
        break
    else :
        bdaylist = bdaylist [ 1 : ]
    return True


def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    for k in range ( len ( possible_birthdays ) ) :
        pass
        if ( bday_list [ 0 ] [ 0 ] == month ) :
            month_list = ( month_list + ( bday_list [ 0 ] , ) )
        bday_list = bday_list [ 1 : ]
    pass
    for l in range ( len ( x ) ) :
        pass
        if unique_day ( month_list [ 0 ] [ 1 ] , possible_birthdays ) :
            pass
        else :
            return True
        month_list = month_list [ 1 : ]
    return False
","def unique_day ( day , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            a = ( a + 1 )
    if ( a == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + 1 )
    if ( a == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_260.py', 'unique_month': 'correct_2_260.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    'Your solution here'
    ref_a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == date ) :
            ref_a = ( ref_a + 1 )
    pass
    if ( ref_a == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    ref_a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            ref_a = ( ref_a + 1 )
    pass
    if ( ref_a == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    for k in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            month_list = ( month_list + ( possible_birthdays [ k ] , ) )
    pass
    for l in range ( len ( month_list ) ) :
        pass
        if unique_day ( month_list [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,13.129,2.334,0.000,0.003,0.226,1.832,17.560,17,17,0.552
question_2,100,0,wrong_2_163.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count += 1
    if ( count > 1 ) :
        check = False
    else :
        check = True
    return check
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count > 1 ) :
        check = False
    else :
        check = True
    return check
def contains_unique_day ( month , possible_birthdays ) :
    birthdays = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            birthdays += ( i , )
    for j in birthdays :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count += 1
    if ( count > 1 ) :
        check = False
    else :
        check = True
    return check
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count > 1 ) :
        check = False
    else :
        check = True
    return check
def contains_unique_day ( month , possible_birthdays ) :
    birthdays = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            birthdays += ( i , )
    for j in birthdays :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_107.py', 'unique_month': 'correct_2_107.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    birthdays = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            birthdays += ( i , )
    for i in birthdays :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.873,1.049,0.000,0.000,0.267,0.584,2.804,17,17,0.144
question_2,100,0,wrong_2_214.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count >= 2 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count >= 2 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_243.py', 'unique_month': 'correct_2_243.py', 'contains_unique_day': 'correct_2_108.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count = ( count + 1 )
    if ( count != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count = ( count + 1 )
    if ( count != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.504,0.478,0.000,0.000,0.227,0.381,1.617,17,17,0.158
question_2,100,0,wrong_2_082.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
    for i in result :
        if ( day == i [ 1 ] ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
    for i in result :
        if ( month == i [ 0 ] ) :
            return False
    return True


","def unique_day ( day , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
        pass
    pass
    if ( result == 1 ) :
        pass
    else :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
        pass
    pass
    if ( result == 1 ) :
        pass
    else :
        pass
    return True
","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_271.py'}","{'unique_day': '', 'unique_month': ''}","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
        pass
    pass
    if ( result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
        pass
    pass
    if ( result == 1 ) :
        return True
    else :
        return False
",N/A,8.758,1.308,0.000,0.002,0.248,1.027,11.367,17,17,0.533
question_2,100,0,wrong_2_182.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.499,N/A,N/A,N/A
question_2,100,0,wrong_2_247.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            y = ( y + ( i , ) )
    for a in y :
        if unique_day ( a [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            y = ( y + ( i , ) )
    for a in y :
        if unique_day ( a [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == month ) :
            result = ( result + ( birthdays , ) )
    for birthdayss in result :
        if unique_day ( birthdayss [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_123.py', 'contains_unique_day': 'correct_2_240.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            ref_result = ( ref_result + 1 )
        else :
            continue
    if ( ref_result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    x = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            y = ( y + ( i , ) )
    for a in y :
        if unique_day ( a [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.846,0.570,0.000,0.000,0.310,0.769,2.525,17,17,0.113
question_2,100,0,wrong_2_225.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        birthday = i [ 1 ]
        if ( day == birthday ) :
            count = ( count + 1 )
        else :
            count = count
    if ( count > 1 ) :
        return False
    elif ( count <= 1 ) :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        birthday = i [ 0 ]
        if ( month == birthday ) :
            count = ( count + 1 )
        else :
            count = count
    if ( count > 1 ) :
        return False
    elif ( count <= 1 ) :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    tup_month_1 = ( )
    tup_month_2 = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            tup_month_1 = ( tup_month_1 + ( i , ) )
        else :
            tup_month_2 = ( tup_month_2 + ( i [ 1 ] , ) )
    for j in tup_month_1 :
        day = j [ 1 ]
        if ( day in tup_month_2 ) :
            continue
        elif ( day not in tup_month_2 ) :
            return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        birthday = i [ 1 ]
        if ( day == birthday ) :
            count = ( count + 1 )
        else :
            count = count
    if ( count > 1 ) :
        return False
    elif ( count <= 1 ) :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        birthday = i [ 0 ]
        if ( month == birthday ) :
            count = ( count + 1 )
        else :
            count = count
    if ( count > 1 ) :
        return False
    elif ( count <= 1 ) :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    tup_month_1 = ( )
    tup_month_2 = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            tup_month_1 = ( tup_month_1 + ( i , ) )
        else :
            tup_month_2 = ( tup_month_2 + ( i [ 1 ] , ) )
    for j in tup_month_1 :
        day = j [ 1 ]
        if ( day in tup_month_2 ) :
            continue
        elif ( day not in tup_month_2 ) :
            return True
    else :
        return False


","

def unique_day(date, possible_birthdays):
    j = 0
    for i in possible_birthdays:
        if (date == i[1]):
            j = (j + 1)
        else:
            j = j
    if (j == 1):
        return True
    elif False:
        pass
    return False




def unique_month(month, possible_birthdays):
    j = 0
    for i in possible_birthdays:
        if (month == i[0]):
            j = (j + 1)
        else:
            j = j
    if (j == 1):
        return True
    elif False:
        pass
    return False




def contains_unique_day(month, possible_birthdays):
    dates = ()
    for z in possible_birthdays:
        if unique_day(z[1], possible_birthdays):
            dates += (z,)
        else:
            continue
    for i in dates:
        if (i[0] == month):
            return True
        elif False:
            pass
    else:
        return False
","{'unique_day': 'correct_2_123.py', 'unique_month': 'correct_2_123.py', 'contains_unique_day': 'correct_2_104.py'}","{'unique_day': 'A1.a,B2.j', 'unique_month': 'A1.a,B2.j', 'contains_unique_day': 'B2.j'}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count = ( count + 1 )
        else :
            count = count
    if ( count == 1 ) :
        return True
    elif ( count <= 1 ) :
        pass
    return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count = ( count + 1 )
        else :
            count = count
    if ( count == 1 ) :
        return True
    elif ( count <= 1 ) :
        pass
    return False


def contains_unique_day ( month , possible_birthdays ) :
    tup_month_1 = ( )
    tup_month_2 = ( )
    for i in possible_birthdays :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            tup_month_1 = ( tup_month_1 + ( i , ) )
        else :
            tup_month_2 = ( tup_month_2 + ( i [ 1 ] , ) )
    for ref_i in tup_month_1 :
        if ( ref_i [ 0 ] == month ) :
            return True
        elif False :
            pass
    else :
        return False
",N/A,2.089,0.068,0.000,0.000,0.729,0.971,3.897,17,17,0.346
question_2,100,0,wrong_2_267.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        check = possible_birthdays [ i ] [ 1 ]
        if ( check == day ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        check = possible_birthdays [ i ] [ 0 ]
        if ( check == month ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            day = possible_birthdays [ i ] [ 1 ]
            check = unique_day ( day , possible_birthdays )
            if ( check == True ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        check = possible_birthdays [ i ] [ 1 ]
        if ( check == day ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        check = possible_birthdays [ i ] [ 0 ]
        if ( check == month ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            day = possible_birthdays [ i ] [ 1 ]
            check = unique_day ( day , possible_birthdays )
            if ( check == True ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_243.py', 'unique_month': 'correct_2_243.py', 'contains_unique_day': 'correct_2_108.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count = ( count + 1 )
    if ( count != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count = ( count + 1 )
    if ( count != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.619,0.607,0.000,0.000,0.292,0.458,2.004,17,17,0.363
question_2,100,0,wrong_2_205.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.501,0.951,0.000,0.000,0.258,0.277,2.018,17,17,0.045
question_2,100,0,wrong_2_422.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( ( counter > 1 ) or ( counter == 0 ) ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( ( counter > 1 ) or ( counter == 0 ) ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( day == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b >= 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_110.py', 'unique_month': 'correct_2_110.py', 'contains_unique_day': 'correct_2_286.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( ( counter > 1 ) or ( counter == 0 ) ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False
",N/A,0.521,0.676,0.000,0.000,0.286,0.217,1.732,17,17,0.008
question_2,100,0,wrong_2_148.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
        if ( count > 1 ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 1 ] ) :
            count += 1
        if ( count > 1 ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( day == birthday [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    return
","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_201.py', 'unique_month': 'correct_2_201.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( day == birthday [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,7.525,0.882,0.000,0.001,0.259,0.372,9.063,17,17,0.643
question_2,100,0,wrong_2_075.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    no_of_days = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            no_of_days += 1
    if ( no_of_days != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    no_of_months = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            no_of_months += 1
    if ( no_of_months != 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays_with_month = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            birthdays_with_month += ( i [ 1 ] , )
    counter = 0
    for i in birthdays_with_month :
        if ( unique_day ( i , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    no_of_days = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            no_of_days += 1
    if ( no_of_days != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    no_of_months = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            no_of_months += 1
    if ( no_of_months != 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays_with_month = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            birthdays_with_month += ( i [ 1 ] , )
    counter = 0
    for i in birthdays_with_month :
        if ( unique_day ( i , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for possible_dates in possible_birthdays :
        if ( possible_dates [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
    new_day = ''
    counter = 0
    for n in range ( len ( new_possible_birthdays ) ) :
        new_day = new_possible_birthdays [ n ] [ 1 ]
        if ( unique_day ( new_day , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 0 ) :
        return False
    else :
        return True


","{'unique_day': 'correct_2_217.py', 'unique_month': 'correct_2_095.py', 'contains_unique_day': 'correct_2_241.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    no_of_days = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            no_of_days += 1
    if ( no_of_days == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    no_of_months = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            no_of_months += 1
    if ( no_of_months != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    birthdays_with_month = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            birthdays_with_month += ( possible_birthdays [ i ] , )
    counter = 0
    for ref_n in range ( len ( birthdays_with_month ) ) :
        ref_new_day = birthdays_with_month [ ref_n ] [ 1 ]
        if ( unique_day ( ref_new_day , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 0 ) :
        return False
    else :
        return True
",N/A,0.703,0.339,0.000,0.000,0.307,0.908,2.291,17,17,0.254
question_2,100,0,wrong_2_036.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    a = ''
    for date in possible_birthdays :
        if ( a == date [ 1 ] ) :
            return False
        elif ( day == date [ 1 ] ) :
            a = day
    return True
def unique_month ( month , possible_birthdays ) :
    a = ''
    for date in possible_birthdays :
        if ( a == date [ 0 ] ) :
            return False
        elif ( month == date [ 0 ] ) :
            a = month
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( month == date [ 0 ] ) :
            if unique_day ( date [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    a = ''
    for date in possible_birthdays :
        if ( a == date [ 1 ] ) :
            return False
        elif ( day == date [ 1 ] ) :
            a = day
    return True
def unique_month ( month , possible_birthdays ) :
    a = ''
    for date in possible_birthdays :
        if ( a == date [ 0 ] ) :
            return False
        elif ( month == date [ 0 ] ) :
            a = month
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( month == date [ 0 ] ) :
            if unique_day ( date [ 1 ] , possible_birthdays ) :
                return True
    return False


","

def unique_day(day, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (day == date[1]):
            counter += 1
        elif False:
            pass
    return (counter == 1)




def unique_month(month, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (month == date[0]):
            counter += 1
        elif False:
            pass
    return (counter == 1)


def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( month == date [ 0 ] ) :
            if unique_day ( date [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_136.py', 'unique_month': 'correct_2_136.py', 'contains_unique_day': 'correct_2_136.py'}","{'unique_day': 'B2.j', 'unique_month': 'B2.j', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_counter = 0
    for date in possible_birthdays :
        if ( day == date [ 1 ] ) :
            ref_counter += 1
        elif ( day == date [ 1 ] ) :
            pass
    return ( ref_counter == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_counter = 0
    for date in possible_birthdays :
        if ( month == date [ 0 ] ) :
            ref_counter += 1
        elif ( month == date [ 0 ] ) :
            pass
    return ( ref_counter == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( month == date [ 0 ] ) :
            if unique_day ( date [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.669,0.088,0.000,0.000,0.212,0.759,1.753,17,17,0.292
question_2,100,0,wrong_2_134.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.515,N/A,N/A,N/A
question_2,100,0,wrong_2_351.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthday [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthday [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + i )
    for j in count :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthday [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthday [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + i )
    for j in count :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            days += ( birthday [ 1 ] , )
    for day in days :
        if ( unique_day ( day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( day , possible_birthdays )
    return False


","{'unique_day': 'correct_2_234.py', 'unique_month': 'correct_2_234.py', 'contains_unique_day': 'correct_2_201.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( j , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == j ) :
            count = ( count + i )
    for ref_day in count :
        if ( unique_day ( ref_day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( ref_day , possible_birthdays )
    return False
",N/A,0.501,0.502,0.000,0.000,0.272,0.576,1.881,17,17,0.154
question_2,100,0,wrong_2_227.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day == date [ 1 ] ) :
            counter += 1
    return ( counter == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day == date [ 1 ] ) :
            counter += 1
    return ( counter == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day == date [ 1 ] ) :
            counter += 1
    return ( counter == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_136.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day == date [ 1 ] ) :
            counter += 1
    return ( counter == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.501,0.071,0.000,0.000,0.169,0.180,0.940,17,17,1.225
question_2,100,0,wrong_2_044.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day in birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day in birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_175.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.498,0.178,0.000,0.000,0.180,0.287,1.164,17,17,1.136
question_2,100,0,wrong_2_002.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            num += 1
    return ( num == 1 )
def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            num += 1
    return ( num == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                days = ( days + ( i [ 1 ] , ) )
    return ( len ( days ) == 1 )


","def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            num += 1
    return ( num == 1 )
def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            num += 1
    return ( num == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                days = ( days + ( i [ 1 ] , ) )
    return ( len ( days ) == 1 )


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter += 1
    return ( counter == 1 )




def unique_month ( month , possible_birthdays ) :
    num = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            num += 1
    return ( num == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_196.py', 'unique_month': 'correct_2_045.py', 'contains_unique_day': 'correct_2_077.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            num += 1
    return ( num == 1 )


def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            num += 1
    return ( num == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.519,0.533,0.000,0.000,0.216,0.195,1.486,17,17,0.190
question_2,100,0,wrong_2_391.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( day == item [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count >= 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( month == item [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count >= 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( day == item [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count >= 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( month == item [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count >= 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_285.py', 'unique_month': 'correct_2_285.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( day == item [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( month == item [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.516,0.264,0.000,0.000,0.249,0.548,1.604,17,17,0.500
question_2,100,0,wrong_2_196.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    x = 0
    for birthday in possible_birthdays :
        if ( day in birthday ) :
            x += 1
    if ( x > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 0
    for birthday in possible_birthdays :
        if ( month in birthday ) :
            x += 1
    if ( x > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    results = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            results += ( unique_day ( birthday [ 1 ] , possible_birthdays ) , )
    if ( True in results ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    x = 0
    for birthday in possible_birthdays :
        if ( day in birthday ) :
            x += 1
    if ( x > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 0
    for birthday in possible_birthdays :
        if ( month in birthday ) :
            x += 1
    if ( x > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    results = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            results += ( unique_day ( birthday [ 1 ] , possible_birthdays ) , )
    if ( True in results ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day in i ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month in i ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    b = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            b += unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays )
    if ( b == 0 ) :
        return False
    else :
        return True


","{'unique_day': 'correct_2_089.py', 'unique_month': 'correct_2_089.py', 'contains_unique_day': 'correct_2_291.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    x = 0
    for birthday in possible_birthdays :
        if ( day in birthday ) :
            x += 1
    if ( x == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    x = 0
    for birthday in possible_birthdays :
        if ( month in birthday ) :
            x += 1
    if ( x == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    results = 0
    for birthday in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ birthday ] [ 0 ] ) :
            results += unique_day ( possible_birthdays [ birthday ] [ 1 ] , possible_birthdays )
    if ( results == 0 ) :
        return False
    else :
        return True
",N/A,0.519,0.616,0.000,0.000,0.258,0.947,2.369,17,17,0.175
question_2,100,0,wrong_2_159.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.508,N/A,N/A,N/A
question_2,100,0,wrong_2_306.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    unique_day = ( )
    days = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    for i in days :
        if ( i == date ) :
            unique_day += ( i , )
        else :
            continue
    if ( len ( unique_day ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    unique_day = ( )
    days = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    for i in days :
        if ( i == date ) :
            unique_day += ( i , )
        else :
            continue
    if ( len ( unique_day ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    uniqueday = ( )
    days = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    for i in days :
        if ( i == date ) :
            uniqueday += ( i , )
        else :
            continue
    if ( len ( uniqueday ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_213.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    unique_day = ( )
    days = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    for i in days :
        if ( i == date ) :
            unique_day += ( i , )
        else :
            continue
    if ( len ( unique_day ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.539,0.102,0.000,0.000,0.396,0.209,1.271,17,17,0.831
question_2,100,0,wrong_2_400.py,fail_other,0,0,"def unique_day ( day , possible_birthdays ) :
    store = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            if ( store == 1 ) :
                return False
            else :
                store += 1
    return True
def unique_month ( month , possible_birthdays ) :
    store = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if ( store == 1 ) :
                return False
            else :
                store += 1
    return True
def contains_unique_day ( month , possible_birthdays ) :
    def generate_unique_days ( possible_birthdays ) :
        generate = ( )
        for i in range ( 14 , 20 ) :
            if unique_day ( str ( i ) , possible_birthdays ) :
                generate += ( str ( i ) , )
        return generate
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if ( str ( i [ 1 ] ) in generate_unique_days ( possible_birthdays ) ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    store = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == day ) :
            pass
            if ( store == 1 ) :
                return False
            else :
                store += 1
            pass
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    store = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            pass
            if ( store == 1 ) :
                return False
            else :
                store += 1
            pass
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    generate = ( )
    for i in range ( 14 , 20 ) :
        pass
        if unique_day ( str ( i ) , possible_birthdays ) :
            pass
        return generate
    pass
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            pass
            if ( str ( i [ 1 ] ) in generate_unique_days ( possible_birthdays ) ) :
                return True
            pass
        unique += ( i , )
    else :
        pass
    return False
","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester






def contains_unique_day(month, possible_birthdays):
    unique = ()
    for i in possible_birthdays:
        if unique_day(i[1], possible_birthdays):
            unique += (i,)
    for i in unique:
        if (month == i[0]):
            if False:
                pass
            return True
    else:
        return False
","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_077.py', 'contains_unique_day': 'correct_2_187.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.g'}","def unique_day ( day , possible_birthdays ) :
    store = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            pass
            if store :
                return False
            else :
                store = 1
            pass
        pass
    return store


def unique_month ( month , possible_birthdays ) :
    store = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            pass
            if store :
                return False
            else :
                store = 1
            pass
        pass
    return store


def contains_unique_day ( month , possible_birthdays ) :
    unique = ( )
    for i in possible_birthdays :
        pass
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            unique += ( i , )
    pass
    for i in unique :
        pass
        if ( month == i [ 0 ] ) :
            pass
            if False :
                pass
            return True
    else :
        return False
",N/A,7.156,1.660,0.000,0.002,0.398,1.128,10.373,11,17,N/A
question_2,100,0,wrong_2_426.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    new_tuple = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            new_tuple += ( i , )
    print ( new_tuple )
    for i in range ( 0 , len ( new_tuple ) ) :
        if unique_day ( new_tuple [ i ] [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    new_tuple = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            new_tuple += ( i , )
    print ( new_tuple )
    for i in range ( 0 , len ( new_tuple ) ) :
        if unique_day ( new_tuple [ i ] [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_217.py', 'unique_month': 'correct_2_161.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    new_tuple = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            new_tuple += ( i , )
    for i in new_tuple :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.845,0.613,0.000,0.000,0.247,0.558,2.292,17,17,0.122
question_2,100,0,wrong_2_281.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    focus = ( )
    unique_days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            focus += ( i , )
    for j in focus :
        testday = j [ 1 ]
        if ( unique_day ( testday , possible_birthdays ) == True ) :
            unique_days += ( testday , )
    for k in unique_days :
        for l in focus :
            if ( k == l [ 1 ] ) :
                break
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            counter += 1
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            counter += 1
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    focus = ( )
    unique_days = ( )
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            focus += ( i , )
        pass
    pass
    for j in focus :
        testday = j [ 1 ]
        if ( unique_day ( testday , possible_birthdays ) == True ) :
            unique_days += ( testday , )
        pass
    pass
    if ( outcome == ( ) ) :
        pass
        if True :
            pass
        break
    else :
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    (data, outcome) = ((), ())
    for birthday in possible_birthdays:
        if (month == birthday[0]):
            data += (birthday,)
    for birthday in data:
        if (unique_day(birthday[1], possible_birthdays) == True):
            outcome += birthday
        continue
    if (outcome == ()):
        if True:
            return False
    else:
        return unique_day(outcome[1], possible_birthdays)
","{'unique_day': 'correct_2_187.py', 'unique_month': 'correct_2_187.py', 'contains_unique_day': 'correct_2_246.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,A1.a'}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            counter += 1
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            counter += 1
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    focus = ( )
    unique_days = ( )
    for ref_birthday in possible_birthdays :
        pass
        if ( month == ref_birthday [ 0 ] ) :
            focus += ( ref_birthday , )
        pass
    pass
    for ref_birthday in focus :
        if ( unique_day ( ref_birthday [ 1 ] , possible_birthdays ) == True ) :
            unique_days += ref_birthday
        continue
    pass
    if ( unique_days == ( ) ) :
        pass
        if True :
            return False
    else :
        return unique_day ( unique_days [ 1 ] , possible_birthdays )
",N/A,12.808,0.548,0.000,0.003,0.335,0.468,14.196,17,17,0.386
question_2,100,0,wrong_2_416.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    tupleofdays = ( )
    for i in possible_birthdays :
        tupleofdays += ( i [ 1 ] , )
    count = 0
    for i in tupleofdays :
        if ( day == i ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    tupleofmonths = ( )
    for i in possible_birthdays :
        tupleofmonths += ( i [ 0 ] , )
    count = 0
    for i in tupleofmonths :
        if ( month == i ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            ans = False
            if ( i [ 0 ] == month ) :
                ans = True
                break
            else :
                continue
        else :
            continue
    return ans


","def unique_day ( day , possible_birthdays ) :
    tupleofdays = ( )
    if True :
        tupleofdays += ( i [ 1 ] , )
    count = 0
    for i in tupleofdays :
        pass
        if ( day == i ) :
            count += 1
        pass
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    tupleofmonths = ( )
    for i in possible_birthdays :
        tupleofmonths += ( i [ 0 ] , )
        if False :
            pass
        pass
        if ( month == i ) :
            count += 1
        pass
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for i in possible_birthdays :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            ans = False
            if ( i [ 0 ] == month ) :
                ans = True
                break
            else :
                continue
            pass
        else :
            continue
        pass
    return ans
","

def unique_day(day, possible_birthdays):
    if True:
        pass
    count = 0
    for i in possible_birthdays:
        if (i[1] == day):
            count += 1
    return (count == 1)




def unique_month(month, possible_birthdays):
    counter = 0
    for i in range(len(possible_birthdays)):
        if False:
            pass
        if (month == possible_birthdays[i][0]):
            counter = (counter + 1)
    return (counter == 1)


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            months = birthday [ 0 ]
            if ( months == month ) :
                return True
            else :
                continue
        else :
            continue
    return False


","{'unique_day': 'correct_2_146.py', 'unique_month': 'correct_2_220.py', 'contains_unique_day': 'correct_2_080.py'}","{'unique_day': 'B1.h', 'unique_month': 'B1.g', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    if True :
        pass
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == day ) :
            count += 1
        pass
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if False :
            pass
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            ref_counter = ( ref_counter + 1 )
        pass
    return ( ref_counter == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for i in possible_birthdays :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            ref_months = i [ 0 ]
            if ( i [ 0 ] == month ) :
                return True
            else :
                continue
            pass
        else :
            continue
        pass
    return False
",N/A,7.561,0.070,0.000,0.002,0.212,0.975,8.849,17,17,0.569
question_2,100,0,wrong_2_414.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    count = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 1 ] , ) )
    if ( len ( count ) < 2 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 0 ] , ) )
    if ( len ( count ) < 2 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    result = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 1 ] , ) )
            for j in count :
                result = ( result + ( unique_day ( j , possible_birthdays ) , ) )
    if ( True in result ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 1 ] , ) )
        pass
    pass
    if ( len ( count ) < 2 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 0 ] , ) )
        pass
    pass
    if ( len ( count ) < 2 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    result = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 1 ] , ) )
        pass
    pass
    if ( True in result ) :
        return True
    else :
        return False
    pass
","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    b = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            b += unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays )
    if ( b == 0 ) :
        return False
    else :
        return True


","{'unique_day': 'correct_2_017.py', 'unique_month': 'correct_2_017.py', 'contains_unique_day': 'correct_2_291.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays )
        pass
    pass
    if ( count == 0 ) :
        return False
    else :
        return True
    pass
",N/A,6.562,1.566,0.000,0.002,0.355,0.868,9.391,17,17,0.421
question_2,100,0,wrong_2_137.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.499,N/A,N/A,N/A
question_2,100,0,wrong_2_372.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    month_tup = ( )
    helper = 0
    for i in possible_birthdays :
        if ( month in i ) :
            month_tup = ( month_tup + possible_birthdays [ helper ] )
        helper = ( helper + 1 )
    for i in range ( 1 , 32 ) :
        if ( unique_day ( i , month_tup ) == True ) :
            return True
        else :
            return False


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    month_tup = ( )
    helper = 0
    for i in possible_birthdays :
        if ( month in i ) :
            month_tup = ( month_tup + possible_birthdays [ helper ] )
        helper = ( helper + 1 )
    for i in range ( 1 , 32 ) :
        if ( unique_day ( i , month_tup ) == True ) :
            return True
        else :
            return False


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    possible_days = ( )
    for x in possible_birthdays :
        if ( month in x ) :
            possible_days += ( x [ 1 ] , )
    for x in possible_days :
        contains = unique_day ( x , possible_birthdays )
        if ( contains == False ) :
            continue
        else :
            return True
    return False


","{'unique_day': 'correct_2_221.py', 'unique_month': 'correct_2_221.py', 'contains_unique_day': 'correct_2_173.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    month_tup = ( )
    helper = 0
    for ref_x in possible_birthdays :
        if ( month in ref_x ) :
            month_tup += ( ref_x [ 1 ] , )
    for ref_x in month_tup :
        ref_contains = unique_day ( ref_x , possible_birthdays )
        if ( ref_contains == False ) :
            continue
        else :
            return True
    return False
",N/A,0.841,0.092,0.000,0.000,0.285,0.530,1.777,17,17,0.227
question_2,100,0,wrong_2_378.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.499,N/A,N/A,N/A
question_2,100,0,wrong_2_232.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pd = p [ 1 ]
        if ( day == pd ) :
            result = ( result + ( day , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pm = p [ 0 ]
        if ( month == pm ) :
            result = ( result + ( month , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( p , ) )
    for r in result :
        if ( unique_day ( r [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pd = p [ 1 ]
        if ( day == pd ) :
            result = ( result + ( day , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pm = p [ 0 ]
        if ( month == pm ) :
            result = ( result + ( month , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( p , ) )
    for r in result :
        if ( unique_day ( r [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    unique = ( )
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            unique = ( unique + ( day , ) )
    if ( len ( unique ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    unique = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            unique = ( unique + ( month , ) )
    if ( len ( unique ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    month_day = ( )
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            month_day = ( month_day + ( j , ) )
    for t in month_day :
        if ( unique_day ( t [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_062.py', 'unique_month': 'correct_2_062.py', 'contains_unique_day': 'correct_2_211.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( day == p [ 1 ] ) :
            result = ( result + ( day , ) )
    if ( len ( result ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( month , ) )
    if ( len ( result ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( p , ) )
    for r in result :
        if ( unique_day ( r [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.505,0.698,0.000,0.000,0.328,0.671,2.231,17,17,0.161
question_2,100,0,wrong_2_236.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    days = [ possible_birthdays [ i ] [ 1 ] for i in range ( len ( possible_birthdays ) ) ]
    if ( days . count ( day ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    months = [ possible_birthdays [ i ] [ 0 ] for i in range ( len ( possible_birthdays ) ) ]
    if ( months . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    days_in_month = [ ]
    for i in range ( len ( possible_birthdays ) ) :
        curr_month = possible_birthdays [ i ] [ 0 ]
        curr_day = possible_birthdays [ i ] [ 1 ]
        if ( curr_month == month ) :
            days_in_month . append ( curr_day )
    for day in days_in_month :
        if unique_day ( day , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    days = [ possible_birthdays [ i ] [ 1 ] for i in range ( len ( possible_birthdays ) ) ]
    if ( days . count ( day ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    months = [ possible_birthdays [ i ] [ 0 ] for i in range ( len ( possible_birthdays ) ) ]
    if ( months . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    days_in_month = [ ]
    for i in range ( len ( possible_birthdays ) ) :
        curr_month = possible_birthdays [ i ] [ 0 ]
        curr_day = possible_birthdays [ i ] [ 1 ]
        if ( curr_month == month ) :
            days_in_month . append ( curr_day )
    for day in days_in_month :
        if unique_day ( day , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    if ( tuple ( map ( ( lambda x : x [ 1 ] ) , possible_birthdays ) ) . count ( day ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    if ( tuple ( map ( ( lambda x : x [ 0 ] ) , possible_birthdays ) ) . count ( month ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    monies = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            monies += ( possible_birthdays [ i ] [ 1 ] , )
    for i in range ( len ( monies ) ) :
        if unique_day ( monies [ i ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_093.py', 'unique_month': 'correct_2_093.py', 'contains_unique_day': 'correct_2_162.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    if ( tuple ( map ( ( lambda days : days [ 1 ] ) , possible_birthdays ) ) . count ( day ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    if ( tuple ( map ( ( lambda months : months [ 0 ] ) , possible_birthdays ) ) . count ( month ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    day = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            day += ( possible_birthdays [ i ] [ 1 ] , )
    for i in range ( len ( day ) ) :
        if unique_day ( day [ i ] , possible_birthdays ) :
            return True
    return False
",N/A,0.503,0.567,0.000,0.000,0.173,0.762,2.032,17,17,0.683
question_2,100,0,wrong_2_219.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_123.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.503,0.055,0.000,0.000,0.219,0.179,0.977,17,17,1.000
question_2,100,0,wrong_2_045.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day in birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday_month in possible_birthdays :
        if ( month in birthday_month [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    month_tuple = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            month_tuple += ( birthday , )
        else :
            continue
    for day in month_tuple :
        if ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day in birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday_month in possible_birthdays :
        if ( month in birthday_month [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    month_tuple = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            month_tuple += ( birthday , )
        else :
            continue
    for day in month_tuple :
        if ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for x in possible_birthdays :
        if ( month == x [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x += ( i , )
        else :
            continue
    for i in x :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_175.py', 'unique_month': 'correct_2_100.py', 'contains_unique_day': 'correct_2_152.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday_month in possible_birthdays :
        if ( month in birthday_month [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    month_tuple = ( )
    for ref_i in possible_birthdays :
        if ( ref_i [ 0 ] == month ) :
            month_tuple += ( ref_i , )
        else :
            continue
    for ref_i in month_tuple :
        if ( unique_day ( ref_i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.503,0.520,0.000,0.000,0.284,0.476,1.810,17,17,0.093
question_2,100,0,wrong_2_093.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            result += 1
        return result
        if ( result == 1 ) :
            return True
        else :
            return False
    return
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( date == i [ 1 ] ) :
            result += 1
        return result
    counter = 0
    if ( result == 1 ) :
        return True
    else :
        pass
    return


def unique_month ( month , possible_birthdays ) :
    return


def contains_unique_day ( month , possible_birthdays ) :
    return
","

def unique_day(day, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (day in date):
            counter += 1
    if (counter != 1):
        return False
    else:
        return True


def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_046.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': 'A1.b', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( date == i [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,3.508,0.057,0.000,0.001,0.150,0.461,4.199,17,17,1.255
question_2,100,0,wrong_2_311.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            conter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            conter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_099.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.605,0.117,0.000,0.000,0.187,0.271,1.201,17,17,1.064
question_2,100,0,wrong_2_079.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            total += 1
    if ( total > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            total += 1
    if ( total > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            total += 1
    if ( total > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            total += 1
    if ( total > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    appearance = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            appearance += 1
    if ( appearance == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    appearance = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            appearance += 1
    if ( appearance == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_199.py', 'unique_month': 'correct_2_199.py', 'contains_unique_day': 'correct_2_199.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            total += 1
    if ( total == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            total += 1
    if ( total == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.504,0.388,0.000,0.000,0.221,0.481,1.615,17,17,0.022
question_2,100,0,wrong_2_315.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_210.py', 'unique_month': 'correct_2_210.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.522,0.410,0.000,0.000,0.218,0.121,1.293,17,17,0.432
question_2,100,0,wrong_2_228.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pd = p [ 1 ]
        if ( day == pd ) :
            result = ( result + ( day , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pd = p [ 1 ]
        if ( day == pd ) :
            result = ( result + ( day , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    unique = ( )
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            unique = ( unique + ( day , ) )
    if ( len ( unique ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_062.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( day == p [ 1 ] ) :
            result = ( result + ( day , ) )
    if ( len ( result ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.514,0.208,0.000,0.000,0.222,0.474,1.443,17,17,1.135
question_2,100,0,wrong_2_051.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    for x in range ( 1 , len ( possible_birthdays ) ) :
        for i in possible_birthdays [ x ] [ 1 ] :
            if ( possible_birthdays [ 0 ] [ 1 ] == possible_birthdays [ i ] [ 1 ] ) :
                return False
            else :
                return unique_day ( date , possible_birthdays [ 1 : ] )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    pass
    for x in range ( 1 , len ( possible_birthdays ) ) :
        pass
    pass
    if ( possible_birthdays [ 0 ] [ 1 ] == possible_birthdays [ i ] [ 1 ] ) :
        return False
    else :
        pass
    pass


def unique_month ( month , possible_birthdays ) :
    return


def contains_unique_day ( month , possible_birthdays ) :
    return
","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for elem in possible_birthdays :
        days += ( elem [ 1 ] , )
    times = days . count ( day )
    if ( times == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_159.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_days = ( )
    for ref_elem in possible_birthdays :
        ref_days += ( ref_elem [ 1 ] , )
    ref_times = ref_days . count ( date )
    if ( ref_times == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,3.589,0.039,0.000,0.001,0.174,0.315,4.145,17,17,1.525
question_2,100,0,wrong_2_154.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.613,0.381,0.000,0.000,0.170,0.315,1.504,17,17,1.104
question_2,100,0,wrong_2_285.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x += ( i , )
        else :
            continue
    for i in x :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_099.py', 'unique_month': 'correct_2_145.py', 'contains_unique_day': 'correct_2_152.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.557,0.329,0.000,0.000,0.197,0.278,1.388,17,17,0.055
question_2,100,0,wrong_2_017.py,fail_other,1,1,"def unique_day ( day , possible_birthdays ) :
    count_day = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            if ( count_day == 0 ) :
                count_day += 1
            else :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    count_month = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( count_month == 0 ) :
                count_month += 1
            else :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            day = birthday [ 1 ]
            if unique_day ( day , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count_day = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            if ( count_day == 0 ) :
                count_day += 1
            else :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    count_month = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( count_month == 0 ) :
                count_month += 1
            else :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            day = birthday [ 1 ]
            if unique_day ( day , possible_birthdays ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if unique_day ( birthday [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_077.py', 'contains_unique_day': 'correct_2_164.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count_day = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            if count_day :
                return False
            else :
                count_day = 1
    return count_day


def unique_month ( month , possible_birthdays ) :
    count_month = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if count_month :
                return False
            else :
                count_month = 1
    return count_month


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if unique_day ( birthday [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.543,0.169,0.000,0.000,0.207,0.806,1.746,11,17,N/A
question_2,100,0,wrong_2_405.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for x in possible_birthdays :
        x_day = x [ 1 ]
        if ( day == x_day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for x in possible_birthdays :
        x_month = x [ 0 ]
        if ( month == x_month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for x in possible_birthdays :
        x_day = x [ 1 ]
        if ( day == x_day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for x in possible_birthdays :
        x_month = x [ 0 ]
        if ( month == x_month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for x in possible_birthdays :
        x_day = x [ 1 ]
        if ( day == x_day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for x in possible_birthdays :
        x_month = x [ 0 ]
        if ( month == x_month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_269.py', 'unique_month': 'correct_2_269.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for x in possible_birthdays :
        x_day = x [ 1 ]
        if ( day == x_day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for x in possible_birthdays :
        x_month = x [ 0 ]
        if ( month == x_month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.507,0.234,0.000,0.000,0.448,0.123,1.337,17,17,0.390
question_2,100,0,wrong_2_155.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            ref_count = ( ref_count + 1 )
    if ( ref_count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.502,0.614,0.000,0.000,0.197,0.405,1.746,17,17,0.589
question_2,100,0,wrong_2_114.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    check = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            check = ( check + 1 )
    if ( check > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    check = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            check = ( check + 1 )
    if ( check > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( ( month == birthday [ 0 ] ) and unique_day ( birthday [ 1 ] , possible_birthdays ) ) :
            return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    check = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            check = ( check + 1 )
    if ( check > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    check = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            check = ( check + 1 )
    if ( check > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( ( month == birthday [ 0 ] ) and unique_day ( birthday [ 1 ] , possible_birthdays ) ) :
            return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) ) :
            return True
    else :
        return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_264.py', 'contains_unique_day': 'correct_2_115.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    check = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            check = ( check + 1 )
    if ( check == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    check = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            check = ( check + 1 )
    if ( check != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( ( month == birthday [ 0 ] ) and unique_day ( birthday [ 1 ] , possible_birthdays ) ) :
            return True
    else :
        return False
",N/A,0.507,0.660,0.000,0.000,0.218,0.344,1.760,17,17,0.021
question_2,100,0,wrong_2_346.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return Flase
def unique_month ( month , possible_birthdays ) :
    only_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            only_month = ( only_month + ( i , ) )
    if ( len ( only_month ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return Flase
def unique_month ( month , possible_birthdays ) :
    only_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            only_month = ( only_month + ( i , ) )
    if ( len ( only_month ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            tup += ( i [ 1 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    data = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            data += ( birthday , )
    if ( len ( data ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_042.py', 'unique_month': 'correct_2_246.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    only_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            only_month = ( only_month + ( i , ) )
    if ( len ( only_month ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.506,0.777,0.000,0.000,0.226,0.265,1.800,17,17,0.446
question_2,100,0,wrong_2_077.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( str ( day ) == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( str ( month ) == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    list_d = ( )
    for i in range ( 16 , 20 ) :
        i_string = str ( i )
        if ( unique_day ( i_string , possible_birthdays ) is True ) :
            list_d = ( list_d + ( str ( i ) , ) )
    for i in possible_birthdays :
        for j in list_d :
            if ( i [ 1 ] == j ) :
                if ( i [ 0 ] == month ) :
                    return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( str ( day ) == i [ 1 ] ) :
            counter = ( counter + 1 )
        pass
    pass
    if ( counter > 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( str ( month ) == i [ 0 ] ) :
            counter = ( counter + 1 )
        pass
    pass
    if ( counter > 1 ) :
        return False
    else :
        return True
    pass


def contains_unique_day ( month , possible_birthdays ) :
    list_d = ( )
    for i in range ( 16 , 20 ) :
        i_string = str ( i )
        if ( unique_day ( i_string , possible_birthdays ) is True ) :
            list_d = ( list_d + ( str ( i ) , ) )
            if ( str ( i ) in month_tup ) :
                pass
            pass
        pass
    pass
    for j in list_d :
        pass
        if ( i [ 1 ] == j ) :
            pass
            if ( i [ 0 ] == month ) :
                return True
            pass
        else :
            pass
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    month_tup = ()
    helper = 0
    for i in possible_birthdays:
        if True:
            if (month in i):
                month_tup = (month_tup + possible_birthdays[helper])
            helper = (helper + 1)
    for i in range(1, 32):
        if (unique_day(str(i), possible_birthdays) == True):
            if (str(i) in month_tup):
                return True
        else:
            pass
    return False
","{'unique_day': 'correct_2_210.py', 'unique_month': 'correct_2_210.py', 'contains_unique_day': 'correct_2_221.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,B2.l'}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( str ( day ) == i [ 1 ] ) :
            counter = ( counter + 1 )
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( str ( month ) == i [ 0 ] ) :
            counter = ( counter + 1 )
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    ref_month_tup = ( )
    ref_helper = 0
    for i in possible_birthdays :
        if True :
            if ( month in i ) :
                ref_month_tup = ( ref_month_tup + possible_birthdays [ ref_helper ] )
            ref_helper = ( ref_helper + 1 )
        pass
    pass
    for i in range ( 1 , 32 ) :
        pass
        if ( unique_day ( str ( i ) , possible_birthdays ) == True ) :
            pass
            if ( str ( i ) in ref_month_tup ) :
                return True
            pass
        else :
            pass
        pass
    return False
",N/A,9.451,0.919,0.000,0.002,0.923,1.051,12.382,17,17,0.493
question_2,100,0,wrong_2_239.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter <= 1 )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter <= 1 )
def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter <= 1 )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter <= 1 )
def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_288.py', 'unique_month': 'correct_2_288.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.833,0.288,0.000,0.000,0.234,0.153,1.530,17,17,0.021
question_2,100,0,wrong_2_144.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    singlemonthbirthday = ( )
    for birthmonth in possible_birthdays :
        if ( month == birthmonth [ 0 ] ) :
            singlemonthbirthday += ( birthmonth , )
    for birthday in singlemonthbirthday :
        if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    singlemonthbirthday = ( )
    for birthmonth in possible_birthdays :
        if ( month == birthmonth [ 0 ] ) :
            singlemonthbirthday += ( birthmonth , )
    for birthday in singlemonthbirthday :
        if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    singlemonthbirthday = ( )
    for birthmonth in possible_birthdays :
        if ( month == birthmonth [ 0 ] ) :
            singlemonthbirthday += ( birthmonth , )
    for birthday in singlemonthbirthday :
        if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_082.py', 'unique_month': 'correct_2_082.py', 'contains_unique_day': 'correct_2_082.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    singlemonthbirthday = ( )
    for birthmonth in possible_birthdays :
        if ( month == birthmonth [ 0 ] ) :
            singlemonthbirthday += ( birthmonth , )
    for birthday in singlemonthbirthday :
        if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.501,0.375,0.000,0.000,0.217,0.149,1.266,17,17,0.010
question_2,100,0,wrong_2_243.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for month_day in possible_birthdays :
        date = month_day [ 1 ]
        if ( day == date ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for month_day in possible_birthdays :
        mont = month_day [ 0 ]
        if ( month == mont ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    condition = False
    for month_day in possible_birthdays :
        if ( month == month_day [ 0 ] ) :
            condition = unique_day ( month_day [ 1 ] , possible_birthdays )
    return condition


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for month_day in possible_birthdays :
        date = month_day [ 1 ]
        if ( day == date ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for month_day in possible_birthdays :
        mont = month_day [ 0 ]
        if ( month == mont ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    condition = False
    for month_day in possible_birthdays :
        if ( month == month_day [ 0 ] ) :
            condition = unique_day ( month_day [ 1 ] , possible_birthdays )
    return condition


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    result = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result or unique_day ( i [ 1 ] , possible_birthdays ) )
    return result


","{'unique_day': 'reference.py', 'unique_month': 'reference.py', 'contains_unique_day': 'correct_2_074.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for month_day in possible_birthdays :
        if ( month_day [ 1 ] == day ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for month_day in possible_birthdays :
        if ( month_day [ 0 ] == month ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    condition = False
    for month_day in possible_birthdays :
        if ( month == month_day [ 0 ] ) :
            condition = ( condition or unique_day ( month_day [ 1 ] , possible_birthdays ) )
    return condition
",N/A,0.503,0.462,0.000,0.000,0.314,0.354,1.657,17,17,0.207
question_2,100,0,wrong_2_396.py,fail_other,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( day == item [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count >= 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( month == item [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count >= 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    day = filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays )
    for item in tuple ( day ) :
        if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            continue
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( day == item [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count >= 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( month == item [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count >= 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    day = filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays )
    for item in tuple ( day ) :
        if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            continue
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( get_month ( i ) == month ) and unique_day ( get_day ( i ) , possible_birthdays ) ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_285.py', 'unique_month': 'correct_2_285.py', 'contains_unique_day': 'correct_2_265.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( day == item [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( month == item [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    for item in possible_birthdays :
        if ( ( get_month ( item ) == month ) and unique_day ( get_day ( item ) , possible_birthdays ) ) :
            return True
        else :
            continue
    return False
",N/A,0.520,0.258,0.000,0.000,0.203,0.565,1.574,12,17,N/A
question_2,100,0,wrong_2_435.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            days += ( i [ 1 ] , )
    for i in days :
        if unique_day ( i , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            days += ( i [ 1 ] , )
    for i in days :
        if unique_day ( i , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            days += ( birthday [ 1 ] , )
    for day in days :
        if ( unique_day ( day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( day , possible_birthdays )
    return False


","{'unique_day': 'correct_2_082.py', 'unique_month': 'correct_2_287.py', 'contains_unique_day': 'correct_2_201.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for ref_birthday in possible_birthdays :
        if ( month == ref_birthday [ 0 ] ) :
            days += ( ref_birthday [ 1 ] , )
    for ref_day in days :
        if ( unique_day ( ref_day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( ref_day , possible_birthdays )
    return False
",N/A,0.514,0.249,0.000,0.000,0.255,0.492,1.537,17,17,0.158
question_2,100,0,wrong_2_086.py,fail_other,1,0,"def unique_day ( day , possible_birthdays ) :
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True


","def unique_day ( day , possible_birthdays ) :
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester


",{'unique_day': 'correct_2_077.py'},{'unique_day': ''},"def unique_day ( day , possible_birthdays ) :
    ref_tester = 0
    for birthdays in possible_birthdays :
        if ( day == birthdays [ 1 ] ) :
            if ref_tester :
                return False
            else :
                ref_tester = 1
    return ref_tester
",N/A,0.502,0.007,0.000,0.000,0.117,0.444,1.080,10,17,N/A
question_2,100,0,wrong_2_151.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
        if ( count > 1 ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
        if ( count > 1 ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays_month = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            birthdays_month += ( birthday , )
    for birthday in birthdays_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( day == birthday [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    birthdays_month = ( )
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            birthdays_month += ( birthday , )
        pass
    pass
    for birthday in birthdays_month :
        pass
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    birthdays_in_month = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            birthdays_in_month += ( birthday , )
    for birthday in birthdays_in_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_201.py', 'unique_month': 'correct_2_201.py', 'contains_unique_day': 'correct_2_026.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( day == birthday [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    birthdays_month = ( )
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            birthdays_month += ( birthday , )
        pass
    pass
    for birthday in birthdays_month :
        pass
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
        pass
    return False
",N/A,7.540,1.142,0.000,0.002,0.308,0.222,9.241,17,17,0.165
question_2,100,0,wrong_2_271.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    birthdays_in_month = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            birthdays_in_month += ( birthday , )
    for birthday in birthdays_in_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_026.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.753,0.980,0.000,0.000,0.257,0.211,2.234,17,17,0.018
question_2,100,0,wrong_2_108.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.525,N/A,N/A,N/A
question_2,100,0,wrong_2_294.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_226.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.504,0.103,0.000,0.000,0.145,0.282,1.054,17,17,1.190
question_2,100,0,wrong_2_240.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count += 1
    if ( count > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    unique_day_tuple = tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , possible_birthdays ) )
    for i in unique_day_tuple :
        if ( i [ 0 ] == month ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count += 1
    if ( count > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    unique_day_tuple = tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , possible_birthdays ) )
    for i in unique_day_tuple :
        if ( i [ 0 ] == month ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for possible_dates in possible_birthdays :
        if ( possible_dates [ 1 ] == day ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    count = 0
    for possible_dates in possible_birthdays :
        if ( possible_dates [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    singledays = tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , possible_birthdays ) )
    for i in singledays :
        if ( i [ 0 ] == month ) :
            return True
    return False


","{'unique_day': 'correct_2_095.py', 'unique_month': 'correct_2_095.py', 'contains_unique_day': 'correct_2_267.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    unique_day_tuple = tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , possible_birthdays ) )
    for i in unique_day_tuple :
        if ( i [ 0 ] == month ) :
            return True
    return False
",N/A,0.505,0.393,0.000,0.000,0.343,0.188,1.456,17,17,0.020
question_2,100,0,wrong_2_094.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            result += 1
        return result
        if ( result == 1 ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( date == i [ 1 ] ) :
            result += 1
        return result
    pass
    if ( result == 1 ) :
        return True
    else :
        pass
    pass


def unique_month ( month , possible_birthdays ) :
    return


def contains_unique_day ( month , possible_birthdays ) :
    return
","

def unique_day(day, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (day in date):
            counter += 1
    if (counter != 1):
        return False
    else:
        return True


def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_046.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': 'A1.b', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_counter = 0
    for i in possible_birthdays :
        pass
        if ( date == i [ 1 ] ) :
            ref_counter += 1
    pass
    if ( ref_counter != 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,3.600,0.056,0.000,0.001,0.142,0.478,4.300,17,17,1.283
question_2,100,0,wrong_2_251.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    birthdays_in_month = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            birthdays_in_month += ( birthday , )
    for birthday in birthdays_in_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_026.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.606,0.961,0.000,0.000,0.263,0.207,2.069,17,17,0.018
question_2,100,0,wrong_2_408.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    i = 0
    count = 0
    while ( i <= len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
            i += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    i = 0
    count = 0
    while ( i <= len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    if ( month == 'June' ) :
        return True
    elif ( month == 'May' ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    i = 0
    count = 0
    while ( i <= len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
            i += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    i = 0
    count = 0
    while ( i <= len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    if ( month == 'June' ) :
        return True
        if ( True in ans ) :
            return True
        return False
    pass
","def unique_day ( day , possible_birthdays ) :
    ( i , times ) = ( 0 , 0 )
    while ( i < len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            times += 1
        i += 1
    if ( times == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    ( i , times ) = ( 0 , 0 )
    while ( i < len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            times += 1
        i += 1
    if ( times == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    specific_set = tuple(filter((lambda x: (x[0] == month)), possible_birthdays))
    get_days = tuple(map((lambda x: x[1]), specific_set))
    if True:
        ans = tuple(map((lambda x: unique_day(x, possible_birthdays)), get_days))
        if (True in ans):
            return True
        return False
","{'unique_day': 'correct_2_278.py', 'unique_month': 'correct_2_278.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,A1.a'}","def unique_day ( date , possible_birthdays ) :
    i = 0
    count = 0
    while ( i < len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
        i += 1
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    i = 0
    count = 0
    while ( i < len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        i += 1
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    if True :
        ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
        if ( True in ref_ans ) :
            return True
        return False
    pass
",N/A,3.567,0.052,0.000,0.002,15.415,7.957,27.032,17,17,0.587
question_2,100,0,wrong_2_180.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.497,N/A,N/A,N/A
question_2,100,0,wrong_2_053.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list = [ x for x in possible_birthdays [ i ] [ 1 ] ]
        list = sorted ( list )
        if ( ( date == list [ i ] ) and ( date != list [ ( i + 1 ) ] ) and ( date != list [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list = [ x for x in possible_birthdays [ i ] [ 1 ] ]
        list = sorted ( list )
        if ( ( date == list [ i ] ) and ( date != list [ ( i + 1 ) ] ) and ( date != list [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        if ( ref_b [ 1 ] == date ) :
            ref_s = ( ref_s + 1 )
        else :
            continue
    return ( ref_s == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.896,0.036,0.000,0.000,0.160,0.547,1.666,17,17,1.325
question_2,100,0,wrong_2_254.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    birthdays_in_month = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            birthdays_in_month += ( birthday , )
    for birthday in birthdays_in_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_026.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == date ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.547,0.987,0.000,0.000,0.222,0.210,2.015,17,17,0.028
question_2,100,0,wrong_2_200.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    total = ( )
    for i in possible_birthdays :
        total += ( i [ 1 ] , )
    if ( total . count ( day ) > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    total = ( )
    for i in possible_birthdays :
        total += ( i [ 0 ] , )
    if ( total . count ( month ) > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    uniquedays = ( )
    daysinmonth = ( )
    for i in possible_birthdays :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            uniquedays += ( i [ 1 ] , )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            daysinmonth += ( i [ 1 ] , )
    for each in uniquedays :
        if ( each in daysinmonth ) :
            return True
        else :
            continue
    return False


","def unique_day ( day , possible_birthdays ) :
    total = ( )
    for i in possible_birthdays :
        total += ( i [ 1 ] , )
    pass
    if ( total . count ( day ) > 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    total = ( )
    for i in possible_birthdays :
        total += ( i [ 0 ] , )
    pass
    if ( total . count ( month ) > 1 ) :
        return False
    else :
        return True
    pass


def contains_unique_day ( month , possible_birthdays ) :
    uniquedays = ( )
    daysinmonth = ( )
    for i in possible_birthdays :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            uniquedays += ( i [ 1 ] , )
        pass
    pass
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            daysinmonth += ( i [ 1 ] , )
        pass
    pass
    if True :
        pass
        if ( each in daysinmonth ) :
            return True
        else :
            continue
        pass
    elif True :
        pass
    return False
","def unique_day ( date , possible_birthdays ) :
    dates = ( )
    for d in possible_birthdays :
        dates += ( d [ 1 ] , )
    if ( dates . count ( date ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = ( )
    for a in possible_birthdays :
        months += ( a [ 0 ] , )
    if ( months . count ( month ) == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    new_possible_birthdays = ()
    for i in range(len(possible_birthdays)):
        if (month == possible_birthdays[i][0]):
            new_possible_birthdays += (possible_birthdays[i],)
    new_day = ''
    counter = 0
    for n in range(len(new_possible_birthdays)):
        new_day = new_possible_birthdays[n][1]
        if (unique_day(new_day, possible_birthdays) == True):
            counter += 1
    if True:
        if (counter == 0):
            return False
        else:
            return True
    elif True:
        pass
","{'unique_day': 'correct_2_104.py', 'unique_month': 'correct_2_104.py', 'contains_unique_day': 'correct_2_107.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,B2.k'}","def unique_day ( day , possible_birthdays ) :
    total = ( )
    for i in possible_birthdays :
        total += ( i [ 1 ] , )
    pass
    if ( total . count ( day ) == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    total = ( )
    for i in possible_birthdays :
        total += ( i [ 0 ] , )
    pass
    if ( total . count ( month ) == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    uniquedays = ( )
    daysinmonth = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            uniquedays += ( possible_birthdays [ i ] , )
        pass
    ref_new_day = ''
    ref_counter = 0
    for ref_n in range ( len ( uniquedays ) ) :
        ref_new_day = uniquedays [ ref_n ] [ 1 ]
        if ( unique_day ( ref_new_day , possible_birthdays ) == True ) :
            ref_counter += 1
        pass
    pass
    if True :
        pass
        if ( ref_counter == 0 ) :
            return False
        else :
            return True
        pass
    elif True :
        pass
",N/A,9.309,0.292,0.000,0.002,0.294,1.232,11.165,17,17,0.551
question_2,100,0,wrong_2_302.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            num += 1
    return ( num == 1 )
def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == month ) :
            num += 1
    return ( num == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and unique_day ( i [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            num += 1
    return ( num == 1 )
def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == month ) :
            num += 1
    return ( num == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and unique_day ( i [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and unique_day ( i [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_288.py', 'unique_month': 'correct_2_288.py', 'contains_unique_day': 'correct_2_012.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            num += 1
    return ( num == 1 )


def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            num += 1
    return ( num == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and unique_day ( i [ 1 ] , possible_birthdays ) ) :
            return True
    return False
",N/A,0.859,0.307,0.000,0.000,0.210,0.139,1.536,17,17,0.012
question_2,100,0,wrong_2_217.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( day == i [ 2 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( day == i [ 2 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_123.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.502,0.089,0.000,0.000,0.171,0.275,1.059,17,17,1.041
question_2,100,0,wrong_2_366.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_245.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.504,0.223,0.000,0.000,0.186,0.183,1.118,17,17,1.021
question_2,100,0,wrong_2_272.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    birthdays_in_month = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            birthdays_in_month += ( birthday , )
    for birthday in birthdays_in_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_026.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.502,0.920,0.000,0.000,0.278,0.200,1.928,17,17,0.018
question_2,100,0,wrong_2_345.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return Flase
def unique_month ( month , possible_birthdays ) :
    only_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            only_month = ( only_month + ( i , ) )
    if ( len ( only_month ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return Flase
def unique_month ( month , possible_birthdays ) :
    only_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            only_month = ( only_month + ( i , ) )
    if ( len ( only_month ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            tup += ( i [ 1 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    data = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            data += ( birthday , )
    if ( len ( data ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_042.py', 'unique_month': 'correct_2_246.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    only_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            only_month = ( only_month + ( i , ) )
    if ( len ( only_month ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.505,0.795,0.000,0.000,0.231,0.270,1.829,17,17,0.446
question_2,100,0,wrong_2_322.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            counter = ( counter + 1 )
        else :
            continue
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( month == dates [ 0 ] ) :
            counter = ( counter + 1 )
        else :
            continue
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    def month_tuple ( month , possible_birthdays ) :
        new_tuple = ( )
        for dates in possible_birthdays :
            if ( month == dates [ 0 ] ) :
                new_tuple = ( new_tuple + ( dates , ) )
            else :
                continue
        return new_tuple
    new_tuple = month_tuple ( month , possible_birthdays )
    for dates2 in new_tuple :
        counter = 0
        for dates in possible_birthdays :
            if ( dates2 [ 1 ] == dates [ 1 ] ) :
                counter = ( counter + 1 )
            else :
                continue
    if ( counter > 1 ) :
        return False
    else :
        return True


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        pass
        if ( day == dates [ 1 ] ) :
            counter = ( counter + 1 )
        else :
            continue
        pass
    pass
    if ( counter > 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        pass
        if ( month == dates [ 0 ] ) :
            counter = ( counter + 1 )
        else :
            continue
        pass
    pass
    if ( counter > 1 ) :
        return False
    else :
        return True
    pass


def contains_unique_day ( month , possible_birthdays ) :
    new_tuple = ( )
    for dates in possible_birthdays :
        pass
        if ( month == dates [ 0 ] ) :
            new_tuple = ( new_tuple + ( dates , ) )
        else :
            continue
        pass
    return new_tuple
    for day_in_others in possible_days_in_others :
        new_tuple = month_tuple ( month , possible_birthdays )
        for dates2 in new_tuple :
            counter = 0
            if ( day_in_month == day_in_others ) :
                pass
                if ( dates2 [ 1 ] == dates [ 1 ] ) :
                    counter = ( counter + 1 )
                else :
                    continue
                pass
            pass
        pass
        if ( counter > 1 ) :
            return False
        return True
    pass
","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    possible_days_in_month = ()
    possible_days_in_others = ()
    for possible_dates in possible_birthdays:
        if (possible_dates[0] == month):
            possible_days_in_month += (possible_dates[1],)
        else:
            possible_days_in_others += (possible_dates[1],)
    for day_in_month in possible_days_in_month:
        unique = True
        for day_in_others in possible_days_in_others:
            if (day_in_month == day_in_others):
                unique = False
                if False:
                    pass
                else:
                    pass
                break
        if (unique == True):
            return True
    return False
","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_271.py', 'contains_unique_day': 'correct_2_094.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.g,B2.l'}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        pass
        if ( day == dates [ 1 ] ) :
            counter = ( counter + 1 )
        else :
            continue
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        pass
        if ( month == dates [ 0 ] ) :
            counter = ( counter + 1 )
        else :
            continue
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    ref_possible_days_in_month = ( )
    ref_possible_days_in_others = ( )
    for dates in possible_birthdays :
        pass
        if ( month == dates [ 0 ] ) :
            ref_possible_days_in_month += ( dates [ 1 ] , )
        else :
            ref_possible_days_in_others += ( dates [ 1 ] , )
        pass
    for day_in_others in ref_possible_days_in_month :
        ref_unique = True
        for ref_day_in_others in ref_possible_days_in_others :
            if ( day_in_others == ref_day_in_others ) :
                ref_unique = False
                if False :
                    pass
                else :
                    pass
                break
            pass
        pass
        if ( ref_unique == True ) :
            return True
    return False
",N/A,13.818,1.000,0.000,0.003,0.350,1.372,16.586,17,17,0.490
question_2,100,0,wrong_2_308.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    pass


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    pass


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_107.py', 'unique_month': 'correct_2_107.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.852,0.405,0.000,0.000,0.232,0.055,1.566,17,17,0.471
question_2,100,0,wrong_2_242.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    count = 0
    for ele in days :
        if ( ele == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        months += ( i [ 0 ] , )
    count = 0
    for ele in months :
        if ( ele == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    count = 0
    for ele in days :
        if ( ele == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        months += ( i [ 0 ] , )
    count = 0
    for ele in months :
        if ( ele == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    count = 0
    for ele in days :
        if ( ele == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        months += ( i [ 0 ] , )
    count = 0
    for ele in months :
        if ( ele == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_151.py', 'unique_month': 'correct_2_151.py'}","{'unique_day': '', 'unique_month': ''}","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    count = 0
    for ele in days :
        if ( ele == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        months += ( i [ 0 ] , )
    count = 0
    for ele in months :
        if ( ele == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
",N/A,0.503,0.042,0.000,0.000,0.411,0.043,1.018,17,17,0.012
question_2,100,0,wrong_2_434.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    return
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    return
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    days = [ birthday [ 1 ] for birthday in possible_birthdays ]
    return ( days . count ( date ) == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_275.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_days = [ ref_birthday [ 1 ] for ref_birthday in possible_birthdays ]
    return ( ref_days . count ( date ) == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.500,0.018,0.000,0.000,0.073,0.239,0.848,17,17,3.667
question_2,100,0,wrong_2_370.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    data = ( )
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            data += ( birthday , )
    if ( len ( data ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    data = ( )
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            data += ( birthday , )
    if ( len ( data ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    data = ( )
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            data += ( birthday , )
    if ( len ( data ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_246.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    data = ( )
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            data += ( birthday , )
    if ( len ( data ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.503,0.177,0.000,0.000,0.180,0.191,1.073,17,17,1.043
question_2,100,0,wrong_2_293.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    while ( len ( bdaylist ) > 0 ) :
        single = bdaylist [ 0 ]
        if ( single [ 1 ] == day ) :
            count = ( count + 1 )
        if ( count == 2 ) :
            return False
            break
        bdaylist = bdaylist [ 1 : ]
    return True
def unique_month ( month , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    while ( len ( bdaylist ) > 0 ) :
        single = bdaylist [ 0 ]
        if ( single [ 0 ] == month ) :
            count = ( count + 1 )
        if ( count == 2 ) :
            return False
            break
        bdaylist = bdaylist [ 1 : ]
    return True
def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    while ( len ( bday_list ) > 0 ) :
        if ( bday_list [ 0 ] [ 0 ] == month ) :
            month_list = ( month_list + ( bday_list [ 0 ] , ) )
        bday_list = bday_list [ 1 : ]
    while ( len ( month_list ) > 0 ) :
        if unique_day ( month_list [ 0 ] [ 1 ] , possible_birthdays ) :
            return True
        month_list = month_list [ 1 : ]
    return False


","def unique_day ( day , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    for birthday in possible_birthdays :
        single = bdaylist [ 0 ]
        if ( single [ 1 ] == day ) :
            'Your solution here'
            a = 0
        count = ( count + 1 )
    pass
    if ( count == 2 ) :
        return False
        break
    else :
        bdaylist = bdaylist [ 1 : ]
    return True


def unique_month ( month , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    for birthday in possible_birthdays :
        single = bdaylist [ 0 ]
        if ( single [ 0 ] == month ) :
            'Your solution here'
            a = 0
        count = ( count + 1 )
    pass
    if ( count == 2 ) :
        return False
        break
    else :
        bdaylist = bdaylist [ 1 : ]
    return True


def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    for k in range ( len ( possible_birthdays ) ) :
        pass
        if ( bday_list [ 0 ] [ 0 ] == month ) :
            month_list = ( month_list + ( bday_list [ 0 ] , ) )
        bday_list = bday_list [ 1 : ]
    pass
    for l in range ( len ( x ) ) :
        pass
        if unique_day ( month_list [ 0 ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            return True
        month_list = month_list [ 1 : ]
    return False
","def unique_day ( day , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            a = ( a + 1 )
    if ( a == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + 1 )
    if ( a == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_260.py', 'unique_month': 'correct_2_260.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            a = ( a + 1 )
    pass
    if ( a == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + 1 )
    pass
    if ( a == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    for k in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            month_list = ( month_list + ( possible_birthdays [ k ] , ) )
    pass
    for l in range ( len ( month_list ) ) :
        pass
        if unique_day ( month_list [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,12.709,2.190,0.000,0.003,0.244,2.408,17.593,17,17,0.547
question_2,100,0,wrong_2_237.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    if ( ( day == 18 ) or 19 ) :
        return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    if ( ( day == 18 ) or 19 ) :
        return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    if ( tuple ( map ( ( lambda x : x [ 1 ] ) , possible_birthdays ) ) . count ( day ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_093.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    if ( tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , possible_birthdays ) ) . count ( date ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.842,0.025,0.000,0.000,0.070,0.219,1.176,17,17,2.556
question_2,100,0,wrong_2_301.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    if ( month == 'June' ) :
        return True
    elif ( month == 'May' ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    if ( month == 'June' ) :
        return True
        if ( True in ans ) :
            return True
        return False
    pass
","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    specific_set = tuple(filter((lambda x: (x[0] == month)), possible_birthdays))
    get_days = tuple(map((lambda x: x[1]), specific_set))
    if True:
        ans = tuple(map((lambda x: unique_day(x, possible_birthdays)), get_days))
        if (True in ans):
            return True
        return False
","{'unique_day': 'correct_2_065.py', 'unique_month': 'correct_2_065.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,A1.a'}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    if True :
        ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
        if ( True in ref_ans ) :
            return True
        return False
    pass
",N/A,3.425,0.230,0.000,0.002,0.298,0.208,4.193,17,17,0.586
question_2,100,0,wrong_2_388.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for month_day in possible_birthdays :
        date = month_day [ 1 ]
        if ( day == date ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for month_day in possible_birthdays :
        mont = month_day [ 0 ]
        if ( month == mont ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    condition = False
    for month_day in possible_birthdays :
        if ( month == month_day [ 0 ] ) :
            condition = unique_day ( month_day [ 1 ] , possible_birthdays )
    return condition


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for month_day in possible_birthdays :
        date = month_day [ 1 ]
        if ( day == date ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for month_day in possible_birthdays :
        mont = month_day [ 0 ]
        if ( month == mont ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    condition = False
    for month_day in possible_birthdays :
        if ( month == month_day [ 0 ] ) :
            condition = unique_day ( month_day [ 1 ] , possible_birthdays )
    return condition


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    result = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result or unique_day ( i [ 1 ] , possible_birthdays ) )
    return result


","{'unique_day': 'reference.py', 'unique_month': 'reference.py', 'contains_unique_day': 'correct_2_074.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for month_day in possible_birthdays :
        if ( month_day [ 1 ] == day ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for month_day in possible_birthdays :
        if ( month_day [ 0 ] == month ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    condition = False
    for month_day in possible_birthdays :
        if ( month == month_day [ 0 ] ) :
            condition = ( condition or unique_day ( month_day [ 1 ] , possible_birthdays ) )
    return condition
",N/A,0.862,0.446,0.000,0.000,0.308,0.329,1.970,17,17,0.207
question_2,100,0,wrong_2_168.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.500,N/A,N/A,N/A
question_2,100,0,wrong_2_040.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    num = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            num += 1
    return ( num == 1 )
def unique_month ( month , possible_birthdays ) :
    num = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            num += 1
    return ( num == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if unique_day ( birthday [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    num = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            num += 1
    return ( num == 1 )
def unique_month ( month , possible_birthdays ) :
    num = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            num += 1
    return ( num == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if unique_day ( birthday [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    num = 0
    for birthday in possible_birthdays :
        if ( date == birthday [ 1 ] ) :
            num += 1
    return ( num == 1 )




def unique_month ( month , possible_birthdays ) :
    num = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            num += 1
    return ( num == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if unique_day ( birthday [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_045.py', 'unique_month': 'correct_2_045.py', 'contains_unique_day': 'correct_2_164.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    num = 0
    for birthday in possible_birthdays :
        if ( date == birthday [ 1 ] ) :
            num += 1
    return ( num == 1 )


def unique_month ( month , possible_birthdays ) :
    num = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            num += 1
    return ( num == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if unique_day ( birthday [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.500,0.273,0.000,0.000,0.178,0.145,1.115,17,17,0.012
question_2,100,0,wrong_2_382.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.496,N/A,N/A,N/A
question_2,100,0,wrong_2_050.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    for x in range ( len ( 1 , ( possible_birthdays + 1 ) ) ) :
        for i in possible_birthdays [ x ] [ 1 ] :
            if ( i == possible_birthdays [ 0 ] [ 1 ] ) :
                return False
            else :
                return ( i == unique_day ( date , possible_birthdays [ 2 : ] [ 1 ] ) )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    pass
    for x in range ( len ( 1 , ( possible_birthdays + 1 ) ) ) :
        pass
        if ( b [ 1 ] == day ) :
            pass
            if ( i == possible_birthdays [ 0 ] [ 1 ] ) :
                return False
            pass
        else :
            pass
        pass
    pass


def unique_month ( month , possible_birthdays ) :
    return


def contains_unique_day ( month , possible_birthdays ) :
    return
","

def unique_day(day, possible_birthdays):
    s = 0
    for b in possible_birthdays:
        if (b[1] == day):
            if True:
                s = (s + 1)
        else:
            continue
    return (s == 1)


def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_223.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': 'B1.f', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        pass
        if ( ref_b [ 1 ] == date ) :
            pass
            if True :
                ref_s = ( ref_s + 1 )
            pass
        else :
            continue
        pass
    return ( ref_s == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,3.494,0.040,0.000,0.001,0.149,0.366,4.075,17,17,1.500
question_2,100,0,wrong_2_390.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            unique += 1
    if ( unique > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            unique += 1
    if ( unique > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    bd = ( )
    tru = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            bd += ( i , )
    for i in bd :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            tru += 1
    if ( tru > 0 ) :
        return True
    return False


","def unique_day ( day , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            unique += 1
    if ( unique > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            unique += 1
    if ( unique > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    bd = ( )
    tru = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            bd += ( i , )
    for i in bd :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            tru += 1
    if ( tru > 0 ) :
        return True
    return False


","def unique_day ( day , possible_birthdays ) :
    appearance = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            appearance += 1
    if ( appearance == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    appearance = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            appearance += 1
    if ( appearance == 1 ) :
        return True
    return False






def contains_unique_day(month, possible_birthdays):
    new_possible_birthdays = ()
    for i in range(len(possible_birthdays)):
        if (month == possible_birthdays[i][0]):
            new_possible_birthdays += (possible_birthdays[i],)
    new_day = ''
    counter = 0
    for n in range(len(new_possible_birthdays)):
        new_day = new_possible_birthdays[n][1]
        if (unique_day(new_day, possible_birthdays) == True):
            counter += 1
    if (counter == 0):
        return False
    return True
","{'unique_day': 'correct_2_199.py', 'unique_month': 'correct_2_199.py', 'contains_unique_day': 'correct_2_107.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'A1.a'}","def unique_day ( day , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            unique += 1
    if ( unique == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            unique += 1
    if ( unique == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    bd = ( )
    tru = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            bd += ( possible_birthdays [ i ] , )
    ref_new_day = ''
    tru = 0
    for ref_n in range ( len ( bd ) ) :
        ref_new_day = bd [ ref_n ] [ 1 ]
        if ( unique_day ( ref_new_day , possible_birthdays ) == True ) :
            tru += 1
    if ( tru == 0 ) :
        return False
    return True
",N/A,0.836,0.311,0.000,0.000,0.299,1.147,2.624,17,17,0.347
question_2,100,0,wrong_2_112.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.500,N/A,N/A,N/A
question_2,100,0,wrong_2_406.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    tupleofdays = ( )
    for i in possible_birthdays :
        tupleofdays += ( i [ 1 ] , )
    count = 0
    for i in tupleofdays :
        if ( day == i ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    tupleofmonths = ( )
    for i in possible_birthdays :
        tupleofmonths += ( i [ 0 ] , )
    count = 0
    for i in tupleofmonths :
        if ( month == i ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            ans = False
            if ( i [ 0 ] == month ) :
                ans = True
                break
            else :
                continue
        else :
            continue
    return ans


","def unique_day ( day , possible_birthdays ) :
    tupleofdays = ( )
    if True :
        tupleofdays += ( i [ 1 ] , )
    count = 0
    for i in tupleofdays :
        pass
        if ( day == i ) :
            count += 1
        pass
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    tupleofmonths = ( )
    for i in possible_birthdays :
        tupleofmonths += ( i [ 0 ] , )
        if False :
            pass
        pass
        if ( month == i ) :
            count += 1
        pass
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for i in possible_birthdays :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            ans = False
            if ( i [ 0 ] == month ) :
                ans = True
                break
            else :
                continue
            pass
        else :
            continue
        pass
    return ans
","

def unique_day(day, possible_birthdays):
    if True:
        pass
    count = 0
    for i in possible_birthdays:
        if (i[1] == day):
            count += 1
    return (count == 1)




def unique_month(month, possible_birthdays):
    counter = 0
    for i in range(len(possible_birthdays)):
        if False:
            pass
        if (month == possible_birthdays[i][0]):
            counter = (counter + 1)
    return (counter == 1)


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            months = birthday [ 0 ]
            if ( months == month ) :
                return True
            else :
                continue
        else :
            continue
    return False


","{'unique_day': 'correct_2_146.py', 'unique_month': 'correct_2_220.py', 'contains_unique_day': 'correct_2_080.py'}","{'unique_day': 'B1.h', 'unique_month': 'B1.g', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    if True :
        pass
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == day ) :
            count += 1
        pass
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if False :
            pass
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            ref_counter = ( ref_counter + 1 )
        pass
    return ( ref_counter == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for i in possible_birthdays :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            ref_months = i [ 0 ]
            if ( i [ 0 ] == month ) :
                return True
            else :
                continue
            pass
        else :
            continue
        pass
    return False
",N/A,7.207,0.047,0.000,0.002,0.261,0.957,8.503,17,17,0.569
question_2,100,0,wrong_2_235.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( date == birthday [ 1 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( date == birthday [ 1 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","{'unique_day': 'correct_2_277.py', 'unique_month': 'correct_2_277.py', 'contains_unique_day': 'correct_2_175.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( date == birthday [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False
",N/A,0.704,0.702,0.000,0.000,0.234,0.475,2.139,17,17,0.020
question_2,100,0,wrong_2_057.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.516,N/A,N/A,N/A
question_2,100,0,wrong_2_047.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    day_count = 0
    for i in possible_birthdays :
        if ( day in i ) :
            day_count += 1
        if ( day_count > 1 ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    month_count = 0
    for i in possible_birthdays :
        if ( month in i ) :
            month_count += 1
        if ( month_count > 1 ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    days_in_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            days_in_month += ( i [ 1 ] , )
    for i in days_in_month :
        if unique_day ( i , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    day_count = 0
    for i in possible_birthdays :
        pass
        if ( day in i ) :
            day_count += 1
        pass
    pass
    if ( unique_day_counter != 1 ) :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    month_count = 0
    for i in possible_birthdays :
        pass
        if ( month in i ) :
            month_count += 1
        pass
    pass
    if ( unique_month_counter != 1 ) :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    days_in_month = ( )
    for i in possible_birthdays :
        pass
        if ( month in i ) :
            days_in_month += ( i [ 1 ] , )
        pass
    pass
    for i in days_in_month :
        pass
        if unique_day ( i , possible_birthdays ) :
            return True
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    unique_day_counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            unique_day_counter += 1
    if ( unique_day_counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    unique_month_counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            unique_month_counter += 1
    if ( unique_month_counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    days_in_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            days_in_month += ( i [ 1 ] , )
    for i in days_in_month :
        if unique_day ( i , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_078.py', 'unique_month': 'correct_2_078.py', 'contains_unique_day': 'correct_2_053.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    day_count = 0
    for i in possible_birthdays :
        pass
        if ( day in i ) :
            day_count += 1
        pass
    pass
    if ( day_count != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    month_count = 0
    for i in possible_birthdays :
        pass
        if ( month in i ) :
            month_count += 1
        pass
    pass
    if ( month_count != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    days_in_month = ( )
    for i in possible_birthdays :
        pass
        if ( month in i ) :
            days_in_month += ( i [ 1 ] , )
        pass
    pass
    for i in days_in_month :
        pass
        if unique_day ( i , possible_birthdays ) :
            return True
        pass
    return False
",N/A,7.537,1.262,0.000,0.002,0.307,0.086,9.220,17,17,0.181
question_2,100,0,wrong_2_018.py,fail_other,1,1,"def unique_day ( day , possible_birthdays ) :
    count_day = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            if ( count_day == 0 ) :
                count_day += 1
            else :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    count_month = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( count_month == 0 ) :
                count_month += 1
            else :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            day = birthday [ 1 ]
            if unique_day ( day , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count_day = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            if ( count_day == 0 ) :
                count_day += 1
            else :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    count_month = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( count_month == 0 ) :
                count_month += 1
            else :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            day = birthday [ 1 ]
            if unique_day ( day , possible_birthdays ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if unique_day ( birthday [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_077.py', 'contains_unique_day': 'correct_2_164.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count_day = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            if count_day :
                return False
            else :
                count_day = 1
    return count_day


def unique_month ( month , possible_birthdays ) :
    count_month = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if count_month :
                return False
            else :
                count_month = 1
    return count_month


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if unique_day ( birthday [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.724,0.150,0.000,0.000,0.211,0.800,1.909,11,17,N/A
question_2,100,0,wrong_2_052.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    result = 0
    while ( counter < len ( possible_birthdays ) ) :
        date = possible_birthdays [ counter ] [ 1 ]
        if ( date == day ) :
            result = ( result + 1 )
        counter = ( counter + 1 )
    if ( result > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    result = 0
    while ( counter < len ( possible_birthdays ) ) :
        chosen_month = possible_birthdays [ counter ] [ 0 ]
        if ( chosen_month == month ) :
            result = ( result + 1 )
        counter = ( counter + 1 )
    if ( result > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    while ( counter < len ( possible_birthdays ) ) :
        get_month = possible_birthdays [ counter ] [ 0 ]
        if ( get_month == month ) :
            test_date = possible_birthdays [ counter ] [ 1 ]
            if ( unique_day ( test_date , possible_birthdays ) == True ) :
                return True
        counter = ( counter + 1 )
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    result = 0
    while ( counter < len ( possible_birthdays ) ) :
        date = possible_birthdays [ counter ] [ 1 ]
        if ( date == day ) :
            result = ( result + 1 )
        counter = ( counter + 1 )
    pass
    if ( result > 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    result = 0
    while ( counter < len ( possible_birthdays ) ) :
        chosen_month = possible_birthdays [ counter ] [ 0 ]
        if ( chosen_month == month ) :
            result = ( result + 1 )
        counter = ( counter + 1 )
    pass
    if ( result > 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        get_month = possible_birthdays [ counter ] [ 0 ]
        if ( get_month == month ) :
            test_date = possible_birthdays [ counter ] [ 1 ]
            if ( unique_day ( test_date , possible_birthdays ) == True ) :
                return True
            pass
        pass
    else :
        counter = ( counter + 1 )
    return False
","

def unique_day(day, possible_birthdays):
    (i, times) = (0, 0)
    while (i < len(possible_birthdays)):
        if (possible_birthdays[i][1] == day):
            times += 1
        i += 1
    if (times == 1):
        return True
    return False




def unique_month(month, possible_birthdays):
    (i, times) = (0, 0)
    while (i < len(possible_birthdays)):
        if (possible_birthdays[i][0] == month):
            times += 1
        i += 1
    if (times == 1):
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    else :
        return False


","{'unique_day': 'correct_2_278.py', 'unique_month': 'correct_2_278.py', 'contains_unique_day': 'correct_2_109.py'}","{'unique_day': 'A1.a', 'unique_month': 'A1.a', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    result = 0
    while ( counter < len ( possible_birthdays ) ) :
        if ( possible_birthdays [ counter ] [ 1 ] == day ) :
            result = ( result + 1 )
        counter = ( counter + 1 )
    pass
    if ( result == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    result = 0
    while ( counter < len ( possible_birthdays ) ) :
        if ( possible_birthdays [ counter ] [ 0 ] == month ) :
            result = ( result + 1 )
        counter = ( counter + 1 )
    pass
    if ( result == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
            pass
        pass
    else :
        return False
",N/A,5.544,1.898,0.000,0.002,0.399,11.354,19.232,17,17,0.321
question_2,100,0,wrong_2_402.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    for x in possible_birthdays :
        if ( day in x ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    for x in possible_birthdays :
        if ( day in x ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_s = 0
    for x in possible_birthdays :
        if ( day in x ) :
            ref_s = ( ref_s + 1 )
        else :
            continue
    return ( ref_s == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.844,0.021,0.000,0.000,0.157,0.366,1.409,17,17,2.241
question_2,100,0,wrong_2_353.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + i )
    for j in count :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + i )
    for j in count :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            days += ( birthday [ 1 ] , )
    for day in days :
        if ( unique_day ( day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( day , possible_birthdays )
    return False


","{'unique_day': 'correct_2_234.py', 'unique_month': 'correct_2_234.py', 'contains_unique_day': 'correct_2_201.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( j , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == j ) :
            count = ( count + i )
    for ref_day in count :
        if ( unique_day ( ref_day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( ref_day , possible_birthdays )
    return False
",N/A,0.504,0.438,0.000,0.000,0.349,0.365,1.688,17,17,0.131
question_2,100,0,wrong_2_320.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    month_day = ( )
    for j in possible_birthdays :
        if ( j == possible_birthdays [ 0 ] ) :
            month_day = ( month_day + ( j , ) )
    for t in month_day :
        return unique_day ( t [ 1 ] , month_day )


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    month_day = ( )
    for j in possible_birthdays :
        if ( j == possible_birthdays [ 0 ] ) :
            month_day = ( month_day + ( j , ) )
    for t in month_day :
        return unique_day ( t [ 1 ] , month_day )


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    dayi = ( )
    result = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            dayi += ( i [ 1 ] , )
    for j in dayi :
        result = ( result or unique_day ( j , possible_birthdays ) )
    return result


","{'unique_day': 'correct_2_210.py', 'unique_month': 'correct_2_210.py', 'contains_unique_day': 'correct_2_123.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    month_day = ( )
    ref_result = False
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            month_day += ( j [ 1 ] , )
    for t in month_day :
        ref_result = ( ref_result or unique_day ( t , possible_birthdays ) )
    return ref_result
",N/A,0.503,0.384,0.000,0.000,0.277,0.398,1.588,17,17,0.210
question_2,100,0,wrong_2_141.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.502,N/A,N/A,N/A
question_2,100,0,wrong_2_008.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == days ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == days ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( day , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = 0
    for j in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ j ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_014.py', 'unique_month': 'correct_2_014.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,0.526,0.612,0.000,0.000,0.276,0.250,1.696,17,17,0.021
question_2,100,0,wrong_2_296.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_226.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.508,0.077,0.000,0.000,0.176,0.180,0.962,17,17,1.167
question_2,100,0,wrong_2_153.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count += 1
    if ( count > 1 ) :
        check = False
    else :
        check = True
    return check
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count > 1 ) :
        check = False
    else :
        check = True
    return check
def contains_unique_day ( month , possible_birthdays ) :
    birthdays = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            birthdays += ( i , )
    for j in birthdays :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count += 1
    if ( count > 1 ) :
        check = False
    else :
        check = True
    return check
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count > 1 ) :
        check = False
    else :
        check = True
    return check
def contains_unique_day ( month , possible_birthdays ) :
    birthdays = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            birthdays += ( i , )
    for j in birthdays :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_107.py', 'unique_month': 'correct_2_107.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    birthdays = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            birthdays += ( i , )
    for i in birthdays :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.505,1.036,0.000,0.000,0.263,0.600,2.435,17,17,0.144
question_2,100,0,wrong_2_309.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    new = ( )
    for i in range ( len ( possible_birthdays ) ) :
        new = ( new + ( possible_birthdays [ i ] [ 1 ] , ) )
    if ( new . count ( day ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    new = ( )
    for i in range ( len ( possible_birthdays ) ) :
        new = ( new + ( possible_birthdays [ i ] [ 0 ] , ) )
    if ( new . count ( month ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    new = ( )
    for i in range ( len ( possible_birthdays ) ) :
        new = ( new + ( possible_birthdays [ i ] [ 1 ] , ) )
    if ( new . count ( day ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    new = ( )
    for i in range ( len ( possible_birthdays ) ) :
        new = ( new + ( possible_birthdays [ i ] [ 0 ] , ) )
    if ( new . count ( month ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    new = ( )
    for i in range ( len ( possible_birthdays ) ) :
        new = ( new + ( possible_birthdays [ i ] [ 1 ] , ) )
    if ( new . count ( day ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    new = ( )
    for i in range ( len ( possible_birthdays ) ) :
        new = ( new + ( possible_birthdays [ i ] [ 0 ] , ) )
    if ( new . count ( month ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_202.py', 'unique_month': 'correct_2_202.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    new = ( )
    for i in range ( len ( possible_birthdays ) ) :
        new = ( new + ( possible_birthdays [ i ] [ 1 ] , ) )
    if ( new . count ( day ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    new = ( )
    for i in range ( len ( possible_birthdays ) ) :
        new = ( new + ( possible_birthdays [ i ] [ 0 ] , ) )
    if ( new . count ( month ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.505,0.075,0.000,0.000,0.236,0.121,0.964,17,17,0.372
question_2,100,0,wrong_2_421.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_285.py', 'unique_month': 'correct_2_285.py', 'contains_unique_day': 'correct_2_199.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.501,0.258,0.000,0.000,0.259,0.113,1.154,17,17,0.011
question_2,100,0,wrong_2_340.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","{'unique_day': 'correct_2_277.py', 'unique_month': 'correct_2_277.py', 'contains_unique_day': 'correct_2_175.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( date == birthday [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False
",N/A,0.500,0.683,0.000,0.000,0.187,0.478,1.871,17,17,0.030
question_2,100,0,wrong_2_244.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_123.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            ref_result = ( ref_result + 1 )
        else :
            continue
    if ( ref_result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    x = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.505,0.260,0.000,0.000,0.281,0.824,1.898,17,17,0.562
question_2,100,0,wrong_2_260.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    if ( int ( date ) in possible_birthdays [ 1 ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( int ( date ) in possible_birthdays [ 1 ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    specific_set = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    get_days = tuple ( map ( ( lambda x : x [ 1 ] ) , specific_set ) )
    ans = tuple ( map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , get_days ) )
    if ( True in ans ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_103.py', 'unique_month': 'correct_2_103.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
    if ( True in ref_ans ) :
        return True
    else :
        return False
",N/A,0.503,0.030,0.000,0.000,0.078,0.544,1.174,0,17,N/A
question_2,100,0,wrong_2_061.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    days = tuple ( filter ( ( lambda x : ( x [ 1 ] == day ) ) , possible_birthdays ) )
    if ( len ( days ) <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    if ( len ( months ) <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            dates += ( date , )
    for dated in dates :
        if ( unique_day ( dated [ 1 ] , possible_birthdays ) == True ) :
            return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    days = tuple ( filter ( ( lambda x : ( x [ 1 ] == day ) ) , possible_birthdays ) )
    if ( len ( days ) <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    if ( len ( months ) <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            dates += ( date , )
    for dated in dates :
        if ( unique_day ( dated [ 1 ] , possible_birthdays ) == True ) :
            return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    if ( len ( tuple ( filter ( ( lambda x : ( x [ 1 ] == day ) ) , possible_birthdays ) ) ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    if ( len ( tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) ) ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    possible_days = ( )
    for x in possible_birthdays :
        if ( x [ 0 ] == month ) :
            possible_days += ( x , )
    for day in possible_days :
        if ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) :
            return True
    else :
        return False


","{'unique_day': 'correct_2_179.py', 'unique_month': 'correct_2_179.py', 'contains_unique_day': 'correct_2_100.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    if ( len ( tuple ( filter ( ( lambda days : ( days [ 1 ] == day ) ) , possible_birthdays ) ) ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    if ( len ( tuple ( filter ( ( lambda months : ( months [ 0 ] == month ) ) , possible_birthdays ) ) ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            dates += ( date , )
    for dated in dates :
        if ( unique_day ( dated [ 1 ] , possible_birthdays ) == True ) :
            return True
    else :
        return False
",N/A,0.507,0.087,0.000,0.000,0.133,0.150,0.905,17,17,0.222
question_2,100,0,wrong_2_328.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day in date ) :
            counter += 1
        if ( counter > 1 ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( month in date ) :
            counter += 1
        if ( counter > 1 ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        ( months , day ) = date
        if unique_day ( day , possible_birthdays ) :
            return ( month == months )


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( day in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( month in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        ( months , day ) = date
        if unique_day ( day , possible_birthdays ) :
            return ( month == months )
        pass
    pass
","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    contains = ( )
    for date in possible_birthdays :
        if ( ( month in date ) and unique_day ( date [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_252.py', 'unique_month': 'correct_2_252.py', 'contains_unique_day': 'correct_2_047.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( day in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( month in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        if ( ( month in date ) and unique_day ( date [ 1 ] , possible_birthdays ) ) :
            return True
        pass
    return False
",N/A,7.566,1.200,0.000,0.002,0.280,0.266,9.341,17,17,0.369
question_2,100,0,wrong_2_035.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    a = ''
    for date in possible_birthdays :
        if ( a == date [ 1 ] ) :
            return False
        elif ( day == date [ 1 ] ) :
            a = day
    return True
def unique_month ( month , possible_birthdays ) :
    a = ''
    for date in possible_birthdays :
        if ( a == date [ 0 ] ) :
            return False
        elif ( month == date [ 0 ] ) :
            a = month
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( month == date [ 0 ] ) :
            if unique_day ( date [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    a = ''
    for date in possible_birthdays :
        if ( a == date [ 1 ] ) :
            return False
        elif ( day == date [ 1 ] ) :
            a = day
    return True
def unique_month ( month , possible_birthdays ) :
    a = ''
    for date in possible_birthdays :
        if ( a == date [ 0 ] ) :
            return False
        elif ( month == date [ 0 ] ) :
            a = month
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( month == date [ 0 ] ) :
            if unique_day ( date [ 1 ] , possible_birthdays ) :
                return True
    return False


","

def unique_day(day, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (day == date[1]):
            counter += 1
        elif False:
            pass
    return (counter == 1)




def unique_month(month, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (month == date[0]):
            counter += 1
        elif False:
            pass
    return (counter == 1)


def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( month == date [ 0 ] ) :
            if unique_day ( date [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_136.py', 'unique_month': 'correct_2_136.py', 'contains_unique_day': 'correct_2_136.py'}","{'unique_day': 'B2.j', 'unique_month': 'B2.j', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_counter = 0
    for date in possible_birthdays :
        if ( day == date [ 1 ] ) :
            ref_counter += 1
        elif ( day == date [ 1 ] ) :
            pass
    return ( ref_counter == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_counter = 0
    for date in possible_birthdays :
        if ( month == date [ 0 ] ) :
            ref_counter += 1
        elif ( month == date [ 0 ] ) :
            pass
    return ( ref_counter == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( month == date [ 0 ] ) :
            if unique_day ( date [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.895,0.075,0.000,0.000,0.218,0.748,1.960,17,17,0.292
question_2,100,0,wrong_2_170.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.504,N/A,N/A,N/A
question_2,100,0,wrong_2_072.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    return ( True if ( count == 1 ) else False )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( True if ( count == 1 ) else False )
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            tup += ( birthday , )
    for each in tup :
        if ( ( each [ 1 ] == '18' ) or ( each [ 1 ] == '19' ) ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    return ( True if ( count == 1 ) else False )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( True if ( count == 1 ) else False )
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            tup += ( birthday , )
    for each in tup :
        if ( ( each [ 1 ] == '18' ) or ( each [ 1 ] == '19' ) ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    singlemonthbirthday = ( )
    for birthmonth in possible_birthdays :
        if ( month == birthmonth [ 0 ] ) :
            singlemonthbirthday += ( birthmonth , )
    for birthday in singlemonthbirthday :
        if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_164.py', 'unique_month': 'correct_2_082.py', 'contains_unique_day': 'correct_2_082.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    return ( True if ( count == 1 ) else False )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( True if ( count == 1 ) else False )


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            tup += ( birthday , )
    for each in tup :
        if ( unique_day ( each [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.504,0.785,0.000,0.000,0.264,0.186,1.770,17,17,0.109
question_2,100,0,wrong_2_016.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.501,N/A,N/A,N/A
question_2,100,0,wrong_2_360.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    count = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 1 ] , ) )
    if ( len ( count ) < 2 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 0 ] , ) )
    if ( len ( count ) < 2 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    result = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 1 ] , ) )
            for j in count :
                result = ( result + ( unique_day ( j , possible_birthdays ) , ) )
    if ( True in result ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 1 ] , ) )
        pass
    pass
    if ( len ( count ) < 2 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 0 ] , ) )
        pass
    pass
    if ( len ( count ) < 2 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    result = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 1 ] , ) )
        pass
    pass
    if ( True in result ) :
        return True
    else :
        return False
    pass
","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    b = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            b += unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays )
    if ( b == 0 ) :
        return False
    else :
        return True


","{'unique_day': 'correct_2_017.py', 'unique_month': 'correct_2_017.py', 'contains_unique_day': 'correct_2_291.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays )
        pass
    pass
    if ( count == 0 ) :
        return False
    else :
        return True
    pass
",N/A,6.351,1.557,0.000,0.002,0.343,0.879,9.167,17,17,0.421
question_2,100,0,wrong_2_060.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pd = p [ 1 ]
        if ( day == pd ) :
            result = ( result + ( day , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pm = p [ 0 ]
        if ( month == pm ) :
            result = ( result + ( month , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( p , ) )
    for r in result :
        if ( unique_day ( r [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pd = p [ 1 ]
        if ( day == pd ) :
            result = ( result + ( day , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pm = p [ 0 ]
        if ( month == pm ) :
            result = ( result + ( month , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( p , ) )
    for r in result :
        if ( unique_day ( r [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    unique = ( )
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            unique = ( unique + ( day , ) )
    if ( len ( unique ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    unique = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            unique = ( unique + ( month , ) )
    if ( len ( unique ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    month_day = ( )
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            month_day = ( month_day + ( j , ) )
    for t in month_day :
        if ( unique_day ( t [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_062.py', 'unique_month': 'correct_2_062.py', 'contains_unique_day': 'correct_2_211.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( day == p [ 1 ] ) :
            result = ( result + ( day , ) )
    if ( len ( result ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( month , ) )
    if ( len ( result ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( p , ) )
    for r in result :
        if ( unique_day ( r [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.844,0.672,0.000,0.000,0.317,0.661,2.526,17,17,0.161
question_2,100,0,wrong_2_415.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    bday = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            bday += ( i , )
    for i in bday :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    bday = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            bday += ( i , )
    for i in bday :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    newtuple = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            newtuple = ( newtuple + ( i , ) )
    for j in newtuple :
        if ( unique_day ( j [ 1 ] , possible_birthdays ) == True ) :
            return True
    else :
        return False


","{'unique_day': 'correct_2_170.py', 'unique_month': 'correct_2_170.py', 'contains_unique_day': 'correct_2_277.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    bday = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            bday += ( i , )
    for ref_j in bday :
        if ( unique_day ( ref_j [ 1 ] , possible_birthdays ) == True ) :
            return True
    else :
        return False
",N/A,0.508,0.576,0.000,0.000,0.271,0.612,1.997,17,17,0.068
question_2,100,0,wrong_2_336.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","{'unique_day': 'correct_2_277.py', 'unique_month': 'correct_2_277.py', 'contains_unique_day': 'correct_2_175.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( date == birthday [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False
",N/A,0.502,0.696,0.000,0.000,0.203,0.482,1.908,17,17,0.030
question_2,100,0,wrong_2_428.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_288.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.500,0.106,0.000,0.000,0.173,0.183,0.982,17,17,1.225
question_2,100,0,wrong_2_344.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return Flase
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return Flase
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            tup += ( i [ 1 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_042.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.502,0.391,0.000,0.000,0.187,0.300,1.403,17,17,1.087
question_2,100,0,wrong_2_116.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.501,N/A,N/A,N/A
question_2,100,0,wrong_2_261.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    if ( date in possible_birthdays [ 1 ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( date in possible_birthdays [ 1 ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    specific_set = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    get_days = tuple ( map ( ( lambda x : x [ 1 ] ) , specific_set ) )
    ans = tuple ( map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , get_days ) )
    if ( True in ans ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_103.py', 'unique_month': 'correct_2_103.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
    if ( True in ref_ans ) :
        return True
    else :
        return False
",N/A,0.502,0.028,0.000,0.000,0.076,0.557,1.182,0,17,N/A
question_2,100,0,wrong_2_429.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    all_days = ( )
    repeat_days = ( )
    for date in possible_birthdays :
        if ( date [ 1 ] not in all_days ) :
            all_days += ( date [ 1 ] , )
        else :
            repeat_days += ( date [ 1 ] , )
    return ( day not in repeat_days )
def unique_month ( month , possible_birthdays ) :
    all_month = ( )
    repeat_month = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] not in all_month ) :
            all_month += ( date [ 0 ] , )
        else :
            repeat_month += ( date [ 0 ] , )
    return ( month not in repeat_month )
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if unique_day ( date [ 1 ] , possible_birthdays ) :
            if ( month == date [ 0 ] ) :
                return True
            else :
                continue
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    all_days = ( )
    repeat_days = ( )
    for date in possible_birthdays :
        if ( date [ 1 ] not in all_days ) :
            all_days += ( date [ 1 ] , )
        else :
            repeat_days += ( date [ 1 ] , )
    return ( day not in repeat_days )
def unique_month ( month , possible_birthdays ) :
    all_month = ( )
    repeat_month = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] not in all_month ) :
            all_month += ( date [ 0 ] , )
        else :
            repeat_month += ( date [ 0 ] , )
    return ( month not in repeat_month )
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if unique_day ( date [ 1 ] , possible_birthdays ) :
            if ( month == date [ 0 ] ) :
                return True
            else :
                continue
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 0 ] == month ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )






def contains_unique_day(month, possible_birthdays):
    for i in possible_birthdays:
        if (i[0] == month):
            if (unique_day(i[1], possible_birthdays) == True):
                return True
            else:
                pass
    else:
        return False
","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_229.py', 'contains_unique_day': 'correct_2_126.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B2.l'}","def unique_day ( day , possible_birthdays ) :
    all_days = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            all_days = ( all_days + 1 )
        else :
            continue
    return ( all_days == 1 )


def unique_month ( month , possible_birthdays ) :
    all_month = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            all_month = ( all_month + 1 )
        else :
            continue
    return ( all_month == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            if ( unique_day ( date [ 1 ] , possible_birthdays ) == True ) :
                return True
            else :
                pass
    else :
        return False
",N/A,0.528,0.034,0.000,0.000,0.301,0.913,1.802,17,17,0.539
question_2,100,0,wrong_2_268.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        check = possible_birthdays [ i ] [ 1 ]
        if ( check == day ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        check = possible_birthdays [ i ] [ 0 ]
        if ( check == month ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            day = possible_birthdays [ i ] [ 1 ]
            check = unique_day ( day , possible_birthdays )
            if ( check == True ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        check = possible_birthdays [ i ] [ 1 ]
        if ( check == day ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        check = possible_birthdays [ i ] [ 0 ]
        if ( check == month ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            day = possible_birthdays [ i ] [ 1 ]
            check = unique_day ( day , possible_birthdays )
            if ( check == True ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_243.py', 'unique_month': 'correct_2_243.py', 'contains_unique_day': 'correct_2_108.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count = ( count + 1 )
    if ( count != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count = ( count + 1 )
    if ( count != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.527,0.588,0.000,0.000,0.296,0.479,1.916,17,17,0.363
question_2,100,0,wrong_2_022.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    index = 1
    for days in tuple ( map ( ( lambda x : x [ 1 ] ) , possible_birthdays ) ) :
        if ( day == days ) :
            index = ( index * ( - 1 ) )
            if ( index == 1 ) :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    index = 1
    for months in tuple ( map ( ( lambda x : x [ 0 ] ) , possible_birthdays ) ) :
        if ( month == months ) :
            index = ( index * ( - 1 ) )
            if ( index == 1 ) :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthday_list = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    for i in tuple ( map ( ( lambda x : x [ 1 ] ) , birthday_list ) ) :
        if unique_day ( i , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    index = 1
    for days in tuple ( map ( ( lambda x : x [ 1 ] ) , possible_birthdays ) ) :
        if ( day == days ) :
            index = ( index * ( - 1 ) )
            if ( index == 1 ) :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    index = 1
    for months in tuple ( map ( ( lambda x : x [ 0 ] ) , possible_birthdays ) ) :
        if ( month == months ) :
            index = ( index * ( - 1 ) )
            if ( index == 1 ) :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthday_list = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    for i in tuple ( map ( ( lambda x : x [ 1 ] ) , birthday_list ) ) :
        if unique_day ( i , possible_birthdays ) :
            return True
    return False


","

def unique_day(day, possible_birthdays):
    s = 0
    for b in possible_birthdays:
        if True:
            if (b[1] == day):
                s = (s + 1)
            continue
    return (s == 1)




def unique_month(month, possible_birthdays):
    s = 0
    for b in possible_birthdays:
        if True:
            if (b[0] == month):
                s = (s + 1)
            continue
    return (s == 1)


def contains_unique_day ( month , possible_birthdays ) :
    get_possible_months = filter ( ( lambda birthday : ( birthday [ 0 ] == month ) ) , possible_birthdays )
    get_possible_days = map ( ( lambda birthday : birthday [ 1 ] ) , get_possible_months )
    for days in get_possible_days :
        if unique_day ( days , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_223.py', 'contains_unique_day': 'correct_2_283.py'}","{'unique_day': 'B1.f,A1.a', 'unique_month': 'B1.f,A1.a', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        if True :
            if ( ref_b [ 1 ] == day ) :
                ref_s = ( ref_s + 1 )
            continue
    return ( ref_s == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        if True :
            if ( ref_b [ 0 ] == month ) :
                ref_s = ( ref_s + 1 )
            continue
    return ( ref_s == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    birthday_list = filter ( ( lambda ref_birthday : ( ref_birthday [ 0 ] == month ) ) , possible_birthdays )
    ref_get_possible_days = map ( ( lambda ref_birthday : ref_birthday [ 1 ] ) , birthday_list )
    for i in ref_get_possible_days :
        if unique_day ( i , possible_birthdays ) :
            return True
    return False
",N/A,3.002,0.214,0.000,0.000,0.260,0.942,4.450,17,17,0.594
question_2,100,0,wrong_2_356.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return ( count >= 2 )
def unique_month ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    return ( count >= 2 )
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tf = ( tf or unique_day ( i [ 1 ] , possible_birthdays ) )
    return tf


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return ( count >= 2 )
def unique_month ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    return ( count >= 2 )
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tf = ( tf or unique_day ( i [ 1 ] , possible_birthdays ) )
    return tf


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    tf = False
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tf = ( tf or unique_day ( i [ 1 ] , possible_birthdays ) )
    return tf


","{'unique_day': 'correct_2_235.py', 'unique_month': 'correct_2_147.py', 'contains_unique_day': 'correct_2_235.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    tf = False
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tf = ( tf or unique_day ( i [ 1 ] , possible_birthdays ) )
    return tf
",N/A,0.661,0.359,0.000,0.000,0.201,0.143,1.385,17,17,0.120
question_2,100,0,wrong_2_130.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x = ( x + ( i , ) )
    total = 0
    for i in x :
        total = ( total + unique_day ( i [ 1 ] , possible_birthdays ) )
    if ( total != 0 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x = ( x + ( i , ) )
    total = 0
    for i in x :
        total = ( total + unique_day ( i [ 1 ] , possible_birthdays ) )
    if ( total != 0 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    data = ( )
    number = 0
    for datas in possible_birthdays :
        if ( month in datas ) :
            data += ( datas , )
    for days in data :
        number += unique_day ( days [ 1 ] , possible_birthdays )
    if ( number >= 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_245.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    total = 0
    for ref_datas in possible_birthdays :
        if ( month in ref_datas ) :
            x += ( ref_datas , )
    for ref_days in x :
        total += unique_day ( ref_days [ 1 ] , possible_birthdays )
    if ( total != 0 ) :
        return True
    else :
        return False
",N/A,0.505,0.657,0.000,0.000,0.300,0.830,2.324,17,17,0.198
question_2,100,0,wrong_2_222.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for mon in possible_birthdays :
        if ( date [ 0 ] == month ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for mon in possible_birthdays :
        if ( date [ 0 ] == month ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for mon in possible_birthdays :
        if ( mon [ 0 ] == month ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_140.py', 'unique_month': 'correct_2_140.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for mon in possible_birthdays :
        if ( mon [ 0 ] == month ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.506,0.234,0.000,0.000,0.203,0.210,1.173,17,17,0.532
question_2,100,0,wrong_2_177.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.499,N/A,N/A,N/A
question_2,100,0,wrong_2_003.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            num += 1
    return ( num == 1 )
def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            num += 1
    return ( num == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                days = ( days + ( i [ 1 ] , ) )
    return ( len ( days ) == 1 )


","def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            num += 1
    return ( num == 1 )
def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            num += 1
    return ( num == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                days = ( days + ( i [ 1 ] , ) )
    return ( len ( days ) == 1 )


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter += 1
    return ( counter == 1 )




def unique_month ( month , possible_birthdays ) :
    num = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            num += 1
    return ( num == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_196.py', 'unique_month': 'correct_2_045.py', 'contains_unique_day': 'correct_2_077.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            num += 1
    return ( num == 1 )


def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            num += 1
    return ( num == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.502,0.510,0.000,0.000,0.221,0.183,1.440,17,17,0.190
question_2,100,0,wrong_2_152.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_286.py', 'unique_month': 'correct_2_286.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.504,0.022,0.000,0.000,0.433,0.127,1.110,17,17,0.457
question_2,100,0,wrong_2_300.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            result += 1
        elif ( i [ 1 ] != day ) :
            result += 0
    if ( result == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            result += 1
        elif ( i [ 0 ] != month ) :
            result += 0
    if ( result == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] != month ) :
            continue
        elif unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            result += 1
        elif ( i [ 1 ] != day ) :
            result += 0
    if ( result == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            result += 1
        elif ( i [ 0 ] != month ) :
            result += 0
    if ( result == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] != month ) :
            continue
        elif unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            result += 1
        elif ( i [ 1 ] != day ) :
            result += 0
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            result += 1
        elif ( i [ 0 ] != month ) :
            result += 0
    if ( result == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] != month ) :
            continue
        elif unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_236.py', 'unique_month': 'correct_2_204.py', 'contains_unique_day': 'correct_2_204.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            result += 1
        elif ( i [ 1 ] != date ) :
            result += 0
    if ( result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            result += 1
        elif ( i [ 0 ] != month ) :
            result += 0
    if ( result == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] != month ) :
            continue
        elif unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.505,0.076,0.000,0.000,0.233,0.065,0.906,17,17,0.017
question_2,100,0,wrong_2_097.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        return count
        if ( count == 1 ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( date == i [ 1 ] ) :
            count += 1
        return count
    return False
    if ( count == 1 ) :
        return True
    else :
        pass
    pass


def unique_month ( month , possible_birthdays ) :
    return


def contains_unique_day ( month , possible_birthdays ) :
    return
","

def unique_day(day, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (day in date):
            counter += 1
    if (counter != 1):
        return False
    else:
        return True


def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_046.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': 'A1.b', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( date == i [ 1 ] ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,3.514,0.053,0.000,0.001,0.154,0.307,4.050,17,17,1.217
question_2,100,0,wrong_2_004.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'reference.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == date ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.604,0.095,0.000,0.000,0.142,0.178,1.039,17,17,1.250
question_2,100,0,wrong_2_091.py,fail_timeout,0,0,"def unique_day ( day , possible_birthdays ) :
    days = ( )
    for all_days in possible_birthdays :
        days = ( days + ( all_days [ 1 ] , ) )
        i = 0
        for all_days in days :
            if ( all_days == day ) :
                i = ( i + 1 )
    if ( i == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = ( )
    for all_months in possible_birthdays :
        months = ( months + ( all_months [ 0 ] , ) )
        i = 0
        for all_months in months :
            if ( all_months == month ) :
                i = ( i + 1 )
    if ( i == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    May_days = ( )
    June_days = ( )
    July_days = ( )
    August_days = ( )
    May_dates = possible_birthdays [ : 3 ]
    for all_days in May_dates :
        May_days = ( May_days + ( all_days [ 1 ] , ) )
    June_dates = possible_birthdays [ 3 : 5 ]
    for all_days in June_dates :
        June_days = ( June_days + ( all_days [ 1 ] , ) )
    July_dates = possible_birthdays [ 5 : 7 ]
    for all_days in July_dates :
        July_days = ( July_days + ( all_days [ 1 ] , ) )
    August_dates = possible_birthdays [ 7 : ]
    for all_days in August_dates :
        August_days = ( August_days + ( all_days [ 1 ] , ) )
    if ( month == 'May' ) :
        for days in May_days :
            found_repeated = 0
            for check_day in June_days :
                if ( days == check_day ) :
                    found_repeated = 1
                    break
            if ( found_repeated == 0 ) :
                for check_day in July_days :
                    if ( days == check_day ) :
                        found_repeated = 1
                        break
                if ( found_repeated == 0 ) :
                    for check_day in August_days :
                        if ( days == check_day ) :
                            found_repeated = 1
                            break
    elif ( month == 'June' ) :
        for days in June_days :
            found_repeated = 0
            for check_day in May_days :
                if ( days == check_day ) :
                    found_repeated = 1
                    break
            if ( found_repeated == 0 ) :
                for check_day in July_days :
                    if ( days == check_day ) :
                        found_repeated = 1
                        break
                if ( found_repeated == 0 ) :
                    for check_day in August_days :
                        if ( days == check_day ) :
                            found_repeated = 1
                            break
    elif ( month == 'July' ) :
        for days in July_days :
            found_repeated = 0
            for check_day in May_days :
                if ( days == check_day ) :
                    found_repeated = 1
                    break
            if ( found_repeated == 0 ) :
                for check_day in June_days :
                    if ( days == check_day ) :
                        found_repeated = 1
                        break
                if ( found_repeated == 0 ) :
                    for check_day in August_days :
                        if ( days == check_day ) :
                            found_repeated = 1
                            break
    else :
        for days in August_days :
            found_repeated = 0
            for check_day in May_days :
                if ( days == check_day ) :
                    found_repeated = 1
                    break
            if ( found_repeated == 0 ) :
                for check_day in June_days :
                    if ( days == check_day ) :
                        found_repeated = 1
                        break
                if ( found_repeated == 0 ) :
                    for check_day in July_days :
                        if ( days == check_day ) :
                            found_repeated = 1
                            break
    if ( found_repeated == 0 ) :
        return True
    return False


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for all_days in possible_birthdays :
        days = ( days + ( all_days [ 1 ] , ) )
        i = 0
        for all_days in days :
            pass
            if ( all_days == day ) :
                i = ( i + 1 )
            pass
        pass
    pass
    if ( i == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    months = ( )
    for all_months in possible_birthdays :
        months = ( months + ( all_months [ 0 ] , ) )
        i = 0
        for all_months in months :
            pass
            if ( all_months == month ) :
                i = ( i + 1 )
            pass
        pass
    pass
    if ( i == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    May_days = ( )
    June_days = ( )
    July_days = ( )
    August_days = ( )
    May_dates = possible_birthdays [ : 3 ]
    for all_days in May_dates :
        May_days = ( May_days + ( all_days [ 1 ] , ) )
        if ( month == mon [ 0 ] ) :
            June_days = ( June_days + ( all_days [ 1 ] , ) )
        else :
            date = date
        July_days = ( July_days + ( all_days [ 1 ] , ) )
    August_dates = possible_birthdays [ 7 : ]
    for all_days in August_dates :
        pass
        if ( month == 'May' ) :
            pass
        else :
            found_repeated = 0
        pass
    found_repeated = 1
    break
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( found_repeated == 0 ) :
            pass
        else :
            found_repeated = 1
            break
        pass
    pass
    if ( found_repeated == 0 ) :
        pass
        for check_day in August_days :
            pass
            if ( days == check_day ) :
                pass
            else :
                pass
            pass
        pass
    elif ( month == 'June' ) :
        pass
    found_repeated = 0
    for check_day in May_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    for check_day in July_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    for check_day in August_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
            if ( month == mon [ 0 ] ) :
                pass
            else :
                pass
            pass
        pass
    found_repeated = 0
    for check_day in May_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    for check_day in June_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    for check_day in August_days :
        pass
        if ( days == check_day ) :
            pass
        else :
            pass
        pass
    pass
    for day in date :
        pass
    found_repeated = 0
    for check_day in May_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    for check_day in June_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    for check_day in July_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    if ( y == ( ) ) :
        pass
    else :
        return True
    return False
","def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    date = ()
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    if (len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2)):]) > 0):
        for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2)):]:
            if (month == mon[0]):
                date += (mon,)
            else:
                date = date
    elif True:
        pass
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2)):]:
        if True:
            if (month == mon[0]):
                date += (mon,)
            else:
                date = date
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    for mon in possible_birthdays[int((len(possible_birthdays) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    days = ()
    for day in date:
        days += (day[1],)
    y = ()
    for x in days[:int((len(days) / 2))][:int((len(days[:int((len(days) / 2))]) / 2))]:
        if (unique_day(x, possible_birthdays) == True):
            y += (x,)
        else:
            y = y
    for x in days[:int((len(days) / 2))][int((len(days[:int((len(days) / 2))]) / 2)):]:
        if (unique_day(x, possible_birthdays) == True):
            y += (x,)
        else:
            y = y
    for x in days[int((len(days) / 2)):]:
        if (unique_day(x, possible_birthdays) == True):
            y += (x,)
        else:
            y = y
    if (y == ()):
        return False
    else:
        return True
","{'unique_day': 'correct_2_286.py', 'unique_month': 'correct_2_286.py', 'contains_unique_day': 'correct_2_099.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'E1.z,E1.z,E1.z,E1.z,E1.z,E1.z,E1.z,E1.z,E1.z,E1.z,E1.z,C1.n,B2.k,B1.f'}","def unique_day ( day , possible_birthdays ) :
    ref_a = 0
    for ref_item in possible_birthdays :
        for i in ref_item :
            pass
            if ( i == day ) :
                ref_a += 1
            pass
        pass
    pass
    if ( ref_a == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    ref_a = 0
    for ref_item in possible_birthdays :
        for i in ref_item :
            pass
            if ( i == month ) :
                ref_a += 1
            pass
        pass
    pass
    if ( ref_a == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    date = ( )
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] :
        if ( month == mon [ 0 ] ) :
            June_days = ( June_days + ( all_days [ 1 ] , ) )
        else :
            date = date
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( month == 'May' ) :
            date += ( mon , )
        else :
            found_repeated = 0
        pass
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( found_repeated == 0 ) :
            date += ( mon , )
        else :
            found_repeated = 1
            break
        pass
    pass
    if ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] ) > 0 ) :
        pass
        for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
            pass
            if ( ref_days == check_day ) :
                date += ( mon , )
            else :
                date = date
            pass
        pass
    elif ( month == 'June' ) :
        pass
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( ref_days == check_day ) :
            found_repeated = 1
            break
        else :
            date = date
        pass
    pass
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( ref_days == check_day ) :
            found_repeated = 1
            break
        else :
            date = date
        pass
    pass
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if True :
            if ( month == mon [ 0 ] ) :
                date += ( mon , )
            else :
                date = date
            pass
        pass
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( month == mon [ 0 ] ) :
            found_repeated = 1
            break
        else :
            date = date
        pass
    pass
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( month == mon [ 0 ] ) :
            date += ( mon , )
        else :
            date = date
        pass
    pass
    for mon in possible_birthdays [ int ( ( len ( possible_birthdays ) / 2 ) ) : ] :
        pass
        if ( month == mon [ 0 ] ) :
            date += ( mon , )
        else :
            date = date
        pass
    ref_days = ( )
    for day in date :
        ref_days += ( day [ 1 ] , )
    ref_y = ( )
    for ref_x in ref_days [ : int ( ( len ( ref_days ) / 2 ) ) ] [ : int ( ( len ( ref_days [ : int ( ( len ( ref_days ) / 2 ) ) ] ) / 2 ) ) ] :
        pass
        if ( ref_days == check_day ) :
            found_repeated = 1
            break
        else :
            ref_y = ref_y
        pass
    pass
    for ref_x in ref_days [ : int ( ( len ( ref_days ) / 2 ) ) ] [ int ( ( len ( ref_days [ : int ( ( len ( ref_days ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( unique_day ( ref_x , possible_birthdays ) == True ) :
            ref_y += ( ref_x , )
        else :
            ref_y = ref_y
        pass
    pass
    for ref_x in ref_days [ int ( ( len ( ref_days ) / 2 ) ) : ] :
        pass
        if ( unique_day ( ref_x , possible_birthdays ) == True ) :
            ref_y += ( ref_x , )
        else :
            ref_y = ref_y
        pass
    pass
    if ( ref_y == ( ) ) :
        return False
    else :
        return True
",N/A,10788.144,566.663,0.001,0.049,3.932,47.717,11407.840,17,17,N/A
question_2,100,0,wrong_2_286.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x += ( i , )
        else :
            continue
    for i in x :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_099.py', 'unique_month': 'correct_2_145.py', 'contains_unique_day': 'correct_2_152.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.877,0.323,0.000,0.000,0.324,0.197,1.752,17,17,0.046
question_2,100,0,wrong_2_310.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            days += ( i [ 1 ] , )
    for i in days :
        if unique_date ( i , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            days += ( i [ 1 ] , )
    for i in days :
        if unique_date ( i , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            days += ( birthday [ 1 ] , )
    for day in days :
        if ( unique_day ( day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( day , possible_birthdays )
    return False


","{'unique_day': 'correct_2_082.py', 'unique_month': 'correct_2_287.py', 'contains_unique_day': 'correct_2_201.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for ref_birthday in possible_birthdays :
        if ( month == ref_birthday [ 0 ] ) :
            days += ( ref_birthday [ 1 ] , )
    for ref_day in days :
        if ( unique_day ( ref_day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( ref_day , possible_birthdays )
    return False
",N/A,0.524,0.250,0.000,0.000,0.254,0.542,1.595,17,17,0.168
question_2,100,0,wrong_2_367.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    i = 0
    for months in possible_birthdays :
        if ( month == months [ 0 ] ) :
            i += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    i = 0
    for months in possible_birthdays :
        if ( month == months [ 0 ] ) :
            i += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    i = 0
    for months in possible_birthdays :
        if ( month == months [ 0 ] ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_245.py', 'unique_month': 'correct_2_245.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    i = 0
    for months in possible_birthdays :
        if ( month == months [ 0 ] ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.504,0.409,0.000,0.000,0.235,0.201,1.395,17,17,0.446
question_2,100,0,wrong_2_404.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    if ( month == 'June' ) :
        return True
    elif ( month == 'May' ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    if ( month == 'June' ) :
        return True
        if ( True in ans ) :
            return True
        return False
    pass
","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    specific_set = tuple(filter((lambda x: (x[0] == month)), possible_birthdays))
    get_days = tuple(map((lambda x: x[1]), specific_set))
    if True:
        ans = tuple(map((lambda x: unique_day(x, possible_birthdays)), get_days))
        if (True in ans):
            return True
        return False
","{'unique_day': 'correct_2_065.py', 'unique_month': 'correct_2_065.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,A1.a'}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    if True :
        ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
        if ( True in ref_ans ) :
            return True
        return False
    pass
",N/A,3.511,0.222,0.000,0.002,0.305,0.213,4.285,17,17,0.586
question_2,100,0,wrong_2_162.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b >= 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_286.py', 'unique_month': 'correct_2_286.py', 'contains_unique_day': 'correct_2_286.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b >= 1 ) :
        return True
    else :
        return False
",N/A,0.846,0.029,0.000,0.000,0.506,0.131,1.537,17,17,0.009
question_2,100,0,wrong_2_038.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            tup += ( i [ 1 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    elif ( len ( tup ) > 1 ) :
        return False
    elif ( len ( tup ) == 0 ) :
        return None
def unique_month ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i [ 0 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            tup += ( date , )
    for bday in tup :
        if unique_day ( bday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == day ) :
            tup += ( i [ 1 ] , )
        pass
    pass
    if ( len ( tup ) == 1 ) :
        return True
        if ( x [ 1 ] == day ) :
            pass
        return False
    else :
        return None
    pass


def unique_month ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            tup += ( i [ 0 ] , )
        pass
    pass
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for date in possible_birthdays :
        pass
        if ( date [ 0 ] == month ) :
            tup += ( date , )
        pass
    pass
    for bday in tup :
        pass
        if unique_day ( bday [ 1 ] , possible_birthdays ) :
            return True
        pass
    return False
","

def unique_day(day, possible_birthdays):
    count = 0
    for x in possible_birthdays:
        if (x[1] == day):
            count = (count + 1)
    if (count == 1):
        if False:
            pass
        return True
    else:
        return False


def unique_month ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i [ 0 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            tup += ( date , )
    for bday in tup :
        if unique_day ( bday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_222.py', 'unique_month': 'correct_2_042.py', 'contains_unique_day': 'correct_2_042.py'}","{'unique_day': 'B1.g', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    tup = 0
    for ref_x in possible_birthdays :
        pass
        if ( ref_x [ 1 ] == date ) :
            tup = ( tup + 1 )
        pass
    pass
    if ( tup == 1 ) :
        if ( ref_x [ 1 ] == date ) :
            pass
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            tup += ( i [ 0 ] , )
        pass
    pass
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for date in possible_birthdays :
        pass
        if ( date [ 0 ] == month ) :
            tup += ( date , )
        pass
    pass
    for bday in tup :
        pass
        if unique_day ( bday [ 1 ] , possible_birthdays ) :
            return True
        pass
    return False
",N/A,4.815,0.470,0.000,0.002,0.255,0.522,6.097,17,17,0.336
question_2,100,0,wrong_2_010.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == days ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == days ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( day , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = 0
    for j in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ j ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_014.py', 'unique_month': 'correct_2_014.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,0.609,0.604,0.000,0.000,0.270,0.251,1.766,17,17,0.021
question_2,100,0,wrong_2_393.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 1 ] == date ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for n in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ n ] [ 1 ] ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
    new_day = ''
    counter = 0
    for i in range ( len ( new_possible_birthdays ) ) :
        new_day = new_possible_birthdays [ i ] [ 1 ]
        if ( unique_day ( new_day , possible_birthdays ) == True ) :
            counter = ( counter + 1 )
        if ( counter == 0 ) :
            return False
        else :
            return True


","def unique_day ( date , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 1 ] == date ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for n in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ n ] [ 1 ] ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
    new_day = ''
    counter = 0
    for i in range ( len ( new_possible_birthdays ) ) :
        new_day = new_possible_birthdays [ i ] [ 1 ]
        if ( unique_day ( new_day , possible_birthdays ) == True ) :
            counter = ( counter + 1 )
        if ( counter == 0 ) :
            return False
        else :
            return True


","def unique_day ( date , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 1 ] == date ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True






def contains_unique_day(month, possible_birthdays):
    x = ()
    for k in range(len(possible_birthdays)):
        if (possible_birthdays[k][0] == month):
            x = (x + (possible_birthdays[k],))
    for l in range(len(x)):
        if False:
            pass
        if unique_day(x[l][1], possible_birthdays):
            return True
        else:
            continue
    return False
","{'unique_day': 'correct_2_264.py', 'unique_month': 'correct_2_264.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.g'}","def unique_day ( date , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 1 ] == date ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for n in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ n ] [ 0 ] == month ) :
            new_possible_birthdays = ( new_possible_birthdays + ( possible_birthdays [ n ] , ) )
    for ref_l in range ( len ( new_possible_birthdays ) ) :
        if False :
            pass
        if unique_day ( new_possible_birthdays [ ref_l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,7.836,0.347,0.000,0.000,0.271,0.608,9.095,17,17,0.306
question_2,100,0,wrong_2_348.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    b = ( )
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False
def unique_month ( month , possible_birthdays ) :
    b = ( )
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    b = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            b . append ( birthday [ 1 ] )
    for day in b :
        if ( unique_day ( day , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    b = ( )
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False
def unique_month ( month , possible_birthdays ) :
    b = ( )
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    b = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            b . append ( birthday [ 1 ] )
    for day in b :
        if ( unique_day ( day , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            b . append ( birthday [ 1 ] )
    for day in b :
        if ( unique_day ( day , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_233.py', 'unique_month': 'correct_2_233.py', 'contains_unique_day': 'correct_2_233.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            b . append ( birthday [ 1 ] )
    for day in b :
        if ( unique_day ( day , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.838,0.305,0.000,0.000,0.191,0.198,1.555,17,17,0.049
question_2,100,0,wrong_2_291.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    the_day = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            the_day += ( day , )
    return ( len ( the_day ) == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    the_day = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            the_day += ( day , )
    return ( len ( the_day ) == 1 )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    the_day = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            the_day += ( day , )
    return ( len ( the_day ) == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_195.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    the_day = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            the_day += ( day , )
    return ( len ( the_day ) == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.502,0.170,0.000,0.000,0.178,0.191,1.062,17,17,1.140
question_2,100,0,wrong_2_417.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    n = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            n += 1
        else :
            n = n
    return ( n == 1 )
def unique_month ( month , possible_birthdays ) :
    n = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            n += 1
        else :
            n = n
    return ( n == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    n = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            n += 1
        else :
            n = n
    return ( n == 1 )
def unique_month ( month , possible_birthdays ) :
    n = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            n += 1
        else :
            n = n
    return ( n == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 0 ] == month ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_229.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    n = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            n += 1
        else :
            n = n
    return ( n == 1 )


def unique_month ( month , possible_birthdays ) :
    n = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            n += 1
        else :
            n = n
    return ( n == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.502,0.032,0.000,0.000,0.248,0.374,1.184,17,17,0.659
question_2,100,0,wrong_2_179.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.500,N/A,N/A,N/A
question_2,100,0,wrong_2_164.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.497,N/A,N/A,N/A
question_2,100,0,wrong_2_318.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for days in range ( len ( possible_birthdays ) ) :
        if ( str ( day ) == possible_birthdays [ days ] [ 1 ] ) :
            counter += 1
    return ( True if ( counter == 1 ) else False )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for mth in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ mth ] [ 0 ] ) :
            counter += 1
    return ( True if ( counter == 1 ) else False )
def contains_unique_day ( month , possible_birthdays ) :
    daystoconsider = ( )
    i = 0
    while ( i < len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            daystoconsider += ( possible_birthdays [ i ] [ 1 ] , )
        i += 1
    monthcontaininguniqueday = ( )
    for a in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ a ] [ 1 ] in daystoconsider ) :
            monthcontaininguniqueday += ( possible_birthdays [ a ] [ 0 ] , )
    for mth in range ( len ( monthcontaininguniqueday ) ) :
        if ( monthcontaininguniqueday [ mth ] == month ) :
            return True
            break
        return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for days in range ( len ( possible_birthdays ) ) :
        pass
        if ( str ( day ) == possible_birthdays [ days ] [ 1 ] ) :
            counter += 1
        pass
    return ( True if ( counter == 1 ) else False )


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for mth in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ mth ] [ 0 ] ) :
            counter += 1
        pass
    return ( True if ( counter == 1 ) else False )


def contains_unique_day ( month , possible_birthdays ) :
    daystoconsider = ( )
    i = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            daystoconsider += ( possible_birthdays [ i ] [ 1 ] , )
        i += 1
    monthcontaininguniqueday = ( )
    for a in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ a ] [ 1 ] in daystoconsider ) :
            monthcontaininguniqueday += ( possible_birthdays [ a ] [ 0 ] , )
        pass
    pass
    if True :
        pass
        if ( monthcontaininguniqueday [ mth ] == month ) :
            return True
            break
        return False
    pass
","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            counter = ( counter + 1 )
    return ( counter == 1 )




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            counter = ( counter + 1 )
    return ( counter == 1 )






def contains_unique_day(month, possible_birthdays):
    new_possible_birthdays = ()
    for i in range(len(possible_birthdays)):
        if (month == possible_birthdays[i][0]):
            new_possible_birthdays += (possible_birthdays[i],)
    new_day = ''
    counter = 0
    for n in range(len(new_possible_birthdays)):
        new_day = new_possible_birthdays[n][1]
        if (unique_day(new_day, possible_birthdays) == True):
            counter += 1
    if True:
        if (counter == 0):
            return False
        return True
","{'unique_day': 'correct_2_215.py', 'unique_month': 'correct_2_215.py', 'contains_unique_day': 'correct_2_107.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'A1.a,B1.f'}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for days in range ( len ( possible_birthdays ) ) :
        pass
        if ( str ( day ) == possible_birthdays [ days ] [ 1 ] ) :
            counter += 1
        pass
    return ( True if ( counter == 1 ) else False )


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for mth in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ mth ] [ 0 ] ) :
            counter += 1
        pass
    return ( True if ( counter == 1 ) else False )


def contains_unique_day ( month , possible_birthdays ) :
    daystoconsider = ( )
    i = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            daystoconsider += ( possible_birthdays [ i ] , )
    ref_new_day = ''
    monthcontaininguniqueday = 0
    for ref_n in range ( len ( daystoconsider ) ) :
        ref_new_day = daystoconsider [ ref_n ] [ 1 ]
        if ( unique_day ( ref_new_day , possible_birthdays ) == True ) :
            monthcontaininguniqueday += 1
        pass
    pass
    if True :
        pass
        if ( monthcontaininguniqueday == 0 ) :
            return False
        return True
    pass
",N/A,10.130,0.476,0.000,0.002,0.330,0.904,11.883,17,17,0.328
question_2,100,0,wrong_2_220.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_123.py', 'unique_month': 'correct_2_123.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.840,0.095,0.000,0.000,0.270,0.124,1.353,17,17,0.400
question_2,100,0,wrong_2_256.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    days = ( )
    unique = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    for i in days :
        if ( i == day ) :
            unique += ( i , )
        else :
            continue
    if ( len ( unique ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = ( )
    unique = ( )
    for i in possible_birthdays :
        months += ( i [ 0 ] , )
    for i in months :
        if ( i == month ) :
            unique += ( i , )
        else :
            continue
    if ( len ( unique ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    unique = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    for i in days :
        if ( i == day ) :
            unique += ( i , )
        else :
            continue
    if ( len ( unique ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = ( )
    unique = ( )
    for i in possible_birthdays :
        months += ( i [ 0 ] , )
    for i in months :
        if ( i == month ) :
            unique += ( i , )
        else :
            continue
    if ( len ( unique ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    unique = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    for i in days :
        if ( i == day ) :
            unique += ( i , )
        else :
            continue
    if ( len ( unique ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = ( )
    unique = ( )
    for i in possible_birthdays :
        months += ( i [ 0 ] , )
    for i in months :
        if ( i == month ) :
            unique += ( i , )
        else :
            continue
    if ( len ( unique ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_098.py', 'unique_month': 'correct_2_098.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    days = ( )
    unique = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    for i in days :
        if ( i == day ) :
            unique += ( i , )
        else :
            continue
    if ( len ( unique ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    months = ( )
    unique = ( )
    for i in possible_birthdays :
        months += ( i [ 0 ] , )
    for i in months :
        if ( i == month ) :
            unique += ( i , )
        else :
            continue
    if ( len ( unique ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.501,0.141,0.000,0.000,0.495,0.138,1.307,17,17,0.320
question_2,100,0,wrong_2_029.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    tpl = ( )
    for i in possible_birthdays :
        tpl += ( i [ 1 ] , )
    if ( tpl . count ( date ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    tpl = ( )
    for j in possible_birthdays :
        tpl += ( j [ 0 ] , )
    if ( tpl . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    tpl = ( )
    for k in possible_birthdays :
        if ( k [ 0 ] == month ) :
            tpl += ( k [ 1 ] , )
    for l in tpl :
        if ( unique_day ( l , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    tpl = ( )
    for i in possible_birthdays :
        tpl += ( i [ 1 ] , )
    if ( tpl . count ( date ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    tpl = ( )
    for j in possible_birthdays :
        tpl += ( j [ 0 ] , )
    if ( tpl . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    tpl = ( )
    for k in possible_birthdays :
        if ( k [ 0 ] == month ) :
            tpl += ( k [ 1 ] , )
    for l in tpl :
        if ( unique_day ( l , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    possible_days = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            possible_days += ( i [ 1 ] , )
    for i in possible_days :
        if ( unique_day ( i , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_233.py', 'unique_month': 'correct_2_233.py', 'contains_unique_day': 'correct_2_022.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_b = [ ]
    for i in possible_birthdays :
        ref_b . append ( i [ 1 ] )
    if ( ref_b . count ( date ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    ref_b = [ ]
    for j in possible_birthdays :
        ref_b . append ( j [ 0 ] )
    if ( ref_b . count ( month ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    tpl = ( )
    for ref_i in possible_birthdays :
        if ( ref_i [ 0 ] == month ) :
            tpl += ( ref_i [ 1 ] , )
    for ref_i in tpl :
        if ( unique_day ( ref_i , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.505,0.394,0.000,0.000,0.276,1.021,2.223,17,17,0.240
question_2,100,0,wrong_2_307.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for date in birthday [ ( len ( possible_birthdays ) - 1 ) ] [ 1 ] :
        count += 1
        possible_birthday = possible_birthday [ : ( len ( possible_birthdays ) - 1 ) ]
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for date in birthday [ ( len ( possible_birthdays ) - 1 ) ] [ 1 ] :
        count += 1
        possible_birthday = possible_birthday [ : ( len ( possible_birthdays ) - 1 ) ]
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    x = ( )
    for i in range ( 0 , len ( possible_birthdays ) ) :
        x += ( possible_birthdays [ i ] [ ( - 1 ) ] , )
    if ( x . count ( day ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_134.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = ( )
    for ref_i in range ( 0 , len ( possible_birthdays ) ) :
        count += ( possible_birthdays [ ref_i ] [ ( - 1 ) ] , )
    if ( count . count ( date ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.508,0.071,0.000,0.000,0.148,0.705,1.456,17,17,1.362
question_2,100,0,wrong_2_009.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == days ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == days ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( day , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = 0
    for j in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ j ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_014.py', 'unique_month': 'correct_2_014.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,0.504,0.603,0.000,0.000,0.284,0.253,1.674,17,17,0.021
question_2,100,0,wrong_2_184.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.503,N/A,N/A,N/A
question_2,100,0,wrong_2_100.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_170.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.500,0.282,0.000,0.000,0.159,0.187,1.148,17,17,1.109
question_2,100,0,wrong_2_330.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day in date ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( month in date ) :
            counter += 1
        if ( counter > 1 ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        ( months , day ) = date
        if unique_day ( day , possible_birthdays ) :
            return ( month == months )


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( day in date ) :
            counter += 1
        pass
    pass
    if ( counter > 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( month in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        ( months , day ) = date
        if unique_day ( day , possible_birthdays ) :
            return ( month == months )
        pass
    pass
","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day in date ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    contains = ( )
    for date in possible_birthdays :
        if ( ( month in date ) and unique_day ( date [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_047.py', 'unique_month': 'correct_2_252.py', 'contains_unique_day': 'correct_2_047.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( day in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( month in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        if ( ( month in date ) and unique_day ( date [ 1 ] , possible_birthdays ) ) :
            return True
        pass
    return False
",N/A,4.027,0.756,0.000,0.002,0.289,0.314,5.413,17,17,0.345
question_2,100,0,wrong_2_187.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.497,N/A,N/A,N/A
question_2,100,0,wrong_2_193.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    days = ( )
    unique = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    for i in days :
        if ( i == day ) :
            unique += ( i , )
        else :
            continue
    if ( len ( unique ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    unique = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    for i in days :
        if ( i == day ) :
            unique += ( i , )
        else :
            continue
    if ( len ( unique ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    unique = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    for i in days :
        if ( i == day ) :
            unique += ( i , )
        else :
            continue
    if ( len ( unique ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_098.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    days = ( )
    unique = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    for i in days :
        if ( i == day ) :
            unique += ( i , )
        else :
            continue
    if ( len ( unique ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.700,0.066,0.000,0.000,0.397,0.191,1.379,17,17,0.831
question_2,100,0,wrong_2_270.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    birthdays_in_month = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            birthdays_in_month += ( birthday , )
    for birthday in birthdays_in_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_026.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.502,0.915,0.000,0.000,0.258,0.201,1.904,17,17,0.018
question_2,100,0,wrong_2_132.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    unique_day_counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            unique_day_counter += 1
    if ( unique_day_counter != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    unique_day_counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            unique_day_counter += 1
    if ( unique_day_counter != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    unique_day_counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            unique_day_counter += 1
    if ( unique_day_counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_078.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    unique_day_counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            unique_day_counter += 1
    if ( unique_day_counter != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.504,0.083,0.000,0.000,0.182,0.180,0.973,17,17,1.114
question_2,100,0,wrong_2_427.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    only_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            only_month = ( only_month + ( i , ) )
    if ( len ( only_month ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    only_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            only_month = ( only_month + ( i , ) )
    if ( len ( only_month ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            tup += ( i [ 1 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    data = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            data += ( birthday , )
    if ( len ( data ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_042.py', 'unique_month': 'correct_2_246.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    only_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            only_month = ( only_month + ( i , ) )
    if ( len ( only_month ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.502,0.750,0.000,0.000,0.221,0.193,1.695,17,17,0.432
question_2,100,0,wrong_2_233.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    days = [ possible_birthdays [ i ] [ 1 ] for i in range ( len ( possible_birthdays ) ) ]
    if ( days . count ( day ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    months = [ possible_birthdays [ i ] [ 0 ] for i in range ( len ( possible_birthdays ) ) ]
    if ( months . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    days_in_month = [ ]
    for i in range ( len ( possible_birthdays ) ) :
        curr_month = possible_birthdays [ i ] [ 0 ]
        curr_day = possible_birthdays [ i ] [ 1 ]
        if ( curr_month == month ) :
            days_in_month . append ( curr_day )
    for day in days_in_month :
        if unique_day ( day , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    days = [ possible_birthdays [ i ] [ 1 ] for i in range ( len ( possible_birthdays ) ) ]
    if ( days . count ( day ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    months = [ possible_birthdays [ i ] [ 0 ] for i in range ( len ( possible_birthdays ) ) ]
    if ( months . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    days_in_month = [ ]
    for i in range ( len ( possible_birthdays ) ) :
        curr_month = possible_birthdays [ i ] [ 0 ]
        curr_day = possible_birthdays [ i ] [ 1 ]
        if ( curr_month == month ) :
            days_in_month . append ( curr_day )
    for day in days_in_month :
        if unique_day ( day , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    if ( tuple ( map ( ( lambda x : x [ 1 ] ) , possible_birthdays ) ) . count ( day ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    if ( tuple ( map ( ( lambda x : x [ 0 ] ) , possible_birthdays ) ) . count ( month ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    monies = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            monies += ( possible_birthdays [ i ] [ 1 ] , )
    for i in range ( len ( monies ) ) :
        if unique_day ( monies [ i ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_093.py', 'unique_month': 'correct_2_093.py', 'contains_unique_day': 'correct_2_162.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    if ( tuple ( map ( ( lambda days : days [ 1 ] ) , possible_birthdays ) ) . count ( day ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    if ( tuple ( map ( ( lambda months : months [ 0 ] ) , possible_birthdays ) ) . count ( month ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    day = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            day += ( possible_birthdays [ i ] [ 1 ] , )
    for i in range ( len ( day ) ) :
        if unique_day ( day [ i ] , possible_birthdays ) :
            return True
    return False
",N/A,0.510,0.548,0.000,0.000,0.182,0.781,2.049,17,17,0.683
question_2,100,0,wrong_2_198.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    checker = True
    for k in possible_birthdays :
        if ( k [ 1 ] == day ) :
            checker = False
    return checker
def unique_month ( day , possible_birthdays ) :
    checker = True
    for k in possible_birthdays :
        if ( k [ 0 ] == day ) :
            checker = False
    return checker
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    checker = True
    for k in possible_birthdays :
        if ( k [ 1 ] == day ) :
            checker = False
    return checker
def unique_month ( day , possible_birthdays ) :
    checker = True
    for k in possible_birthdays :
        if ( k [ 0 ] == day ) :
            checker = False
    return checker
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    checker = 0
    for k in possible_birthdays :
        if ( k [ 1 ] == day ) :
            checker += 1
    return ( checker == 1 )




def unique_month ( day , possible_birthdays ) :
    checker = 0
    for k in possible_birthdays :
        if ( k [ 0 ] == day ) :
            checker += 1
    return ( checker == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_112.py', 'unique_month': 'correct_2_112.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    checker = 0
    for k in possible_birthdays :
        if ( k [ 1 ] == day ) :
            checker += 1
    return ( checker == 1 )


def unique_month ( day , possible_birthdays ) :
    checker = 0
    for k in possible_birthdays :
        if ( k [ 0 ] == day ) :
            checker += 1
    return ( checker == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.507,0.300,0.000,0.000,0.218,0.630,1.676,17,17,0.852
question_2,100,0,wrong_2_410.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    i = 0
    count = 0
    while ( i <= len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
            i += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    i = 0
    count = 0
    while ( i <= len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
            i += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    if ( month == 'June' ) :
        return True
    elif ( month == 'May' ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    i = 0
    count = 0
    while ( i <= len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
            i += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    i = 0
    count = 0
    while ( i <= len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
            i += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    if ( month == 'June' ) :
        return True
        if ( True in ans ) :
            return True
        return False
    pass
","def unique_day ( day , possible_birthdays ) :
    ( i , times ) = ( 0 , 0 )
    while ( i < len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            times += 1
        i += 1
    if ( times == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    ( i , times ) = ( 0 , 0 )
    while ( i < len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            times += 1
        i += 1
    if ( times == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    specific_set = tuple(filter((lambda x: (x[0] == month)), possible_birthdays))
    get_days = tuple(map((lambda x: x[1]), specific_set))
    if True:
        ans = tuple(map((lambda x: unique_day(x, possible_birthdays)), get_days))
        if (True in ans):
            return True
        return False
","{'unique_day': 'correct_2_278.py', 'unique_month': 'correct_2_278.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,A1.a'}","def unique_day ( date , possible_birthdays ) :
    i = 0
    count = 0
    while ( i < len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
        i += 1
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    i = 0
    count = 0
    while ( i < len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        i += 1
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    if True :
        ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
        if ( True in ref_ans ) :
            return True
        return False
    pass
",N/A,3.420,0.029,0.000,0.002,14.380,13.693,31.560,17,17,0.549
question_2,100,0,wrong_2_253.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    birthdays_in_month = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            birthdays_in_month += ( birthday , )
    for birthday in birthdays_in_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_026.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == date ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.839,0.999,0.000,0.000,0.233,0.202,2.304,17,17,0.045
question_2,100,0,wrong_2_259.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    if ( int ( date ) in possible_birthdays ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( int ( date ) in possible_birthdays ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    specific_set = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    get_days = tuple ( map ( ( lambda x : x [ 1 ] ) , specific_set ) )
    ans = tuple ( map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , get_days ) )
    if ( True in ans ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_103.py', 'unique_month': 'correct_2_103.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
    if ( True in ref_ans ) :
        return True
    else :
        return False
",N/A,0.519,0.030,0.000,0.000,0.076,0.545,1.190,0,17,N/A
question_2,100,0,wrong_2_392.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( date in i ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month in i ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            birthdays += ( i , )
    for i in birthdays :
        if ( not unique_day ( i [ 1 ] , possible_birthdays ) ) :
            result = False
        else :
            result = True
            break
    return result


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( date in i ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month in i ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            birthdays += ( i , )
    for i in birthdays :
        if ( not unique_day ( i [ 1 ] , possible_birthdays ) ) :
            result = False
        else :
            result = True
            break
    return result


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day in i ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month in i ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    possible_days = ( )
    for x in possible_birthdays :
        if ( month in x ) :
            possible_days += ( x [ 1 ] , )
    for x in possible_days :
        contains = unique_day ( x , possible_birthdays )
        if ( contains == False ) :
            continue
        else :
            return True
    return False


","{'unique_day': 'correct_2_258.py', 'unique_month': 'correct_2_258.py', 'contains_unique_day': 'correct_2_173.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( date in i ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month in i ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    birthdays = ( )
    for ref_x in possible_birthdays :
        if ( month in ref_x ) :
            birthdays += ( ref_x [ 1 ] , )
    for ref_x in birthdays :
        result = unique_day ( ref_x , possible_birthdays )
        if ( result == False ) :
            result = False
        else :
            return True
    return result
",N/A,0.504,0.517,0.000,0.000,0.275,0.964,2.291,17,17,0.208
question_2,100,0,wrong_2_001.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            for j in range ( ( i + 1 ) , len ( possible_birthdays ) ) :
                if ( possible_birthdays [ j ] [ 1 ] == day ) :
                    return False
    return True
def unique_month ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            for j in range ( ( i + 1 ) , len ( possible_birthdays ) ) :
                if ( possible_birthdays [ j ] [ 0 ] == month ) :
                    return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    pass
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            pass
        pass
    pass
    if ( possible_birthdays [ j ] [ 1 ] == day ) :
        pass
    else :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    pass
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            pass
        pass
    pass
    if ( possible_birthdays [ j ] [ 0 ] == month ) :
        pass
    else :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            pass
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
            pass
        pass
    return False
","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_064.py', 'unique_month': 'correct_2_259.py', 'contains_unique_day': 'correct_2_199.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            ref_count += 1
        pass
    pass
    if ( ref_count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            ref_count += 1
        pass
    pass
    if ( ref_count != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            pass
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
            pass
        pass
    return False
",N/A,9.071,0.149,0.000,0.002,0.245,0.257,9.754,17,17,0.524
question_2,100,0,wrong_2_325.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
        if ( count == 1 ) :
            return True
        else :
            return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        pass
    pass


def contains_unique_day ( month , possible_birthdays ) :
    return
","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    bag = [ ]
    for months in possible_birthdays :
        if ( months [ 0 ] == month ) :
            bag . append ( month )
    n = len ( bag )
    if ( n == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_017.py', 'unique_month': 'correct_2_224.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    ref_bag = [ ]
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            ref_bag . append ( month )
        pass
    ref_n = len ( ref_bag )
    if ( ref_n == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,3.494,0.220,0.000,0.001,0.292,0.439,4.476,17,17,0.786
question_2,100,0,wrong_2_074.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    no_of_days = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            no_of_days += 1
    if ( no_of_days != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    no_of_months = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            no_of_months += 1
    if ( no_of_months != 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays_with_month = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            birthdays_with_month += ( i [ 1 ] , )
    counter = 0
    for i in birthdays_with_month :
        if ( unique_day ( i , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    no_of_days = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            no_of_days += 1
    if ( no_of_days != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    no_of_months = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            no_of_months += 1
    if ( no_of_months != 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays_with_month = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            birthdays_with_month += ( i [ 1 ] , )
    counter = 0
    for i in birthdays_with_month :
        if ( unique_day ( i , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for possible_dates in possible_birthdays :
        if ( possible_dates [ 1 ] == day ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    count = 0
    for possible_dates in possible_birthdays :
        if ( possible_dates [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
    new_day = ''
    counter = 0
    for n in range ( len ( new_possible_birthdays ) ) :
        new_day = new_possible_birthdays [ n ] [ 1 ]
        if ( unique_day ( new_day , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 0 ) :
        return False
    else :
        return True


","{'unique_day': 'correct_2_095.py', 'unique_month': 'correct_2_095.py', 'contains_unique_day': 'correct_2_241.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    no_of_days = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            no_of_days += 1
    if ( no_of_days != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    no_of_months = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            no_of_months += 1
    if ( no_of_months != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    birthdays_with_month = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            birthdays_with_month += ( possible_birthdays [ i ] , )
    counter = 0
    for ref_n in range ( len ( birthdays_with_month ) ) :
        ref_new_day = birthdays_with_month [ ref_n ] [ 1 ]
        if ( unique_day ( ref_new_day , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 0 ) :
        return False
    else :
        return True
",N/A,0.720,0.329,0.000,0.000,0.259,0.700,2.044,17,17,0.254
question_2,100,0,wrong_2_089.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
    return
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
    return
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
    return




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_073.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
    return


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.500,0.155,0.000,0.000,0.198,0.191,1.066,17,17,0.925
question_2,100,0,wrong_2_048.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    result = 0
    while ( counter < len ( possible_birthdays ) ) :
        date = possible_birthdays [ counter ] [ 1 ]
        if ( date == day ) :
            result = ( result + 1 )
        counter = ( counter + 1 )
    if ( result > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    result = 0
    while ( counter < len ( possible_birthdays ) ) :
        chosen_month = possible_birthdays [ counter ] [ 0 ]
        if ( chosen_month == month ) :
            result = ( result + 1 )
        counter = ( counter + 1 )
    if ( result > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    while ( counter < len ( possible_birthdays ) ) :
        get_month = possible_birthdays [ counter ] [ 0 ]
        if ( get_month == month ) :
            test_date = possible_birthdays [ counter ] [ 1 ]
            if ( unique_day ( test_date , possible_birthdays ) == True ) :
                return True
        counter = ( counter + 1 )
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    result = 0
    while ( counter < len ( possible_birthdays ) ) :
        date = possible_birthdays [ counter ] [ 1 ]
        if ( date == day ) :
            result = ( result + 1 )
        counter = ( counter + 1 )
    pass
    if ( result > 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    result = 0
    while ( counter < len ( possible_birthdays ) ) :
        chosen_month = possible_birthdays [ counter ] [ 0 ]
        if ( chosen_month == month ) :
            result = ( result + 1 )
        counter = ( counter + 1 )
    pass
    if ( result > 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        get_month = possible_birthdays [ counter ] [ 0 ]
        if ( get_month == month ) :
            test_date = possible_birthdays [ counter ] [ 1 ]
            if ( unique_day ( test_date , possible_birthdays ) == True ) :
                return True
            pass
        return False
    else :
        counter = ( counter + 1 )
    return False
","

def unique_day(day, possible_birthdays):
    (i, times) = (0, 0)
    while (i < len(possible_birthdays)):
        if (possible_birthdays[i][1] == day):
            times += 1
        i += 1
    if (times == 1):
        return True
    return False




def unique_month(month, possible_birthdays):
    (i, times) = (0, 0)
    while (i < len(possible_birthdays)):
        if (possible_birthdays[i][0] == month):
            times += 1
        i += 1
    if (times == 1):
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    else :
        return False


","{'unique_day': 'correct_2_278.py', 'unique_month': 'correct_2_278.py', 'contains_unique_day': 'correct_2_109.py'}","{'unique_day': 'A1.a', 'unique_month': 'A1.a', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    result = 0
    while ( counter < len ( possible_birthdays ) ) :
        if ( possible_birthdays [ counter ] [ 1 ] == day ) :
            result = ( result + 1 )
        counter = ( counter + 1 )
    pass
    if ( result == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    result = 0
    while ( counter < len ( possible_birthdays ) ) :
        if ( possible_birthdays [ counter ] [ 0 ] == month ) :
            result = ( result + 1 )
        counter = ( counter + 1 )
    pass
    if ( result == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
            pass
    else :
        return False
",N/A,5.539,1.848,0.000,0.002,0.392,11.376,19.192,17,17,0.321
question_2,100,0,wrong_2_341.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    result = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_240.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    result = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.838,0.155,0.000,0.000,0.188,0.182,1.386,17,17,1.065
question_2,100,0,wrong_2_065.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    return ( True if ( count == 1 ) else False )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( True if ( count == 1 ) else False )
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            tup += ( birthday , )
    for each in tup :
        if ( ( each [ 1 ] == '18' ) or ( each [ 1 ] == '19' ) ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    return ( True if ( count == 1 ) else False )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( True if ( count == 1 ) else False )
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            tup += ( birthday , )
    for each in tup :
        if ( ( each [ 1 ] == '18' ) or ( each [ 1 ] == '19' ) ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    singlemonthbirthday = ( )
    for birthmonth in possible_birthdays :
        if ( month == birthmonth [ 0 ] ) :
            singlemonthbirthday += ( birthmonth , )
    for birthday in singlemonthbirthday :
        if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_164.py', 'unique_month': 'correct_2_082.py', 'contains_unique_day': 'correct_2_082.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    return ( True if ( count == 1 ) else False )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( True if ( count == 1 ) else False )


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            tup += ( birthday , )
    for each in tup :
        if ( unique_day ( each [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.502,0.767,0.000,0.000,0.250,0.194,1.743,17,17,0.109
question_2,100,0,wrong_2_174.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.501,N/A,N/A,N/A
question_2,100,0,wrong_2_131.py,fail_timeout,0,0,"def unique_day ( day , possible_birthdays ) :
    days = ( )
    for all_days in possible_birthdays :
        days = ( days + ( all_days [ 1 ] , ) )
        i = 0
        for all_days in days :
            if ( all_days == day ) :
                i = ( i + 1 )
    if ( i == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = ( )
    for all_months in possible_birthdays :
        months = ( months + ( all_months [ 0 ] , ) )
        i = 0
        for all_months in months :
            if ( all_months == month ) :
                i = ( i + 1 )
    if ( i == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    May_days = ( )
    June_days = ( )
    July_days = ( )
    August_days = ( )
    May_dates = possible_birthdays [ : 3 ]
    for all_days in May_dates :
        May_days = ( May_days + ( all_days [ 1 ] , ) )
    June_dates = possible_birthdays [ 3 : 5 ]
    for all_days in June_dates :
        June_days = ( June_days + ( all_days [ 1 ] , ) )
    July_dates = possible_birthdays [ 5 : 7 ]
    for all_days in July_dates :
        July_days = ( July_days + ( all_days [ 1 ] , ) )
    August_dates = possible_birthdays [ 7 : ]
    for all_days in August_dates :
        August_days = ( August_days + ( all_days [ 1 ] , ) )
    if ( month == 'May' ) :
        for days in May_days :
            found_repeated = 0
            for check_day in June_days :
                if ( days == check_day ) :
                    found_repeated = 1
                    break
            if ( found_repeated == 0 ) :
                for check_day in July_days :
                    if ( days == check_day ) :
                        found_repeated = 1
                        break
                if ( found_repeated == 0 ) :
                    for check_day in August_days :
                        if ( days == check_day ) :
                            found_repeated = 1
                            break
    elif ( month == 'June' ) :
        for days in June_days :
            found_repeated = 0
            for check_day in May_days :
                if ( days == check_day ) :
                    found_repeated = 1
                    break
            if ( found_repeated == 0 ) :
                for check_day in July_days :
                    if ( days == check_day ) :
                        found_repeated = 1
                        break
                if ( found_repeated == 0 ) :
                    for check_day in August_days :
                        if ( days == check_day ) :
                            found_repeated = 1
                            break
    elif ( month == 'July' ) :
        for days in July_days :
            found_repeated = 0
            for check_day in May_days :
                if ( days == check_day ) :
                    found_repeated = 1
                    break
            if ( found_repeated == 0 ) :
                for check_day in June_days :
                    if ( days == check_day ) :
                        found_repeated = 1
                        break
                if ( found_repeated == 0 ) :
                    for check_day in August_days :
                        if ( days == check_day ) :
                            found_repeated = 1
                            break
    else :
        for days in August_days :
            found_repeated = 0
            for check_day in May_days :
                if ( days == check_day ) :
                    found_repeated = 1
                    break
            if ( found_repeated == 0 ) :
                for check_day in June_days :
                    if ( days == check_day ) :
                        found_repeated = 1
                        break
                if ( found_repeated == 0 ) :
                    for check_day in July_days :
                        if ( days == check_day ) :
                            found_repeated = 1
                            break
    if ( found_repeated == 0 ) :
        return True
    return False


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for all_days in possible_birthdays :
        days = ( days + ( all_days [ 1 ] , ) )
        i = 0
        for all_days in days :
            pass
            if ( all_days == day ) :
                i = ( i + 1 )
            pass
        pass
    pass
    if ( i == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    months = ( )
    for all_months in possible_birthdays :
        months = ( months + ( all_months [ 0 ] , ) )
        i = 0
        for all_months in months :
            pass
            if ( all_months == month ) :
                i = ( i + 1 )
            pass
        pass
    pass
    if ( i == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    May_days = ( )
    June_days = ( )
    July_days = ( )
    August_days = ( )
    May_dates = possible_birthdays [ : 3 ]
    for all_days in May_dates :
        May_days = ( May_days + ( all_days [ 1 ] , ) )
        if ( month == mon [ 0 ] ) :
            June_days = ( June_days + ( all_days [ 1 ] , ) )
        else :
            date = date
        July_days = ( July_days + ( all_days [ 1 ] , ) )
    August_dates = possible_birthdays [ 7 : ]
    for all_days in August_dates :
        pass
        if ( month == 'May' ) :
            pass
        else :
            found_repeated = 0
        pass
    found_repeated = 1
    break
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( found_repeated == 0 ) :
            pass
        else :
            found_repeated = 1
            break
        pass
    pass
    if ( found_repeated == 0 ) :
        pass
        for check_day in August_days :
            pass
            if ( days == check_day ) :
                pass
            else :
                pass
            pass
        pass
    elif ( month == 'June' ) :
        pass
    found_repeated = 0
    for check_day in May_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    for check_day in July_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    for check_day in August_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
            if ( month == mon [ 0 ] ) :
                pass
            else :
                pass
            pass
        pass
    found_repeated = 0
    for check_day in May_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    for check_day in June_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    for check_day in August_days :
        pass
        if ( days == check_day ) :
            pass
        else :
            pass
        pass
    pass
    for day in date :
        pass
    found_repeated = 0
    for check_day in May_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    for check_day in June_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    for check_day in July_days :
        pass
        if ( days == check_day ) :
            found_repeated = 1
            break
        else :
            pass
        pass
    pass
    if ( y == ( ) ) :
        pass
    else :
        return True
    return False
","def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    date = ()
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    if (len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2)):]) > 0):
        for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2)):]:
            if (month == mon[0]):
                date += (mon,)
            else:
                date = date
    elif True:
        pass
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2))]) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2))]) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2))]) / 2)):]:
        if True:
            if (month == mon[0]):
                date += (mon,)
            else:
                date = date
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))][:int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2))]) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    for mon in possible_birthdays[:int((len(possible_birthdays) / 2))][int((len(possible_birthdays[:int((len(possible_birthdays) / 2))]) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    for mon in possible_birthdays[int((len(possible_birthdays) / 2)):]:
        if (month == mon[0]):
            date += (mon,)
        else:
            date = date
    days = ()
    for day in date:
        days += (day[1],)
    y = ()
    for x in days[:int((len(days) / 2))][:int((len(days[:int((len(days) / 2))]) / 2))]:
        if (unique_day(x, possible_birthdays) == True):
            y += (x,)
        else:
            y = y
    for x in days[:int((len(days) / 2))][int((len(days[:int((len(days) / 2))]) / 2)):]:
        if (unique_day(x, possible_birthdays) == True):
            y += (x,)
        else:
            y = y
    for x in days[int((len(days) / 2)):]:
        if (unique_day(x, possible_birthdays) == True):
            y += (x,)
        else:
            y = y
    if (y == ()):
        return False
    else:
        return True
","{'unique_day': 'correct_2_286.py', 'unique_month': 'correct_2_286.py', 'contains_unique_day': 'correct_2_099.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'E1.z,E1.z,E1.z,E1.z,E1.z,E1.z,E1.z,E1.z,E1.z,E1.z,E1.z,C1.n,B2.k,B1.f'}","def unique_day ( day , possible_birthdays ) :
    ref_a = 0
    for ref_item in possible_birthdays :
        for i in ref_item :
            pass
            if ( i == day ) :
                ref_a += 1
            pass
        pass
    pass
    if ( ref_a == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    ref_a = 0
    for ref_item in possible_birthdays :
        for i in ref_item :
            pass
            if ( i == month ) :
                ref_a += 1
            pass
        pass
    pass
    if ( ref_a == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    date = ( )
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] :
        if ( month == mon [ 0 ] ) :
            June_days = ( June_days + ( all_days [ 1 ] , ) )
        else :
            date = date
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( month == 'May' ) :
            date += ( mon , )
        else :
            found_repeated = 0
        pass
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( found_repeated == 0 ) :
            date += ( mon , )
        else :
            found_repeated = 1
            break
        pass
    pass
    if ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] ) > 0 ) :
        pass
        for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
            pass
            if ( ref_days == check_day ) :
                date += ( mon , )
            else :
                date = date
            pass
        pass
    elif ( month == 'June' ) :
        pass
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( ref_days == check_day ) :
            found_repeated = 1
            break
        else :
            date = date
        pass
    pass
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( ref_days == check_day ) :
            found_repeated = 1
            break
        else :
            date = date
        pass
    pass
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if True :
            if ( month == mon [ 0 ] ) :
                date += ( mon , )
            else :
                date = date
            pass
        pass
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ : int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( month == mon [ 0 ] ) :
            found_repeated = 1
            break
        else :
            date = date
        pass
    pass
    for mon in possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] [ int ( ( len ( possible_birthdays [ : int ( ( len ( possible_birthdays ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( month == mon [ 0 ] ) :
            date += ( mon , )
        else :
            date = date
        pass
    pass
    for mon in possible_birthdays [ int ( ( len ( possible_birthdays ) / 2 ) ) : ] :
        pass
        if ( month == mon [ 0 ] ) :
            date += ( mon , )
        else :
            date = date
        pass
    ref_days = ( )
    for day in date :
        ref_days += ( day [ 1 ] , )
    ref_y = ( )
    for ref_x in ref_days [ : int ( ( len ( ref_days ) / 2 ) ) ] [ : int ( ( len ( ref_days [ : int ( ( len ( ref_days ) / 2 ) ) ] ) / 2 ) ) ] :
        pass
        if ( ref_days == check_day ) :
            found_repeated = 1
            break
        else :
            ref_y = ref_y
        pass
    pass
    for ref_x in ref_days [ : int ( ( len ( ref_days ) / 2 ) ) ] [ int ( ( len ( ref_days [ : int ( ( len ( ref_days ) / 2 ) ) ] ) / 2 ) ) : ] :
        pass
        if ( unique_day ( ref_x , possible_birthdays ) == True ) :
            ref_y += ( ref_x , )
        else :
            ref_y = ref_y
        pass
    pass
    for ref_x in ref_days [ int ( ( len ( ref_days ) / 2 ) ) : ] :
        pass
        if ( unique_day ( ref_x , possible_birthdays ) == True ) :
            ref_y += ( ref_x , )
        else :
            ref_y = ref_y
        pass
    pass
    if ( ref_y == ( ) ) :
        return False
    else :
        return True
",N/A,10756.157,545.698,0.001,0.048,3.894,47.595,11354.875,17,17,N/A
question_2,100,0,wrong_2_413.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    for x in possible_birthdays :
        if ( day in x ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    for dates in possible_birthdays :
        if ( month in dates ) :
            return False
        else :
            return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    for x in possible_birthdays :
        if ( day in x ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    for dates in possible_birthdays :
        if ( month in dates ) :
            return False
        else :
            return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 0 ] == month ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_229.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_s = 0
    for x in possible_birthdays :
        if ( day in x ) :
            ref_s = ( ref_s + 1 )
        else :
            continue
    return ( ref_s == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_s = 0
    for dates in possible_birthdays :
        if ( month in dates ) :
            ref_s = ( ref_s + 1 )
        else :
            continue
    return ( ref_s == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.876,0.020,0.000,0.000,0.170,0.559,1.647,17,17,1.600
question_2,100,0,wrong_2_403.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for x in possible_birthdays :
        x_day = x [ 1 ]
        if ( day == x_day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for x in possible_birthdays :
        x_day = x [ 1 ]
        if ( day == x_day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for x in possible_birthdays :
        x_day = x [ 1 ]
        if ( day == x_day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_269.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for x in possible_birthdays :
        x_day = x [ 1 ]
        if ( day == x_day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.501,0.118,0.000,0.000,0.356,0.208,1.207,17,17,0.980
question_2,100,0,wrong_2_248.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            unique += 1
    if ( unique > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            unique += 1
    if ( unique > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    bd = ( )
    tru = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            bd += ( i , )
    for i in bd :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            tru += 1
    if ( tru > 0 ) :
        return True
    return False


","def unique_day ( day , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            unique += 1
    if ( unique > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            unique += 1
    if ( unique > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    bd = ( )
    tru = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            bd += ( i , )
    for i in bd :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            tru += 1
    if ( tru > 0 ) :
        return True
    return False


","def unique_day ( day , possible_birthdays ) :
    appearance = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            appearance += 1
    if ( appearance == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    appearance = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            appearance += 1
    if ( appearance == 1 ) :
        return True
    return False






def contains_unique_day(month, possible_birthdays):
    new_possible_birthdays = ()
    for i in range(len(possible_birthdays)):
        if (month == possible_birthdays[i][0]):
            new_possible_birthdays += (possible_birthdays[i],)
    new_day = ''
    counter = 0
    for n in range(len(new_possible_birthdays)):
        new_day = new_possible_birthdays[n][1]
        if (unique_day(new_day, possible_birthdays) == True):
            counter += 1
    if (counter == 0):
        return False
    return True
","{'unique_day': 'correct_2_199.py', 'unique_month': 'correct_2_199.py', 'contains_unique_day': 'correct_2_107.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'A1.a'}","def unique_day ( day , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            unique += 1
    if ( unique == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            unique += 1
    if ( unique == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    bd = ( )
    tru = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            bd += ( possible_birthdays [ i ] , )
    ref_new_day = ''
    tru = 0
    for ref_n in range ( len ( bd ) ) :
        ref_new_day = bd [ ref_n ] [ 1 ]
        if ( unique_day ( ref_new_day , possible_birthdays ) == True ) :
            tru += 1
    if ( tru == 0 ) :
        return False
    return True
",N/A,0.730,0.284,0.000,0.000,0.298,1.238,2.582,17,17,0.347
question_2,100,0,wrong_2_255.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    'Your solution here'
    count = 0
    for element in possible_birthdays :
        if ( day == element [ 1 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    count = 0
    for element in possible_birthdays :
        if ( month == element [ 0 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    'Your solution here'
    for date in possible_birthdays :
        if ( unique_day ( date [ 1 ] , possible_birthdays ) and ( date [ 0 ] == month ) ) :
            return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    'Your solution here'
    count = 0
    for element in possible_birthdays :
        if ( day == element [ 1 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    count = 0
    for element in possible_birthdays :
        if ( month == element [ 0 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    'Your solution here'
    for date in possible_birthdays :
        if ( unique_day ( date [ 1 ] , possible_birthdays ) and ( date [ 0 ] == month ) ) :
            return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for x in possible_birthdays :
        if ( day == x [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for x in possible_birthdays :
        if ( month == x [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) ) :
            return True
    else :
        return False


","{'unique_day': 'correct_2_100.py', 'unique_month': 'correct_2_100.py', 'contains_unique_day': 'correct_2_115.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    'Your solution here'
    count = 0
    for element in possible_birthdays :
        if ( day == element [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    count = 0
    for element in possible_birthdays :
        if ( month == element [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( unique_day ( date [ 1 ] , possible_birthdays ) and ( date [ 0 ] == month ) ) :
            return True
    else :
        return False
",N/A,0.508,0.583,0.000,0.000,0.236,0.565,1.923,17,17,0.040
question_2,100,0,wrong_2_424.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( date == birthdate [ 1 ] ) :
            counter += 1
    if ( ( counter > 1 ) or ( counter == 0 ) ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( date == birthdate [ 1 ] ) :
            counter += 1
    if ( ( counter > 1 ) or ( counter == 0 ) ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( day == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b >= 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_110.py', 'unique_month': 'correct_2_110.py', 'contains_unique_day': 'correct_2_286.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( date == birthdate [ 1 ] ) :
            counter += 1
    if ( ( counter > 1 ) or ( counter == 0 ) ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False
",N/A,0.506,0.622,0.000,0.000,0.295,0.196,1.650,17,17,0.009
question_2,100,0,wrong_2_210.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            ref_result = ( ref_result + 1 )
        else :
            continue
    if ( ref_result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.506,0.140,0.000,0.000,0.215,0.664,1.549,17,17,1.204
question_2,100,0,wrong_2_083.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
    for i in result :
        if ( day == i [ 1 ] ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
    for i in result :
        if ( month == i [ 0 ] ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            result += ( i , )
    for i in result :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
        pass
    pass
    if ( result == 1 ) :
        pass
    else :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
        pass
    pass
    if ( result == 1 ) :
        pass
    else :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            result += ( i , )
        pass
    pass
    for i in result :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_271.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
        pass
    pass
    if ( result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
        pass
    pass
    if ( result == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            result += ( i , )
        pass
    pass
    for i in result :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
",N/A,8.910,1.561,0.000,0.002,0.348,1.142,11.999,17,17,0.427
question_2,100,0,wrong_2_056.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list_final = [ x for x in possible_birthdays [ i ] [ 1 ] ]
        list_final = sorted ( list_final )
        if ( ( date == list_final [ i ] ) and ( date != list_final [ ( i + 1 ) ] ) and ( date != list_final [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list = [ x for x in possible_birthdays [ i ] [ 0 ] ]
        list = sorted ( list )
        if ( ( month == list [ i ] ) and ( month != list [ ( i + 1 ) ] ) and ( month != list [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
def contains_unique_day ( month , possible_birthdays ) :
    month_tuple = ( )
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            month_tuple = ( month_tuple + ( possible_birthdays [ i ] [ 1 ] , ) )
    for x in month_tuple :
        for i in range ( 0 , len ( possible_birthdays ) ) :
            if ( x == possible_birthdays [ i ] [ 1 ] ) :
                return False
            else :
                return True


","def unique_day ( date , possible_birthdays ) :
    pass
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list_final = [ x for x in possible_birthdays [ i ] [ 1 ] ]
        list_final = sorted ( list_final )
        if ( ( date == list_final [ i ] ) and ( date != list_final [ ( i + 1 ) ] ) and ( date != list_final [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
        pass
    pass


def unique_month ( month , possible_birthdays ) :
    pass
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list = [ x for x in possible_birthdays [ i ] [ 0 ] ]
        list = sorted ( list )
        if ( ( month == list [ i ] ) and ( month != list [ ( i + 1 ) ] ) and ( month != list [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
        pass
    pass


def contains_unique_day ( month , possible_birthdays ) :
    month_tuple = ( )
    for i in range ( 0 , len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            month_tuple = ( month_tuple + ( possible_birthdays [ i ] [ 1 ] , ) )
        pass
    pass
    if True :
        pass
        for i in range ( 0 , len ( possible_birthdays ) ) :
            pass
            if ( x == possible_birthdays [ i ] [ 1 ] ) :
                return False
            else :
                return True
            pass
        continue
    else :
        pass
    pass
","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 0 ] == month ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )






def contains_unique_day(month, possible_birthdays):
    x = ()
    for k in range(len(possible_birthdays)):
        if (possible_birthdays[k][0] == month):
            x = (x + (possible_birthdays[k],))
    if True:
        for l in range(len(x)):
            if unique_day(x[l][1], possible_birthdays):
                return True
            else:
                continue
        return False
    else:
        pass
","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_229.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,B2.l'}","def unique_day ( date , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        if ( ref_b [ 1 ] == date ) :
            ref_s = ( ref_s + 1 )
        else :
            continue
        pass
    return ( ref_s == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        if ( ref_b [ 0 ] == month ) :
            ref_s = ( ref_s + 1 )
        else :
            continue
        pass
    return ( ref_s == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    month_tuple = ( )
    for ref_k in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ ref_k ] [ 0 ] == month ) :
            month_tuple = ( month_tuple + ( possible_birthdays [ ref_k ] , ) )
        pass
    pass
    if True :
        pass
        for ref_l in range ( len ( month_tuple ) ) :
            pass
            if unique_day ( month_tuple [ ref_l ] [ 1 ] , possible_birthdays ) :
                return True
            else :
                continue
            pass
        return False
    else :
        pass
    pass
",N/A,7.103,0.474,0.000,0.003,0.253,1.198,9.069,17,17,0.694
question_2,100,0,wrong_2_278.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for day in possible_birthdays :
        if ( ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) and ( month == day [ 0 ] ) ) :
            return True
        else :
            return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for day in possible_birthdays :
        if ( ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) and ( month == day [ 0 ] ) ) :
            return True
        else :
            return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( get_month ( i ) == month ) and unique_day ( get_day ( i ) , possible_birthdays ) ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_241.py', 'unique_month': 'correct_2_241.py', 'contains_unique_day': 'correct_2_265.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    for day in possible_birthdays :
        if ( ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) and ( month == day [ 0 ] ) ) :
            return True
        else :
            continue
    return False
",N/A,0.844,0.447,0.000,0.000,0.186,0.272,1.777,17,17,0.055
question_2,100,0,wrong_2_098.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_170.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.521,0.283,0.000,0.000,0.175,0.183,1.183,17,17,1.109
question_2,100,0,wrong_2_394.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 1 ] == date ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for n in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ n ] [ 0 ] ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
    new_day = ''
    counter = 0
    for i in range ( len ( new_possible_birthdays ) ) :
        new_day = new_possible_birthdays [ i ] [ 1 ]
        if ( unique_day ( new_day , possible_birthdays ) == True ) :
            counter = ( counter + 1 )
        if ( counter == 0 ) :
            return False
        else :
            return True


","def unique_day ( date , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 1 ] == date ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for n in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ n ] [ 0 ] ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
    new_day = ''
    counter = 0
    for i in range ( len ( new_possible_birthdays ) ) :
        new_day = new_possible_birthdays [ i ] [ 1 ]
        if ( unique_day ( new_day , possible_birthdays ) == True ) :
            counter = ( counter + 1 )
        if ( counter == 0 ) :
            return False
        else :
            return True


","def unique_day ( date , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 1 ] == date ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True






def contains_unique_day(month, possible_birthdays):
    x = ()
    for k in range(len(possible_birthdays)):
        if (possible_birthdays[k][0] == month):
            x = (x + (possible_birthdays[k],))
    for l in range(len(x)):
        if False:
            pass
        if unique_day(x[l][1], possible_birthdays):
            return True
        else:
            continue
    return False
","{'unique_day': 'correct_2_264.py', 'unique_month': 'correct_2_264.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.g'}","def unique_day ( date , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 1 ] == date ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for ref_k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ ref_k ] [ 0 ] == month ) :
            new_possible_birthdays = ( new_possible_birthdays + ( possible_birthdays [ ref_k ] , ) )
    for ref_l in range ( len ( new_possible_birthdays ) ) :
        if False :
            pass
        if unique_day ( new_possible_birthdays [ ref_l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,7.845,0.342,0.000,0.000,0.256,0.605,9.081,17,17,0.313
question_2,100,0,wrong_2_352.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthday [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthday [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + i )
    for j in count :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthday [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthday [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + i )
    for j in count :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            days += ( birthday [ 1 ] , )
    for day in days :
        if ( unique_day ( day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( day , possible_birthdays )
    return False


","{'unique_day': 'correct_2_234.py', 'unique_month': 'correct_2_234.py', 'contains_unique_day': 'correct_2_201.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( j , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == j ) :
            count = ( count + i )
    for ref_day in count :
        if ( unique_day ( ref_day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( ref_day , possible_birthdays )
    return False
",N/A,0.846,0.481,0.000,0.000,0.277,0.572,2.208,17,17,0.146
question_2,100,0,wrong_2_376.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for i in possible_birthdays [ 1 ] :
        if ( unique_day ( date , possible_birthdays ) == true ) :
            new_possible_birthdays = ( possible_birthdays [ i ] , )
        new_month = ( )
        counter = 0
        for n in possible_birthdays [ 0 ] :
            if ( month == possible_birthday [ i ] [ 0 ] ) :
                counter += 1
            if ( counter == 0 ) :
                return False
            else :
                return True


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for i in possible_birthdays [ 1 ] :
        pass
        if ( unique_day ( date , possible_birthdays ) == true ) :
            new_possible_birthdays = ( possible_birthdays [ i ] , )
        new_month = ( )
        counter = 0
    pass
    for n in possible_birthdays [ 0 ] :
        pass
        if ( month == possible_birthday [ i ] [ 0 ] ) :
            pass
            if ( counter == 0 ) :
                return False
            else :
                return True
            pass
        pass
    pass
","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True






def contains_unique_day(month, possible_birthdays):
    possible_days = ()
    for x in possible_birthdays:
        if (month in x):
            possible_days += (x[1],)
    for x in possible_days:
        contains = unique_day(x, possible_birthdays)
        if True:
            if (contains == False):
                continue
            else:
                return True
    return False
","{'unique_day': 'correct_2_107.py', 'unique_month': 'correct_2_107.py', 'contains_unique_day': 'correct_2_165.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f'}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def contains_unique_day ( month , possible_birthdays ) :
    n = ( )
    for ref_x in possible_birthdays :
        pass
        if ( month in ref_x ) :
            n += ( ref_x [ 1 ] , )
    pass
    for ref_x in n :
        ref_contains = unique_day ( ref_x , possible_birthdays )
        if True :
            pass
            if ( ref_contains == False ) :
                continue
            else :
                return True
            pass
        pass
    return False
",N/A,8.208,0.475,0.000,0.002,0.315,0.594,9.630,17,17,0.473
question_2,100,0,wrong_2_150.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
        if ( count > 1 ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
        if ( count > 1 ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays_month = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            birthdays_month += ( birthday , )
    for birthday in birthdays_month :
        if unique_day ( birthday [ 1 ] , birthdays_month ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( day == birthday [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    birthdays_month = ( )
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            birthdays_month += ( birthday , )
        pass
    pass
    for birthday in birthdays_month :
        pass
        if unique_day ( birthday [ 1 ] , birthdays_month ) :
            return True
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    birthdays_in_month = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            birthdays_in_month += ( birthday , )
    for birthday in birthdays_in_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_201.py', 'unique_month': 'correct_2_201.py', 'contains_unique_day': 'correct_2_026.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( day == birthday [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    birthdays_month = ( )
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            birthdays_month += ( birthday , )
        pass
    pass
    for birthday in birthdays_month :
        pass
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
        pass
    return False
",N/A,7.658,1.131,0.000,0.002,0.303,0.341,9.465,17,17,0.175
question_2,100,0,wrong_2_332.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day in date ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( month in date ) :
            counter += 1
        if ( counter > 1 ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        ( months , day ) = date
        if unique_day ( day , possible_birthdays ) :
            dates += ( months , )
    return ( month in dates )


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( day in date ) :
            counter += 1
        pass
    pass
    if ( counter > 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( month in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        ( months , day ) = date
        if unique_day ( day , possible_birthdays ) :
            dates += ( months , )
        pass
    return ( month in dates )
","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day in date ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    contains = ( )
    for date in possible_birthdays :
        if ( ( month in date ) and unique_day ( date [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_047.py', 'unique_month': 'correct_2_252.py', 'contains_unique_day': 'correct_2_047.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( day in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( month in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        if ( ( month in date ) and unique_day ( date [ 1 ] , possible_birthdays ) ) :
            return True
        pass
    return ( month in dates )
",N/A,4.248,0.781,0.000,0.002,0.324,0.344,5.727,17,17,0.315
question_2,100,0,wrong_2_411.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter <= 1 )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter <= 1 )
def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter <= 1 )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter <= 1 )
def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_288.py', 'unique_month': 'correct_2_288.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.693,0.270,0.000,0.000,0.249,0.160,1.393,17,17,0.021
question_2,100,0,wrong_2_015.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for j in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ j ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for j in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ j ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( day , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = 0
    for j in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ j ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_014.py', 'unique_month': 'correct_2_014.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    months = 0
    for j in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ j ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,0.500,0.555,0.000,0.000,0.236,0.064,1.385,17,17,0.007
question_2,100,0,wrong_2_209.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == month ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == month ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x += ( i , )
        else :
            continue
    for i in x :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_099.py', 'unique_month': 'correct_2_145.py', 'contains_unique_day': 'correct_2_152.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.502,0.296,0.000,0.000,0.317,0.189,1.335,17,17,0.046
question_2,100,0,wrong_2_062.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.496,N/A,N/A,N/A
question_2,100,0,wrong_2_338.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    while ( len ( bdaylist ) > 0 ) :
        single = bdaylist [ 0 ]
        if ( single [ 1 ] == day ) :
            count = ( count + 1 )
        if ( count == 2 ) :
            return False
            break
        bdaylist = bdaylist [ 1 : ]
    return True
def unique_month ( month , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    while ( len ( bdaylist ) > 0 ) :
        single = bdaylist [ 0 ]
        if ( single [ 0 ] == month ) :
            count = ( count + 1 )
        if ( count == 2 ) :
            return False
            break
        bdaylist = bdaylist [ 1 : ]
    return True
def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    while ( len ( bday_list ) > 0 ) :
        if ( bday_list [ 0 ] [ 0 ] == month ) :
            month_list = ( month_list + ( bday_list [ 0 ] , ) )
        bday_list = bday_list [ 1 : ]
    while ( len ( month_list ) > 0 ) :
        if unique_day ( month_list [ 0 ] [ 1 ] , possible_birthdays ) :
            return True
        month_list = month_list [ 1 : ]
    return False


","def unique_day ( day , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    for birthday in possible_birthdays :
        single = bdaylist [ 0 ]
        if ( single [ 1 ] == day ) :
            pass
        count = ( count + 1 )
    pass
    if ( count == 2 ) :
        return False
        break
    else :
        bdaylist = bdaylist [ 1 : ]
    return True


def unique_month ( month , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    for birthday in possible_birthdays :
        single = bdaylist [ 0 ]
        if ( single [ 0 ] == month ) :
            pass
        count = ( count + 1 )
    pass
    if ( count == 2 ) :
        return False
        break
    else :
        bdaylist = bdaylist [ 1 : ]
    return True


def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    for k in range ( len ( possible_birthdays ) ) :
        pass
        if ( bday_list [ 0 ] [ 0 ] == month ) :
            month_list = ( month_list + ( bday_list [ 0 ] , ) )
        bday_list = bday_list [ 1 : ]
    pass
    for l in range ( len ( x ) ) :
        pass
        if unique_day ( month_list [ 0 ] [ 1 ] , possible_birthdays ) :
            return False
        else :
            return True
        month_list = month_list [ 1 : ]
    return False
","def unique_day ( day , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            a = ( a + 1 )
    if ( a == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + 1 )
    if ( a == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_260.py', 'unique_month': 'correct_2_260.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    'Your solution here'
    ref_a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            ref_a = ( ref_a + 1 )
    pass
    if ( ref_a == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    ref_a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            ref_a = ( ref_a + 1 )
    pass
    if ( ref_a == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    for k in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            month_list = ( month_list + ( possible_birthdays [ k ] , ) )
    pass
    for l in range ( len ( month_list ) ) :
        pass
        if unique_day ( month_list [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,12.635,2.196,0.000,0.003,0.233,1.755,16.864,17,17,0.547
question_2,100,0,wrong_2_386.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 1 ] , ) )
    if ( len ( count ) < 2 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 0 ] , ) )
    if ( len ( count ) < 2 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 1 ] , ) )
    if ( len ( count ) < 2 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + ( possible_birthdays [ i ] [ 0 ] , ) )
    if ( len ( count ) < 2 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_017.py', 'unique_month': 'correct_2_017.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.838,1.004,0.000,0.000,0.229,0.506,2.604,17,17,0.594
question_2,100,0,wrong_2_111.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.494,N/A,N/A,N/A
question_2,100,0,wrong_2_156.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.499,0.639,0.000,0.000,0.223,0.340,1.725,17,17,0.487
question_2,100,0,wrong_2_023.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            count += 1
            if ( count == 2 ) :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == month ) :
            count += 1
            if ( count == 2 ) :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == month ) :
            count += ( birthdays , )
    for sub_birthday in count :
        if unique_day ( sub_birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            count += 1
            if ( count == 2 ) :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == month ) :
            count += 1
            if ( count == 2 ) :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == month ) :
            count += ( birthdays , )
    for sub_birthday in count :
        if unique_day ( sub_birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","

def unique_day(day, possible_birthdays):
    s = 0
    for b in possible_birthdays:
        if True:
            if (b[1] == day):
                s = (s + 1)
            continue
    return (s == 1)




def unique_month(month, possible_birthdays):
    s = 0
    for b in possible_birthdays:
        if True:
            if (b[0] == month):
                s = (s + 1)
            continue
    return (s == 1)


def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_223.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': 'B1.f,A1.a', 'unique_month': 'B1.f,A1.a', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for ref_b in possible_birthdays :
        if True :
            if ( ref_b [ 1 ] == day ) :
                count = ( count + 1 )
            continue
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        if True :
            if ( ref_b [ 0 ] == month ) :
                ref_s = ( ref_s + 1 )
            continue
    return ( ref_s == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for ref_i in possible_birthdays :
        if ( ref_i [ 0 ] == month ) :
            count += ( ref_i , )
    for ref_i in count :
        if unique_day ( ref_i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,3.017,0.310,0.000,0.000,0.277,1.109,4.743,17,17,0.417
question_2,100,0,wrong_2_110.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.512,N/A,N/A,N/A
question_2,100,0,wrong_2_067.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.700,0.920,0.000,0.000,0.262,0.204,2.118,17,17,0.036
question_2,100,0,wrong_2_314.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            days += ( i [ 1 ] , )
    for i in days :
        if unique_date ( i , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            days += ( i [ 1 ] , )
    for i in days :
        if unique_date ( i , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            days += ( birthday [ 1 ] , )
    for day in days :
        if ( unique_day ( day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( day , possible_birthdays )
    return False


","{'unique_day': 'correct_2_082.py', 'unique_month': 'correct_2_287.py', 'contains_unique_day': 'correct_2_201.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for ref_birthday in possible_birthdays :
        if ( month == ref_birthday [ 0 ] ) :
            days += ( ref_birthday [ 1 ] , )
    for ref_day in days :
        if ( unique_day ( ref_day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( ref_day , possible_birthdays )
    return False
",N/A,0.500,0.251,0.000,0.000,0.276,0.487,1.542,17,17,0.168
question_2,100,0,wrong_2_011.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( day , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = 0
    for j in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ j ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_014.py', 'unique_month': 'correct_2_014.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,0.506,0.560,0.000,0.000,0.229,0.066,1.396,17,17,0.007
question_2,100,0,wrong_2_120.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.497,N/A,N/A,N/A
question_2,100,0,wrong_2_121.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.495,N/A,N/A,N/A
question_2,100,0,wrong_2_280.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    focus = ( )
    unique_days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            focus += ( i , )
    for j in focus :
        testday = j [ 1 ]
        if ( unique_day ( testday , possible_birthdays ) == True ) :
            unique_days += ( testday , )
    for k in unique_days :
        for l in focus :
            if ( k == l [ 1 ] ) :
                break
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            counter += 1
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            counter += 1
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    focus = ( )
    unique_days = ( )
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            focus += ( i , )
        pass
    pass
    for j in focus :
        testday = j [ 1 ]
        if ( unique_day ( testday , possible_birthdays ) == True ) :
            unique_days += ( testday , )
        pass
    pass
    if ( outcome == ( ) ) :
        pass
        if True :
            pass
        break
    else :
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    (data, outcome) = ((), ())
    for birthday in possible_birthdays:
        if (month == birthday[0]):
            data += (birthday,)
    for birthday in data:
        if (unique_day(birthday[1], possible_birthdays) == True):
            outcome += birthday
        continue
    if (outcome == ()):
        if True:
            return False
    else:
        return unique_day(outcome[1], possible_birthdays)
","{'unique_day': 'correct_2_187.py', 'unique_month': 'correct_2_187.py', 'contains_unique_day': 'correct_2_246.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,A1.a'}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            counter += 1
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            counter += 1
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    focus = ( )
    unique_days = ( )
    for ref_birthday in possible_birthdays :
        pass
        if ( month == ref_birthday [ 0 ] ) :
            focus += ( ref_birthday , )
        pass
    pass
    for ref_birthday in focus :
        if ( unique_day ( ref_birthday [ 1 ] , possible_birthdays ) == True ) :
            unique_days += ref_birthday
        continue
    pass
    if ( unique_days == ( ) ) :
        pass
        if True :
            return False
    else :
        return unique_day ( unique_days [ 1 ] , possible_birthdays )
",N/A,12.710,0.480,0.000,0.002,0.344,0.478,14.047,17,17,0.386
question_2,100,0,wrong_2_140.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.500,N/A,N/A,N/A
question_2,100,0,wrong_2_201.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.846,0.927,0.000,0.000,0.249,0.282,2.335,17,17,0.045
question_2,100,0,wrong_2_275.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    birthdays_in_month = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            birthdays_in_month += ( birthday , )
    for birthday in birthdays_in_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_026.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.505,0.916,0.000,0.000,0.263,0.207,1.926,17,17,0.018
question_2,100,0,wrong_2_374.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    datetup = ( )
    for item in possible_birthdays :
        if ( item [ 1 ] == day ) :
            datetup = ( datetup + ( item [ 1 ] , ) )
    if ( len ( datetup ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    datetup = ( )
    for item in possible_birthdays :
        if ( item [ 1 ] == day ) :
            datetup = ( datetup + ( item [ 1 ] , ) )
    if ( len ( datetup ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    datetup = ( )
    for item in possible_birthdays :
        if ( item [ 1 ] == day ) :
            datetup = ( datetup + ( item [ 1 ] , ) )
    if ( len ( datetup ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_255.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    datetup = ( )
    for item in possible_birthdays :
        if ( item [ 1 ] == day ) :
            datetup = ( datetup + ( item [ 1 ] , ) )
    if ( len ( datetup ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.504,0.340,0.000,0.000,0.180,0.189,1.237,17,17,0.942
question_2,100,0,wrong_2_139.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.498,N/A,N/A,N/A
question_2,100,0,wrong_2_358.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    bag = ( )
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            bag += ( date [ 1 ] , )
    if ( len ( bag ) >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    bag = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            bag += ( date [ 0 ] , )
    if ( len ( bag ) >= 2 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            day = date [ 1 ]
    return unique_day ( day , possible_birthdays )


","def unique_day ( day , possible_birthdays ) :
    bag = ( )
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            bag += ( date [ 1 ] , )
    if ( len ( bag ) >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    bag = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            bag += ( date [ 0 ] , )
    if ( len ( bag ) >= 2 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            day = date [ 1 ]
    return unique_day ( day , possible_birthdays )


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( ( birthday [ 0 ] == month ) and unique_day ( birthday [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_203.py', 'unique_month': 'correct_2_203.py', 'contains_unique_day': 'reference.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    bag = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            bag = ( bag + 1 )
    if ( bag != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    bag = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            bag = ( bag + 1 )
    if ( bag != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    for ref_birthday in possible_birthdays :
        if ( ( ref_birthday [ 0 ] == month ) and unique_day ( ref_birthday [ 1 ] , possible_birthdays ) ) :
            return True
    return False
",N/A,0.500,0.523,0.000,0.000,0.224,0.703,1.975,17,17,0.379
question_2,100,0,wrong_2_204.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.502,0.945,0.000,0.000,0.258,0.275,2.003,17,17,0.045
question_2,100,0,wrong_2_399.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    n = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            n += 1
        else :
            n = n
    return ( n == 1 )
def unique_month ( month , possible_birthdays ) :
    n = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            n += 1
        else :
            n = n
    return ( n == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    new_tup = ( )
    edited_tup = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            new_tup = ( new_tup + ( ( possible_birthdays [ i ] [ 0 ] , possible_birthdays [ i ] [ 1 ] ) , ) )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month != possible_birthdays [ i ] [ 0 ] ) :
            edited_tup = ( edited_tup + ( ( possible_birthdays [ i ] [ 0 ] , possible_birthdays [ i ] [ 1 ] ) , ) )
    def checker ( new_tup , edited_tup ) :
        result = False
        for j in range ( len ( new_tup ) ) :
            inter_result = False
            for k in range ( len ( edited_tup ) ) :
                bool_tup = ( new_tup [ j ] [ 1 ] == edited_tup [ k ] [ 1 ] )
                inter_result = ( inter_result or bool_tup )
            result = ( result or inter_result )
            result = ( not result )
        return result
    return checker ( new_tup , edited_tup )


","def unique_day ( day , possible_birthdays ) :
    n = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            n += 1
        else :
            n = n
        pass
    return ( n == 1 )


def unique_month ( month , possible_birthdays ) :
    n = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            n += 1
        else :
            n = n
        pass
    return ( n == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    new_tup = ( )
    edited_tup = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            new_tup = ( new_tup + ( ( possible_birthdays [ i ] [ 0 ] , possible_birthdays [ i ] [ 1 ] ) , ) )
        pass
    pass
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month != possible_birthdays [ i ] [ 0 ] ) :
            pass
        pass
    result = False
    if True :
        inter_result = False
        if ( counter == 0 ) :
            result = ( result or inter_result )
            result = ( not result )
        return result
    return checker ( new_tup , edited_tup )
","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 0 ] == month ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )






def contains_unique_day(month, possible_birthdays):
    new_possible_birthdays = ()
    for i in range(len(possible_birthdays)):
        if (month == possible_birthdays[i][0]):
            new_possible_birthdays += (possible_birthdays[i],)
    new_day = ''
    counter = 0
    for n in range(len(new_possible_birthdays)):
        new_day = new_possible_birthdays[n][1]
        if (unique_day(new_day, possible_birthdays) == True):
            counter += 1
    if True:
        if (counter == 0):
            return False
        return True
","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_229.py', 'contains_unique_day': 'correct_2_107.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,A1.a'}","def unique_day ( day , possible_birthdays ) :
    n = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == day ) :
            n += 1
        else :
            n = n
        pass
    return ( n == 1 )


def unique_month ( month , possible_birthdays ) :
    n = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            n += 1
        else :
            n = n
        pass
    return ( n == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    new_tup = ( )
    edited_tup = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            new_tup = ( new_tup + ( ( possible_birthdays [ i ] [ 0 ] , possible_birthdays [ i ] [ 1 ] ) , ) )
        pass
    ref_new_day = ''
    ref_counter = 0
    for ref_n in range ( len ( new_tup ) ) :
        ref_new_day = new_tup [ ref_n ] [ 1 ]
        if ( unique_day ( ref_new_day , possible_birthdays ) == True ) :
            ref_counter += 1
        pass
    if True :
        if ( ref_counter == 0 ) :
            return False
        return True
",N/A,10.735,0.056,0.000,0.003,0.461,0.733,12.031,17,17,0.541
question_2,100,0,wrong_2_266.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
        else :
            pass
    return ( counter <= 1 )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
        else :
            pass
    return ( counter <= 1 )
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            tup = ( tup + ( i [ 0 ] , ) )
        else :
            pass
    for k in range ( 0 , len ( tup ) ) :
        if ( tup [ k ] == month ) :
            return True
        else :
            pass
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
        else :
            pass
    return ( counter <= 1 )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
        else :
            pass
    return ( counter <= 1 )
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            tup = ( tup + ( i [ 0 ] , ) )
        else :
            pass
    for k in range ( 0 , len ( tup ) ) :
        if ( tup [ k ] == month ) :
            return True
        else :
            pass
    return False


","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 0 ] == month ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            months = ( months + ( i , ) )
        else :
            continue
    for i in months :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_229.py', 'contains_unique_day': 'correct_2_216.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
        else :
            continue
    return ( counter == 1 )


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
        else :
            continue
    return ( counter == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup = ( tup + ( i , ) )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            continue
    return False
",N/A,0.840,0.070,0.000,0.000,0.312,0.474,1.725,17,17,0.230
question_2,100,0,wrong_2_262.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    if ( date in possible_birthdays [ 1 : ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( date in possible_birthdays [ 1 : ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    specific_set = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    get_days = tuple ( map ( ( lambda x : x [ 1 ] ) , specific_set ) )
    ans = tuple ( map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , get_days ) )
    if ( True in ans ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_103.py', 'unique_month': 'correct_2_103.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
    if ( True in ref_ans ) :
        return True
    else :
        return False
",N/A,0.503,0.029,0.000,0.000,0.078,0.560,1.190,0,17,N/A
question_2,100,0,wrong_2_138.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.501,N/A,N/A,N/A
question_2,100,0,wrong_2_186.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.498,N/A,N/A,N/A
question_2,100,0,wrong_2_359.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    bag = ( )
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            bag += ( date [ 1 ] , )
    if ( len ( bag ) >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    bag = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            bag += ( date [ 0 ] , )
    if ( len ( bag ) >= 2 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            day = date [ 1 ]
            if unique_day ( day , possible_birthdays ) :
                return True
            else :
                continue
    return False


","def unique_day ( day , possible_birthdays ) :
    bag = ( )
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            bag += ( date [ 1 ] , )
    if ( len ( bag ) >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    bag = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            bag += ( date [ 0 ] , )
    if ( len ( bag ) >= 2 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            day = date [ 1 ]
            if unique_day ( day , possible_birthdays ) :
                return True
            else :
                continue
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if ( unique_day ( i [ 1 ] , possible_birthdays ) == False ) :
                continue
            else :
                return True
    return False
    return True


","{'unique_day': 'correct_2_203.py', 'unique_month': 'correct_2_203.py', 'contains_unique_day': 'correct_2_271.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    bag = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            bag = ( bag + 1 )
    if ( bag != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    bag = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            bag = ( bag + 1 )
    if ( bag != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            if ( unique_day ( date [ 1 ] , possible_birthdays ) == False ) :
                continue
            else :
                return True
    return False
",N/A,0.504,0.366,0.000,0.000,0.243,0.663,1.803,17,17,0.333
question_2,100,0,wrong_2_005.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            if unique_day ( birthday [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            if unique_day ( birthday [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            if unique_day ( birthday [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'reference.py', 'unique_month': 'reference.py', 'contains_unique_day': 'correct_2_003.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == date ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            if unique_day ( birthday [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.503,0.242,0.000,0.000,0.187,0.047,1.000,17,17,0.012
question_2,100,0,wrong_2_335.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    while ( len ( bdaylist ) > 0 ) :
        single = bdaylist [ 0 ]
        if ( single [ 1 ] == day ) :
            count = ( count + 1 )
        if ( count == 2 ) :
            return False
            break
        bdaylist = bdaylist [ 1 : ]
    return True
def unique_month ( month , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    while ( len ( bdaylist ) > 0 ) :
        single = bdaylist [ 0 ]
        if ( single [ 0 ] == month ) :
            count = ( count + 1 )
        if ( count == 2 ) :
            return False
            break
        bdaylist = bdaylist [ 1 : ]
    return True
def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    while ( len ( bday_list ) > 0 ) :
        if ( bday_list [ 0 ] [ 0 ] == month ) :
            month_list = ( month_list + ( bday_list [ 0 ] , ) )
        bday_list = bday_list [ 1 : ]
    while ( len ( month_list ) > 0 ) :
        if unique_day ( month_list [ 0 ] [ 1 ] , possible_birthdays ) :
            return True
        month_list = month_list [ 1 : ]
    return False


","def unique_day ( date , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    for birthday in possible_birthdays :
        single = bdaylist [ 0 ]
        if ( single [ 1 ] == day ) :
            pass
        count = ( count + 1 )
    pass
    if ( count == 2 ) :
        return False
        break
    else :
        bdaylist = bdaylist [ 1 : ]
    return True


def unique_month ( month , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    for birthday in possible_birthdays :
        single = bdaylist [ 0 ]
        if ( single [ 0 ] == month ) :
            'Your solution here'
            a = 0
        count = ( count + 1 )
    pass
    if ( count == 2 ) :
        return False
        break
    else :
        bdaylist = bdaylist [ 1 : ]
    return True


def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    for k in range ( len ( possible_birthdays ) ) :
        pass
        if ( bday_list [ 0 ] [ 0 ] == month ) :
            month_list = ( month_list + ( bday_list [ 0 ] , ) )
        bday_list = bday_list [ 1 : ]
    pass
    for l in range ( len ( x ) ) :
        pass
        if unique_day ( month_list [ 0 ] [ 1 ] , possible_birthdays ) :
            pass
        else :
            return True
        month_list = month_list [ 1 : ]
    return False
","def unique_day ( day , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            a = ( a + 1 )
    if ( a == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + 1 )
    if ( a == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_260.py', 'unique_month': 'correct_2_260.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    'Your solution here'
    ref_a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == date ) :
            ref_a = ( ref_a + 1 )
    pass
    if ( ref_a == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + 1 )
    pass
    if ( a == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    for k in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            month_list = ( month_list + ( possible_birthdays [ k ] , ) )
    pass
    for l in range ( len ( month_list ) ) :
        pass
        if unique_day ( month_list [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,12.637,2.181,0.000,0.003,0.225,2.083,17.170,17,17,0.552
question_2,100,0,wrong_2_211.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_208.py', 'unique_month': 'correct_2_208.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.843,0.332,0.000,0.000,0.218,0.126,1.543,17,17,0.432
question_2,100,0,wrong_2_146.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
        if ( count > 1 ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
        if ( count > 1 ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays_month = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            birthdays_month += ( birthday , )
    for birthday in birthdays_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( day == birthday [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    birthdays_month = ( )
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            birthdays_month += ( birthday , )
        pass
    pass
    for birthday in birthdays_month :
        pass
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    birthdays_in_month = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            birthdays_in_month += ( birthday , )
    for birthday in birthdays_in_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_201.py', 'unique_month': 'correct_2_201.py', 'contains_unique_day': 'correct_2_026.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( day == birthday [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    birthdays_month = ( )
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            birthdays_month += ( birthday , )
        pass
    pass
    for birthday in birthdays_month :
        pass
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
        pass
    return False
",N/A,7.547,1.103,0.000,0.002,0.310,0.232,9.223,17,17,0.165
question_2,100,0,wrong_2_085.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] != day ) :
            continue
        elif ( birthday [ 1 ] not in days ) :
            days += ( birthday [ 1 ] , )
        else :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] != month ) :
            continue
        elif ( birthday [ 0 ] not in days ) :
            days += ( birthday [ 0 ] , )
        else :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] != month ) :
            continue
        elif ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        pass
        if ( birthday [ 1 ] != day ) :
            continue
        days += ( birthday [ 1 ] , )
    pass
    if ( count != 1 ) :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        pass
    pass
    if ( birthday [ 0 ] != month ) :
        continue
        if ( y . count ( month ) == 1 ) :
            days += ( birthday [ 0 ] , )
        else :
            return False
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for birthday in possible_birthdays :
        pass
        if ( birthday [ 0 ] != month ) :
            continue
        elif ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    count = 0
    for possible_dates in possible_birthdays :
        if ( possible_dates [ 1 ] == day ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True






def unique_month(month, possible_birthdays):
    y = ()
    for i in range(0, len(possible_birthdays)):
        y += (possible_birthdays[i][0],)
    if True:
        if (y.count(month) == 1):
            return True
        else:
            return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] != month ) :
            continue
        elif unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_094.py', 'unique_month': 'correct_2_135.py', 'contains_unique_day': 'correct_2_204.py'}","{'unique_day': '', 'unique_month': 'B1.f', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_count = 0
    for ref_possible_dates in possible_birthdays :
        pass
        if ( ref_possible_dates [ 1 ] == day ) :
            ref_count += 1
    pass
    if ( ref_count != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    ref_y = ( )
    for ref_i in range ( 0 , len ( possible_birthdays ) ) :
        ref_y += ( possible_birthdays [ ref_i ] [ 0 ] , )
    pass
    if True :
        if ( ref_y . count ( month ) == 1 ) :
            return True
        else :
            return False
        pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for birthday in possible_birthdays :
        pass
        if ( birthday [ 0 ] != month ) :
            continue
        elif ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
",N/A,7.610,0.151,0.000,0.003,0.231,0.435,8.460,17,17,0.607
question_2,100,0,wrong_2_355.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if ( i not in count ) :
                count = ( count + i )
    for j in count :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if ( i not in count ) :
                count = ( count + i )
    for j in count :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if ( i not in count ) :
                count = ( count + ( i , ) )
    for j in count :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_234.py', 'unique_month': 'correct_2_234.py', 'contains_unique_day': 'correct_2_234.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if ( i not in count ) :
                count = ( count + ( i , ) )
    for j in count :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.699,0.408,0.000,0.000,0.339,0.155,1.631,17,17,0.007
question_2,100,0,wrong_2_024.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            count += 1
            if ( count == 2 ) :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == month ) :
            count += 1
            if ( count == 2 ) :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == month ) :
            count += ( birthdays , )
    for sub_birthday in count :
        if unique_day ( sub_birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            count += 1
            if ( count == 2 ) :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == month ) :
            count += 1
            if ( count == 2 ) :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == month ) :
            count += ( birthdays , )
    for sub_birthday in count :
        if unique_day ( sub_birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","

def unique_day(day, possible_birthdays):
    s = 0
    for b in possible_birthdays:
        if True:
            if (b[1] == day):
                s = (s + 1)
            continue
    return (s == 1)




def unique_month(month, possible_birthdays):
    s = 0
    for b in possible_birthdays:
        if True:
            if (b[0] == month):
                s = (s + 1)
            continue
    return (s == 1)


def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_223.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': 'B1.f,A1.a', 'unique_month': 'B1.f,A1.a', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for ref_b in possible_birthdays :
        if True :
            if ( ref_b [ 1 ] == day ) :
                count = ( count + 1 )
            continue
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        if True :
            if ( ref_b [ 0 ] == month ) :
                ref_s = ( ref_s + 1 )
            continue
    return ( ref_s == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for ref_i in possible_birthdays :
        if ( ref_i [ 0 ] == month ) :
            count += ( ref_i , )
    for ref_i in count :
        if unique_day ( ref_i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,3.015,0.293,0.000,0.000,0.280,1.120,4.739,17,17,0.417
question_2,100,0,wrong_2_145.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day in i ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day in i ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day in i ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_089.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day in i ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.699,0.134,0.000,0.000,0.185,0.183,1.222,17,17,1.195
question_2,100,0,wrong_2_031.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    tpl = ( )
    for i in possible_birthdays :
        tpl += ( i [ 1 ] , )
    if ( tpl . count ( date ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    tpl = ( )
    for j in possible_birthdays :
        tpl += ( i [ 0 ] , )
    if ( tpl . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    tpl = ( )
    for i in possible_birthdays :
        tpl += ( i [ 1 ] , )
    if ( tpl . count ( date ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    tpl = ( )
    for j in possible_birthdays :
        tpl += ( i [ 0 ] , )
    if ( tpl . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_233.py', 'unique_month': 'correct_2_233.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_b = [ ]
    for i in possible_birthdays :
        ref_b . append ( i [ 1 ] )
    if ( ref_b . count ( date ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    ref_b = [ ]
    for ref_birthday in possible_birthdays :
        ref_b . append ( ref_birthday [ 0 ] )
    if ( ref_b . count ( month ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.501,0.029,0.000,0.000,0.224,0.785,1.564,17,17,0.794
question_2,100,0,wrong_2_190.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_109.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.498,0.174,0.000,0.000,0.179,0.192,1.067,17,17,0.907
question_2,100,0,wrong_2_350.py,fail_other,0,0,"def unique_day ( day , possible_birthdays ) :
    def enumerate_tree ( tree ) :
        def is_leaf ( tree ) :
            return ( type ( tree ) != tuple )
        if ( tree == ( ) ) :
            return ( )
        elif is_leaf ( tree ) :
            return ( tree , )
        else :
            return ( enumerate_tree ( tree [ 0 ] ) + enumerate_tree ( tree [ 1 : ] ) )
    flat_tree = enumerate_tree ( possible_birthdays )
    if ( flat_tree . count ( day ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    def enumerate_tree ( tree ) :
        def is_leaf ( tree ) :
            return ( type ( tree ) != tuple )
        if ( tree == ( ) ) :
            return ( )
        elif is_leaf ( tree ) :
            return ( tree , )
        else :
            return ( enumerate_tree ( tree [ 0 ] ) + enumerate_tree ( tree [ 1 : ] ) )
    flat_tree = enumerate_tree ( possible_birthdays )
    if ( flat_tree . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    tuppy = ( )
    for x in possible_birthdays :
        if unique_day ( x [ 1 ] , possible_birthdays ) :
            tuppy += ( x , )
    for y in tuppy :
        if ( y [ 0 ] == month ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        return ( type ( tree ) != tuple )
        if False :
            pass
            if ( tree == ( ) ) :
                return ( )
            else :
                tester = 1
            return ( tree , )
        else :
            return ( enumerate_tree ( tree [ 0 ] ) + enumerate_tree ( tree [ 1 : ] ) )
        pass
    flat_tree = enumerate_tree ( possible_birthdays )
    if ( flat_tree . count ( day ) > 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        return ( type ( tree ) != tuple )
        if False :
            pass
            if ( tree == ( ) ) :
                return ( )
            else :
                tester = 1
            return ( tree , )
        else :
            return ( enumerate_tree ( tree [ 0 ] ) + enumerate_tree ( tree [ 1 : ] ) )
        pass
    flat_tree = enumerate_tree ( possible_birthdays )
    if ( flat_tree . count ( month ) > 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    tuppy = ( )
    for x in possible_birthdays :
        pass
        if unique_day ( x [ 1 ] , possible_birthdays ) :
            tuppy += ( x , )
        pass
    pass
    for y in tuppy :
        pass
        if ( y [ 0 ] == month ) :
            return True
        pass
    return False
","

def unique_day(date, possible_birthdays):
    tester = 0
    for i in possible_birthdays:
        if (date == i[1]):
            if tester:
                return False
            else:
                tester = 1
        else:
            pass
    if False:
        pass
    return tester




def unique_month(month, possible_birthdays):
    tester = 0
    for i in possible_birthdays:
        if (month == i[0]):
            if tester:
                return False
            else:
                tester = 1
        else:
            pass
    if False:
        pass
    return tester


def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_077.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': 'B1.g,B2.l', 'unique_month': 'B1.g,B2.l', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            pass
            if tester :
                return False
            else :
                tester = 1
        else :
            pass
        pass
    if False :
        pass
    return tester


def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            pass
            if tester :
                return False
            else :
                tester = 1
        else :
            pass
        pass
    if False :
        pass
    return tester


def contains_unique_day ( month , possible_birthdays ) :
    tuppy = ( )
    for ref_i in possible_birthdays :
        pass
        if ( ref_i [ 0 ] == month ) :
            tuppy += ( ref_i , )
        pass
    pass
    for ref_i in tuppy :
        pass
        if unique_day ( ref_i [ 1 ] , possible_birthdays ) :
            return True
        pass
    return False
",N/A,10.676,0.506,0.000,0.003,0.255,1.114,12.589,11,17,N/A
question_2,100,0,wrong_2_128.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_017.py', 'unique_month': 'correct_2_017.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.698,0.334,0.000,0.000,0.180,0.127,1.365,17,17,0.393
question_2,100,0,wrong_2_312.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            conter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == month ) :
            conter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            conter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == month ) :
            conter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_099.py', 'unique_month': 'correct_2_099.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.500,0.194,0.000,0.000,0.238,0.418,1.373,17,17,0.461
question_2,100,0,wrong_2_069.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
    for i in result :
        if ( day == i [ 1 ] ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
    for i in result :
        if ( month == i [ 0 ] ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            result += ( i , )
    for i in result :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
        pass
    pass
    if ( result == 1 ) :
        pass
    else :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
        pass
    pass
    if ( result == 1 ) :
        pass
    else :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            result += ( i , )
        pass
    pass
    for i in result :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_271.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
        pass
    pass
    if ( result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
        pass
    pass
    if ( result == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            result += ( i , )
        pass
    pass
    for i in result :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
",N/A,8.868,1.566,0.000,0.002,0.339,1.136,11.948,17,17,0.427
question_2,100,0,wrong_2_397.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    if ( month == 'June' ) :
        return True
    elif ( month == 'May' ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    if ( month == 'June' ) :
        return True
        if ( True in ans ) :
            return True
        return False
    pass
","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    specific_set = tuple(filter((lambda x: (x[0] == month)), possible_birthdays))
    get_days = tuple(map((lambda x: x[1]), specific_set))
    if True:
        ans = tuple(map((lambda x: unique_day(x, possible_birthdays)), get_days))
        if (True in ans):
            return True
        return False
","{'unique_day': 'correct_2_065.py', 'unique_month': 'correct_2_065.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,A1.a'}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    if True :
        ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
        if ( True in ref_ans ) :
            return True
        return False
    pass
",N/A,3.609,0.220,0.000,0.002,0.310,0.207,4.380,17,17,0.586
question_2,100,0,wrong_2_147.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b >= 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_286.py', 'unique_month': 'correct_2_286.py', 'contains_unique_day': 'correct_2_286.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == day ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    a = 0
    for item in possible_birthdays :
        for i in item :
            if ( i == month ) :
                a += 1
    if ( a == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b >= 1 ) :
        return True
    else :
        return False
",N/A,0.838,0.020,0.000,0.000,0.515,0.126,1.528,17,17,0.009
question_2,100,0,wrong_2_126.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_017.py', 'unique_month': 'correct_2_017.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.505,0.327,0.000,0.000,0.191,0.134,1.185,17,17,0.393
question_2,100,0,wrong_2_343.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    result = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    result = 0
    for months in possible_birthdays :
        if ( months [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    result = 0
    for months in possible_birthdays :
        if ( months [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    result = 0
    for months in possible_birthdays :
        if ( months [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_240.py', 'unique_month': 'correct_2_240.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    result = 0
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    result = 0
    for months in possible_birthdays :
        if ( months [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.502,0.300,0.000,0.000,0.231,0.127,1.186,17,17,0.432
question_2,100,0,wrong_2_419.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    n = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            n += 1
        else :
            n = n
    return ( n == 1 )
def unique_month ( month , possible_birthdays ) :
    n = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            n += 1
        else :
            n = n
    return ( n == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    n = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            n += 1
        else :
            n = n
    return ( n == 1 )
def unique_month ( month , possible_birthdays ) :
    n = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            n += 1
        else :
            n = n
    return ( n == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 0 ] == month ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_229.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    n = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            n += 1
        else :
            n = n
    return ( n == 1 )


def unique_month ( month , possible_birthdays ) :
    n = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            n += 1
        else :
            n = n
    return ( n == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.500,0.020,0.000,0.000,0.266,0.362,1.175,17,17,0.659
question_2,100,0,wrong_2_206.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.505,0.859,0.000,0.000,0.247,0.277,1.920,17,17,0.028
question_2,100,0,wrong_2_006.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == days ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    month = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == days ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == days ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    month = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == days ) :
            day = ( day + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( day , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_014.py', 'unique_month': 'correct_2_109.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            ref_counter = ( ref_counter + 1 )
    if ( ref_counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,0.503,0.681,0.000,0.000,0.253,0.584,2.052,17,17,0.064
question_2,100,0,wrong_2_084.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] != day ) :
            continue
        elif ( birthday [ 1 ] not in days ) :
            days += ( birthday [ 1 ] , )
        else :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] != month ) :
            continue
        elif ( birthday [ 0 ] not in days ) :
            days += ( birthday [ 0 ] , )
        else :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] != month ) :
            continue
        elif ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        pass
        if ( birthday [ 1 ] != day ) :
            continue
        days += ( birthday [ 1 ] , )
    pass
    if ( count != 1 ) :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        pass
    pass
    if ( birthday [ 0 ] != month ) :
        continue
        if ( y . count ( month ) == 1 ) :
            days += ( birthday [ 0 ] , )
        else :
            return False
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for birthday in possible_birthdays :
        pass
        if ( birthday [ 0 ] != month ) :
            continue
        elif ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    count = 0
    for possible_dates in possible_birthdays :
        if ( possible_dates [ 1 ] == day ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True






def unique_month(month, possible_birthdays):
    y = ()
    for i in range(0, len(possible_birthdays)):
        y += (possible_birthdays[i][0],)
    if True:
        if (y.count(month) == 1):
            return True
        else:
            return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] != month ) :
            continue
        elif unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_094.py', 'unique_month': 'correct_2_135.py', 'contains_unique_day': 'correct_2_204.py'}","{'unique_day': '', 'unique_month': 'B1.f', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_count = 0
    for ref_possible_dates in possible_birthdays :
        pass
        if ( ref_possible_dates [ 1 ] == day ) :
            ref_count += 1
    pass
    if ( ref_count != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    ref_y = ( )
    for ref_i in range ( 0 , len ( possible_birthdays ) ) :
        ref_y += ( possible_birthdays [ ref_i ] [ 0 ] , )
    pass
    if True :
        if ( ref_y . count ( month ) == 1 ) :
            return True
        else :
            return False
        pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for birthday in possible_birthdays :
        pass
        if ( birthday [ 0 ] != month ) :
            continue
        elif ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
",N/A,7.502,0.123,0.000,0.002,0.233,0.433,8.324,17,17,0.607
question_2,100,0,wrong_2_103.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_107.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.699,0.302,0.000,0.000,0.190,0.385,1.598,17,17,1.130
question_2,100,0,wrong_2_384.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_203.py', 'unique_month': 'correct_2_203.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.501,0.201,0.000,0.000,0.225,0.119,1.068,17,17,0.432
question_2,100,0,wrong_2_088.py,fail_other,1,0,"def unique_day ( day , possible_birthdays ) :
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    day = month
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for possiblemonth in possible_birthdays :
        if ( possiblemonth [ 0 ] == month ) :
            if ( unique_day ( possiblemonth [ 1 ] , possible_birthdays ) == True ) :
                return True
            else :
                continue
    return False


","def unique_day ( day , possible_birthdays ) :
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    day = month
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for possiblemonth in possible_birthdays :
        if ( possiblemonth [ 0 ] == month ) :
            if ( unique_day ( possiblemonth [ 1 ] , possible_birthdays ) == True ) :
                return True
            else :
                continue
    return False


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if ( unique_day ( i [ 1 ] , possible_birthdays ) == False ) :
                continue
            else :
                return True
    return False
    return True


","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_077.py', 'contains_unique_day': 'correct_2_271.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_tester = 0
    for birthdays in possible_birthdays :
        if ( day == birthdays [ 1 ] ) :
            if ref_tester :
                return False
            else :
                ref_tester = 1
    return ref_tester


def unique_month ( day , possible_birthdays ) :
    ref_tester = 0
    for birthdays in possible_birthdays :
        if ( day == birthdays [ 0 ] ) :
            if ref_tester :
                return False
            else :
                ref_tester = 1
    return ref_tester


def contains_unique_day ( month , possible_birthdays ) :
    for possiblemonth in possible_birthdays :
        if ( month == possiblemonth [ 0 ] ) :
            if ( unique_day ( possiblemonth [ 1 ] , possible_birthdays ) == False ) :
                continue
            else :
                return True
    return False
    return True
",N/A,0.503,0.020,0.000,0.000,0.220,1.402,2.168,11,17,N/A
question_2,100,0,wrong_2_123.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.504,0.019,0.000,0.000,0.169,0.180,0.892,13,17,N/A
question_2,100,0,wrong_2_076.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for possible_birthday in possible_birthdays :
        if ( day == possible_birthday [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for possible_birthday in possible_birthdays :
        if ( month == possible_birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for possible_birthday in possible_birthdays :
        if ( ( month == possible_birthday [ 0 ] ) and unique_day ( possible_birthday [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for possible_birthday in possible_birthdays :
        if ( day == possible_birthday [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for possible_birthday in possible_birthdays :
        if ( month == possible_birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for possible_birthday in possible_birthdays :
        if ( ( month == possible_birthday [ 0 ] ) and unique_day ( possible_birthday [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for possible_birthday in possible_birthdays :
        if ( day == possible_birthday [ 1 ] ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for possible_birthday in possible_birthdays :
        if ( month == possible_birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    for possible_birthday in possible_birthdays :
        if ( ( month == possible_birthday [ 0 ] ) and unique_day ( possible_birthday [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_068.py', 'unique_month': 'correct_2_068.py', 'contains_unique_day': 'correct_2_068.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for possible_birthday in possible_birthdays :
        if ( date == possible_birthday [ 1 ] ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for possible_birthday in possible_birthdays :
        if ( month == possible_birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for possible_birthday in possible_birthdays :
        if ( ( month == possible_birthday [ 0 ] ) and unique_day ( possible_birthday [ 1 ] , possible_birthdays ) ) :
            return True
    return False
",N/A,0.501,0.302,0.000,0.000,0.175,0.052,1.055,17,17,0.012
question_2,100,0,wrong_2_104.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
        return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
        return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_107.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.499,0.299,0.000,0.000,0.153,0.398,1.369,17,17,1.130
question_2,100,0,wrong_2_380.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.494,N/A,N/A,N/A
question_2,100,0,wrong_2_387.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            tp = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( tp == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            tp = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( tp == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( day == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b >= 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_110.py', 'unique_month': 'correct_2_110.py', 'contains_unique_day': 'correct_2_286.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            tp = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( tp == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False
",N/A,0.499,0.546,0.000,0.000,0.290,0.257,1.622,17,17,0.018
question_2,100,0,wrong_2_033.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    tpl = ( )
    for i in possible_birthdays :
        tpl += ( i [ 1 ] , )
    if ( tpl . count ( date ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    tpl = ( )
    for j in possible_birthdays :
        tpl += ( j [ 0 ] , )
    if ( tpl . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    tpl = ( )
    for i in possible_birthdays :
        tpl += ( i [ 1 ] , )
    if ( tpl . count ( date ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    tpl = ( )
    for j in possible_birthdays :
        tpl += ( j [ 0 ] , )
    if ( tpl . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_233.py', 'unique_month': 'correct_2_233.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_b = [ ]
    for i in possible_birthdays :
        ref_b . append ( i [ 1 ] )
    if ( ref_b . count ( date ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    ref_b = [ ]
    for j in possible_birthdays :
        ref_b . append ( j [ 0 ] )
    if ( ref_b . count ( month ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.502,0.024,0.000,0.000,0.228,0.780,1.558,17,17,0.765
question_2,100,0,wrong_2_263.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    if ( date in possible_birthdays [ 1 ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( date in possible_birthdays [ 1 ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    specific_set = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    get_days = tuple ( map ( ( lambda x : x [ 1 ] ) , specific_set ) )
    ans = tuple ( map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , get_days ) )
    if ( True in ans ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_103.py', 'unique_month': 'correct_2_103.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
    if ( True in ref_ans ) :
        return True
    else :
        return False
",N/A,0.501,0.026,0.000,0.000,0.080,0.557,1.184,0,17,N/A
question_2,100,0,wrong_2_078.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            total += 1
    if ( total > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            total += 1
    if ( total > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            total += 1
    if ( total > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            total += 1
    if ( total > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    appearance = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            appearance += 1
    if ( appearance == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    appearance = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            appearance += 1
    if ( appearance == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_199.py', 'unique_month': 'correct_2_199.py', 'contains_unique_day': 'correct_2_199.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            total += 1
    if ( total == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            total += 1
    if ( total == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.504,0.362,0.000,0.000,0.223,0.495,1.607,17,17,0.022
question_2,100,0,wrong_2_099.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_170.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.501,0.275,0.000,0.000,0.151,0.190,1.139,17,17,1.109
question_2,100,0,wrong_2_173.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.501,N/A,N/A,N/A
question_2,100,0,wrong_2_431.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    new_tuple = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            new_tuple += ( i , )
        if ( len ( new_tuple ) > 1 ) :
            return False
        else :
            return unique_day ( new_tupl [ 0 ] [ 1 ] , possible_birthdays )


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == date ) :
            counter += 1
        pass
    pass
    if ( counter > 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            counter += 1
        pass
    pass
    if ( counter > 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    new_tuple = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            new_tuple += ( i , )
            if ( len ( new_tuple ) > 1 ) :
                return False
            return unique_day ( new_tupl [ 0 ] [ 1 ] , possible_birthdays )
        pass
    pass
","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    number = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
                number += 1
    return ( number > 0 )


","{'unique_day': 'correct_2_217.py', 'unique_month': 'correct_2_161.py', 'contains_unique_day': 'correct_2_180.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == date ) :
            counter += 1
        pass
    pass
    if ( counter == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            counter += 1
        pass
    pass
    if ( counter == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    ref_number = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
                ref_number += 1
        pass
    return ( ref_number > 0 )
",N/A,3.935,1.218,0.000,0.002,0.310,0.754,6.251,17,17,0.398
question_2,100,0,wrong_2_032.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    tpl = ( )
    for i in possible_birthdays :
        tpl += ( i [ 1 ] , )
    if ( tpl . count ( date ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    tpl = ( )
    for j in possible_birthdays :
        tpl += ( i [ 0 ] , )
    if ( tpl . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    tpl = ( )
    for i in possible_birthdays :
        tpl += ( i [ 1 ] , )
    if ( tpl . count ( date ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    tpl = ( )
    for j in possible_birthdays :
        tpl += ( i [ 0 ] , )
    if ( tpl . count ( month ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_233.py', 'unique_month': 'correct_2_233.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_b = [ ]
    for i in possible_birthdays :
        ref_b . append ( i [ 1 ] )
    if ( ref_b . count ( date ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    ref_b = [ ]
    for ref_birthday in possible_birthdays :
        ref_b . append ( ref_birthday [ 0 ] )
    if ( ref_b . count ( month ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.840,0.024,0.000,0.000,0.223,0.786,1.898,17,17,0.794
question_2,100,0,wrong_2_125.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester
def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester
def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_077.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester


def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.503,0.014,0.000,0.000,0.223,0.120,0.884,11,17,N/A
question_2,100,0,wrong_2_197.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    x = 0
    for birthday in possible_birthdays :
        if ( day in birthday ) :
            x += 1
    if ( x > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 0
    for birthday in possible_birthdays :
        if ( month in birthday ) :
            x += 1
    if ( x > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    results = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            results += ( unique_day ( birthday [ 1 ] , possible_birthdays ) , )
    if ( True in results ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    x = 0
    for birthday in possible_birthdays :
        if ( day in birthday ) :
            x += 1
    if ( x > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 0
    for birthday in possible_birthdays :
        if ( month in birthday ) :
            x += 1
    if ( x > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    results = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            results += ( unique_day ( birthday [ 1 ] , possible_birthdays ) , )
    if ( True in results ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day in i ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month in i ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    b = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            b += unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays )
    if ( b == 0 ) :
        return False
    else :
        return True


","{'unique_day': 'correct_2_089.py', 'unique_month': 'correct_2_089.py', 'contains_unique_day': 'correct_2_291.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    x = 0
    for birthday in possible_birthdays :
        if ( day in birthday ) :
            x += 1
    if ( x == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    x = 0
    for birthday in possible_birthdays :
        if ( month in birthday ) :
            x += 1
    if ( x == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    results = 0
    for birthday in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ birthday ] [ 0 ] ) :
            results += unique_day ( possible_birthdays [ birthday ] [ 1 ] , possible_birthdays )
    if ( results == 0 ) :
        return False
    else :
        return True
",N/A,0.504,0.579,0.000,0.000,0.264,0.961,2.340,17,17,0.175
question_2,100,0,wrong_2_347.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    return ( date in possible_birthdays )
def unique_month ( month , possible_birthdays ) :
    return ( month in possible_birthdays )
def contains_unique_day ( month , possible_birthdays ) :
    birthday = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            birthday += possible_birthdays [ i ]
        for j in range ( len ( birthday ) ) :
            return unique_day ( birthday [ i ] [ 1 ] , possible_birthdays )


","def unique_day ( date , possible_birthdays ) :
    return ( date in possible_birthdays )


def unique_month ( month , possible_birthdays ) :
    return ( month in possible_birthdays )


def contains_unique_day ( month , possible_birthdays ) :
    birthday = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            birthday += possible_birthdays [ i ]
        pass
    pass
    for j in range ( len ( birthday ) ) :
        return True
        if unique_day ( tup [ l ] [ 1 ] , possible_birthdays ) :
            return unique_day ( birthday [ i ] [ 1 ] , possible_birthdays )
        pass
    pass
","def unique_day ( date , possible_birthdays ) :
    days = [ birthday [ 1 ] for birthday in possible_birthdays ]
    return ( days . count ( date ) == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            tup = ( tup + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( tup ) ) :
        if unique_day ( tup [ l ] [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_275.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_014.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_days = [ ref_birthday [ 1 ] for ref_birthday in possible_birthdays ]
    return ( ref_days . count ( date ) == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    birthday = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            birthday = ( birthday + ( possible_birthdays [ i ] , ) )
        pass
    pass
    for ref_l in range ( len ( birthday ) ) :
        if unique_day ( birthday [ ref_l ] [ 1 ] , possible_birthdays ) :
            return True
        pass
    return False
",N/A,2.964,0.368,0.000,0.001,0.134,0.354,3.846,17,17,0.662
question_2,100,0,wrong_2_068.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( ( possible_birthdays [ i ] [ 0 ] == month ) and ( unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) == True ) ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( ( possible_birthdays [ i ] [ 0 ] == month ) and ( unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) == True ) ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( ( possible_birthdays [ i ] [ 0 ] == month ) and ( unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) == True ) ) :
            return True
    return False


","{'unique_day': 'correct_2_065.py', 'unique_month': 'correct_2_065.py', 'contains_unique_day': 'correct_2_065.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( ( possible_birthdays [ i ] [ 0 ] == month ) and ( unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) == True ) ) :
            return True
    return False
",N/A,0.833,0.357,0.000,0.000,0.204,0.160,1.581,17,17,0.008
question_2,100,0,wrong_2_165.py,fail_exception,N/A,1,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.499,N/A,N/A,N/A
question_2,100,0,wrong_2_264.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
        else :
            pass
    return ( counter <= 1 )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
        else :
            pass
    return ( counter <= 1 )
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            tup = ( tup + ( i [ 0 ] , ) )
        else :
            pass
    for k in range ( 0 , len ( tup ) ) :
        if ( tup [ k ] == month ) :
            return True
        else :
            pass
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
        else :
            pass
    return ( counter <= 1 )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
        else :
            pass
    return ( counter <= 1 )
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            tup = ( tup + ( i [ 0 ] , ) )
        else :
            pass
    for k in range ( 0 , len ( tup ) ) :
        if ( tup [ k ] == month ) :
            return True
        else :
            pass
    return False


","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 0 ] == month ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            months = ( months + ( i , ) )
        else :
            continue
    for i in months :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_229.py', 'contains_unique_day': 'correct_2_216.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
        else :
            continue
    return ( counter == 1 )


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
        else :
            continue
    return ( counter == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup = ( tup + ( i , ) )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            continue
    return False
",N/A,0.503,0.046,0.000,0.000,0.299,0.471,1.350,17,17,0.230
question_2,100,0,wrong_2_063.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    bag = ( )
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            bag += ( date [ 1 ] , )
    if ( len ( bag ) >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    bag = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            bag += ( date [ 0 ] , )
    if ( len ( bag ) >= 2 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            day = date [ 1 ]
            if unique_day ( day , possible_birthdays ) :
                return True
            else :
                continue
    return False


","def unique_day ( day , possible_birthdays ) :
    bag = ( )
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            bag += ( date [ 1 ] , )
    if ( len ( bag ) >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    bag = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            bag += ( date [ 0 ] , )
    if ( len ( bag ) >= 2 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            day = date [ 1 ]
            if unique_day ( day , possible_birthdays ) :
                return True
            else :
                continue
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for item in possible_birthdays :
        if ( item [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if ( unique_day ( i [ 1 ] , possible_birthdays ) == False ) :
                continue
            else :
                return True
    return False
    return True


","{'unique_day': 'correct_2_203.py', 'unique_month': 'correct_2_203.py', 'contains_unique_day': 'correct_2_271.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    bag = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            bag = ( bag + 1 )
    if ( bag != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    bag = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            bag = ( bag + 1 )
    if ( bag != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            if ( unique_day ( date [ 1 ] , possible_birthdays ) == False ) :
                continue
            else :
                return True
    return False
",N/A,0.502,0.355,0.000,0.000,0.231,0.669,1.787,17,17,0.333
question_2,100,0,wrong_2_369.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    i = 0
    for months in possible_birthdays :
        if ( month == months [ 0 ] ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    i = 0
    for months in possible_birthdays :
        if ( month == months [ 0 ] ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    i = 0
    for months in possible_birthdays :
        if ( month == months [ 0 ] ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_245.py', 'unique_month': 'correct_2_245.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    i = 0
    for months in possible_birthdays :
        if ( month == months [ 0 ] ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.499,0.400,0.000,0.000,0.217,0.123,1.263,17,17,0.432
question_2,100,0,wrong_2_418.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_s = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            ref_s = ( ref_s + 1 )
        else :
            continue
    return ( ref_s == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.499,0.023,0.000,0.000,0.153,0.455,1.149,17,17,2.083
question_2,100,0,wrong_2_252.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    monies = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            monies += ( possible_birthdays [ i ] [ 1 ] , )
    for i in range ( len ( monies ) ) :
        if unique_day ( monies [ i ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    monies = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            monies += ( possible_birthdays [ i ] [ 1 ] , )
    for i in range ( len ( monies ) ) :
        if unique_day ( monies [ i ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    monies = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            monies += ( possible_birthdays [ i ] [ 1 ] , )
    for i in range ( len ( monies ) ) :
        if unique_day ( monies [ i ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_162.py', 'unique_month': 'correct_2_162.py', 'contains_unique_day': 'correct_2_162.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    monies = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            monies += ( possible_birthdays [ i ] [ 1 ] , )
    for i in range ( len ( monies ) ) :
        if unique_day ( monies [ i ] , possible_birthdays ) :
            return True
    return False
",N/A,0.497,0.452,0.000,0.000,0.230,0.168,1.375,17,17,0.007
question_2,100,0,wrong_2_081.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
    for i in result :
        if ( day == i [ 1 ] ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
    for i in result :
        if ( month == i [ 0 ] ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            result += ( i , )
    for i in result :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        pass
        if ( day == i [ 1 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
        pass
    pass
    if ( result == 1 ) :
        pass
    else :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    result = ( )
    counter = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            result = ( result + ( possible_birthdays [ : counter ] + possible_birthdays [ ( counter + 1 ) : ] ) )
            break
        else :
            counter += 1
            continue
        pass
    pass
    if ( result == 1 ) :
        pass
    else :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            result += ( i , )
        pass
    pass
    for i in result :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_271.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        pass
        if ( date == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
        pass
    pass
    if ( result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        pass
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
        pass
    pass
    if ( result == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            result += ( i , )
        pass
    pass
    for i in result :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
",N/A,8.846,1.566,0.000,0.002,0.289,1.123,11.864,17,17,0.433
question_2,100,0,wrong_2_401.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    i = 0
    count = 0
    while ( i <= len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
            i += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    if ( month == 'June' ) :
        return True
    elif ( month == 'May' ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    i = 0
    count = 0
    while ( i <= len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
            i += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    if ( month == 'June' ) :
        return True
        if ( True in ans ) :
            return True
        return False
    pass
","def unique_day ( day , possible_birthdays ) :
    ( i , times ) = ( 0 , 0 )
    while ( i < len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            times += 1
        i += 1
    if ( times == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    specific_set = tuple(filter((lambda x: (x[0] == month)), possible_birthdays))
    get_days = tuple(map((lambda x: x[1]), specific_set))
    if True:
        ans = tuple(map((lambda x: unique_day(x, possible_birthdays)), get_days))
        if (True in ans):
            return True
        return False
","{'unique_day': 'correct_2_278.py', 'unique_month': 'correct_2_065.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,A1.a'}","def unique_day ( date , possible_birthdays ) :
    i = 0
    count = 0
    while ( i < len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
        i += 1
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    if True :
        ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
        if ( True in ref_ans ) :
            return True
        return False
    pass
",N/A,3.624,0.150,0.000,0.002,10.352,7.830,21.993,17,17,0.566
question_2,100,0,wrong_2_105.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_107.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.837,0.306,0.000,0.000,0.175,0.391,1.730,17,17,1.130
question_2,100,0,wrong_2_277.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    if ( day in possible_birthdays ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    if ( day in possible_birthdays ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_103.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.501,0.028,0.000,0.000,0.069,0.207,0.821,5,17,N/A
question_2,100,0,wrong_2_070.py,fail_other,1,1,"def unique_day ( day , possible_birthdays ) :
    unique = False
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            if unique :
                return False
            else :
                unique = True
    return True
def unique_month ( month , possible_birthdays ) :
    unique = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique :
                return False
            else :
                unique = True
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    unique = False
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            if unique :
                return False
            else :
                unique = True
    return True
def unique_month ( month , possible_birthdays ) :
    unique = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique :
                return False
            else :
                unique = True
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_077.py', 'contains_unique_day': 'correct_2_077.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            if unique :
                return False
            else :
                unique = 1
    return unique


def unique_month ( month , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique :
                return False
            else :
                unique = 1
    return unique


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.501,0.120,0.000,0.000,0.209,0.480,1.334,11,17,N/A
question_2,100,0,wrong_2_090.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
    return
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( month == dates [ 0 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
    return
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( month == dates [ 0 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
    return




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( month == dates [ 0 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_073.py', 'unique_month': 'correct_2_073.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
    return


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( month == dates [ 0 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.499,0.300,0.000,0.000,0.239,0.124,1.189,17,17,0.368
question_2,100,0,wrong_2_096.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_170.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.499,0.296,0.000,0.000,0.147,0.189,1.152,17,17,1.109
question_2,100,0,wrong_2_107.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.497,N/A,N/A,N/A
question_2,100,0,wrong_2_324.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
        if ( count == 1 ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
        if ( count == 1 ) :
            return True
        else :
            return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        pass
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
        pass
    return True
    if ( count == 1 ) :
        return True
    else :
        pass
    pass


def contains_unique_day ( month , possible_birthdays ) :
    return
","

def unique_day(day, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (day in date):
            counter += 1
    if (counter != 1):
        return False
    else:
        return True


def unique_month ( month , possible_birthdays ) :
    bag = [ ]
    for months in possible_birthdays :
        if ( months [ 0 ] == month ) :
            bag . append ( month )
    n = len ( bag )
    if ( n == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_046.py', 'unique_month': 'correct_2_224.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': 'A1.b', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( date in i ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    ref_bag = [ ]
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            ref_bag . append ( month )
        pass
    ref_n = len ( ref_bag )
    if ( ref_n == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,6.179,0.051,0.000,0.001,0.278,0.727,7.266,17,17,0.952
question_2,100,0,wrong_2_354.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + i )
    for j in count :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + i )
    for j in count :
        if unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_234.py', 'unique_month': 'correct_2_234.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    lenth = len ( possible_birthdays )
    count = 0
    for i in range ( 0 , lenth ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    count = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += ( i , )
    for i in count :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.701,0.697,0.000,0.000,0.323,0.252,2.003,17,17,0.046
question_2,100,0,wrong_2_115.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.496,N/A,N/A,N/A
question_2,100,0,wrong_2_323.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
        if ( count == 1 ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
        if ( count == 1 ) :
            return True
        else :
            return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        pass
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
        pass
    bag = [ ]
    if ( count == 1 ) :
        return True
    else :
        pass
    pass


def contains_unique_day ( month , possible_birthdays ) :
    return
","

def unique_day(day, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (day in date):
            counter += 1
    if (counter != 1):
        return False
    else:
        return True


def unique_month ( month , possible_birthdays ) :
    bag = [ ]
    for months in possible_birthdays :
        if ( months [ 0 ] == month ) :
            bag . append ( month )
    n = len ( bag )
    if ( n == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_046.py', 'unique_month': 'correct_2_224.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': 'A1.b', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( date in i ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    ref_bag = [ ]
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            ref_bag . append ( month )
        pass
    bag = len ( ref_bag )
    if ( bag == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,6.188,0.044,0.000,0.001,0.305,0.741,7.308,17,17,0.952
question_2,100,0,wrong_2_127.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_017.py', 'unique_month': 'correct_2_017.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.702,0.350,0.000,0.000,0.193,0.127,1.398,17,17,0.393
question_2,100,0,wrong_2_377.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( day == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b >= 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_110.py', 'unique_month': 'correct_2_110.py', 'contains_unique_day': 'correct_2_286.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False
",N/A,0.500,0.531,0.000,0.000,0.281,0.270,1.611,17,17,0.018
question_2,100,0,wrong_2_279.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for day in possible_birthdays :
        if ( ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) and ( month == day [ 0 ] ) ) :
            return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for day in possible_birthdays :
        if ( ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) and ( month == day [ 0 ] ) ) :
            return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) ) :
            return True
    else :
        return False


","{'unique_day': 'correct_2_241.py', 'unique_month': 'correct_2_241.py', 'contains_unique_day': 'correct_2_115.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    for day in possible_birthdays :
        if ( ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) and ( month == day [ 0 ] ) ) :
            return True
    else :
        return False
",N/A,0.501,0.442,0.000,0.000,0.229,0.196,1.398,17,17,0.018
question_2,100,0,wrong_2_299.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            counter = ( counter + 1 )
        else :
            continue
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            counter = ( counter + 1 )
        else :
            continue
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            counter = ( counter + 1 )
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.519,0.139,0.000,0.000,0.213,0.399,1.293,17,17,1.064
question_2,100,0,wrong_2_218.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_123.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.503,0.072,0.000,0.000,0.159,0.283,1.038,17,17,1.020
question_2,100,0,wrong_2_375.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for i in possible_birthdays [ 1 ] :
        if ( unique_day ( date , possible_birthdays ) == true ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
        new_month = ( )
        counter = 0
        for n in possible_birthdays [ 0 ] :
            if ( month == possible_birthday [ i ] [ 0 ] ) :
                counter += 1
            if ( counter == 0 ) :
                return False
            else :
                return True


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for i in possible_birthdays [ 1 ] :
        pass
        if ( unique_day ( date , possible_birthdays ) == true ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
        new_month = ( )
        counter = 0
    return True
    for n in possible_birthdays [ 0 ] :
        pass
        if ( month == possible_birthday [ i ] [ 0 ] ) :
            pass
            if ( counter == 0 ) :
                return False
            else :
                return True
            pass
        pass
    pass
","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True






def contains_unique_day(month, possible_birthdays):
    possible_days = ()
    for x in possible_birthdays:
        if (month in x):
            possible_days += (x[1],)
    for x in possible_days:
        contains = unique_day(x, possible_birthdays)
        if True:
            if (contains == False):
                continue
            else:
                return True
    return False
","{'unique_day': 'correct_2_107.py', 'unique_month': 'correct_2_107.py', 'contains_unique_day': 'correct_2_165.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f'}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def contains_unique_day ( month , possible_birthdays ) :
    n = ( )
    for ref_x in possible_birthdays :
        pass
        if ( month in ref_x ) :
            n += ( ref_x [ 1 ] , )
    for ref_x in n :
        ref_contains = unique_day ( ref_x , possible_birthdays )
        if True :
            pass
            if ( ref_contains == False ) :
                continue
            else :
                return True
            pass
        pass
    return False
",N/A,8.164,0.473,0.000,0.002,0.297,0.590,9.560,17,17,0.454
question_2,100,0,wrong_2_171.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    result = tuple ( filter ( ( lambda x : ( x [ 1 ] == day ) ) , possible_birthdays ) )
    if ( len ( result ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    result = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    if ( len ( result ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    months = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    result = tuple ( filter ( ( lambda y : unique_day ( y [ 1 ] , possible_birthdays ) ) , months ) )
    if ( len ( result ) == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    result = tuple ( filter ( ( lambda x : ( x [ 1 ] == day ) ) , possible_birthdays ) )
    if ( len ( result ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    result = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    if ( len ( result ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    months = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    result = tuple ( filter ( ( lambda y : unique_day ( y [ 1 ] , possible_birthdays ) ) , months ) )
    if ( len ( result ) == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    if ( len ( tuple ( filter ( ( lambda x : ( x [ 1 ] == day ) ) , possible_birthdays ) ) ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    if ( len ( tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) ) ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    specific_set = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    get_days = tuple ( map ( ( lambda x : x [ 1 ] ) , specific_set ) )
    ans = tuple ( map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , get_days ) )
    if ( True in ans ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_179.py', 'unique_month': 'correct_2_179.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    if ( len ( tuple ( filter ( ( lambda result : ( result [ 1 ] == day ) ) , possible_birthdays ) ) ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    if ( len ( tuple ( filter ( ( lambda result : ( result [ 0 ] == month ) ) , possible_birthdays ) ) ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    months = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    y = tuple ( map ( ( lambda x : x [ 1 ] ) , months ) )
    result = tuple ( map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , y ) )
    if ( True in result ) :
        return True
    else :
        return False
",N/A,0.843,0.063,0.000,0.000,0.120,0.303,1.357,17,17,0.414
question_2,100,0,wrong_2_231.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pd = p [ 1 ]
        if ( day == pd ) :
            result = ( result + ( day , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pm = p [ 0 ]
        if ( month == pm ) :
            result = ( result + ( month , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pd = p [ 1 ]
        if ( day == pd ) :
            result = ( result + ( day , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pm = p [ 0 ]
        if ( month == pm ) :
            result = ( result + ( month , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    unique = ( )
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            unique = ( unique + ( day , ) )
    if ( len ( unique ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    unique = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            unique = ( unique + ( month , ) )
    if ( len ( unique ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_062.py', 'unique_month': 'correct_2_062.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( day == p [ 1 ] ) :
            result = ( result + ( day , ) )
    if ( len ( result ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( month , ) )
    if ( len ( result ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.504,0.361,0.000,0.000,0.273,0.740,1.907,17,17,0.605
question_2,100,0,wrong_2_371.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    month_tup = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            month_tup = ( month_tup + possible_birthdays [ i ] )
    return unique_day ( day , month_tup )


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    month_tup = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            month_tup = ( month_tup + possible_birthdays [ i ] )
    return unique_day ( day , month_tup )


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    contains = ( )
    for date in possible_birthdays :
        if ( ( month in date ) and unique_day ( date [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_221.py', 'unique_month': 'correct_2_221.py', 'contains_unique_day': 'correct_2_047.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    month_tup = ( )
    for ref_date in possible_birthdays :
        if ( ( month in ref_date ) and unique_day ( ref_date [ 1 ] , possible_birthdays ) ) :
            return True
    return False
",N/A,0.500,0.203,0.000,0.000,0.241,0.298,1.267,17,17,0.170
question_2,100,0,wrong_2_135.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.495,N/A,N/A,N/A
question_2,100,0,wrong_2_119.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.516,N/A,N/A,N/A
question_2,100,0,wrong_2_361.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( month == i [ 1 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( month == i [ 1 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    b = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            b += unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays )
    if ( b == 0 ) :
        return False
    else :
        return True


","{'unique_day': 'correct_2_170.py', 'unique_month': 'correct_2_170.py', 'contains_unique_day': 'correct_2_291.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    occur = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            occur += unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays )
    if ( occur == 0 ) :
        return False
    else :
        return True
",N/A,0.501,0.555,0.000,0.000,0.252,0.502,1.838,17,17,0.188
question_2,100,0,wrong_2_333.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_285.py', 'unique_month': 'correct_2_285.py', 'contains_unique_day': 'correct_2_199.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.501,0.245,0.000,0.000,0.215,0.057,1.042,17,17,0.011
question_2,100,0,wrong_2_316.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            months = ( months + ( i , ) )
        else :
            continue
    for i in months :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            months = ( months + ( i , ) )
        else :
            continue
    for i in months :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            months = ( months + ( i , ) )
        else :
            continue
    for i in months :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_285.py', 'unique_month': 'correct_2_285.py', 'contains_unique_day': 'correct_2_216.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            months = ( months + ( i , ) )
        else :
            continue
    for i in months :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            continue
    return False
",N/A,0.499,0.198,0.000,0.000,0.268,0.151,1.145,17,17,0.045
question_2,100,0,wrong_2_109.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.513,N/A,N/A,N/A
question_2,100,0,wrong_2_381.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( day == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_110.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.497,0.289,0.000,0.000,0.187,0.262,1.256,17,17,1.087
question_2,100,0,wrong_2_042.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    days = ( )
    for birthdays in possible_birthdays :
        days += ( birthdays [ 1 ] , )
    a = 0
    for dates in days :
        if ( day == dates ) :
            a += 1
    if ( a != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    months = ( )
    for birthdays in possible_birthdays :
        months += ( birthdays [ 0 ] , )
    a = 0
    for dates in months :
        if ( month == dates ) :
            a += 1
    if ( a != 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for birthdays in possible_birthdays :
        days += ( birthdays [ 1 ] , )
    a = 0
    for dates in days :
        if ( day == dates ) :
            a += 1
    if ( a != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    months = ( )
    for birthdays in possible_birthdays :
        months += ( birthdays [ 0 ] , )
    a = 0
    for dates in months :
        if ( month == dates ) :
            a += 1
    if ( a != 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for birthdays in possible_birthdays :
        days += ( birthdays [ 1 ] , )
    a = 0
    for dates in days :
        if ( day == dates ) :
            a += 1
    if ( a != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    months = ( )
    for birthdays in possible_birthdays :
        months += ( birthdays [ 0 ] , )
    a = 0
    for dates in months :
        if ( month == dates ) :
            a += 1
    if ( a != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_049.py', 'unique_month': 'correct_2_049.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for birthdays in possible_birthdays :
        days += ( birthdays [ 1 ] , )
    a = 0
    for dates in days :
        if ( day == dates ) :
            a += 1
    if ( a != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    months = ( )
    for birthdays in possible_birthdays :
        months += ( birthdays [ 0 ] , )
    a = 0
    for dates in months :
        if ( month == dates ) :
            a += 1
    if ( a != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.503,0.043,0.000,0.000,0.435,0.133,1.140,17,17,0.348
question_2,100,0,wrong_2_276.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return Flase
def unique_month ( month , possible_birthdays ) :
    only_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            only_month = ( only_month + ( i , ) )
    if ( len ( only_month ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return Flase
def unique_month ( month , possible_birthdays ) :
    only_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            only_month = ( only_month + ( i , ) )
    if ( len ( only_month ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            tup += ( i [ 1 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    data = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            data += ( birthday , )
    if ( len ( data ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_042.py', 'unique_month': 'correct_2_246.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    only_date = ( )
    for i in possible_birthdays :
        if ( date in i ) :
            only_date = ( only_date + ( i , ) )
    if ( len ( only_date ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    only_month = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            only_month = ( only_month + ( i , ) )
    if ( len ( only_month ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.500,0.752,0.000,0.000,0.238,0.270,1.787,17,17,0.446
question_2,100,0,wrong_2_362.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    b = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            b += unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays )
    if ( b == 0 ) :
        return False
    else :
        return True


","{'unique_day': 'correct_2_170.py', 'unique_month': 'correct_2_170.py', 'contains_unique_day': 'correct_2_291.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    occur = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            occur += 1
    if ( occur == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    occur = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            occur += unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays )
    if ( occur == 0 ) :
        return False
    else :
        return True
",N/A,0.500,0.542,0.000,0.000,0.267,0.500,1.833,17,17,0.177
question_2,100,0,wrong_2_178.py,fail_exception,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            if ( counter >= 1 ) :
                return False
            else :
                counter += 1
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if ( counter >= 1 ) :
                return False
            else :
                counter += 1
    return True
def contains_unique_day ( month , possible_birthdays ) :
    filtered = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    tup1 = tuple ( filter ( ( lambda x : ( x [ 0 ] != month ) ) , possible_birthdays ) )
    tup2 = tuple ( map ( ( lambda x : x [ 1 ] ) , tup1 ) )
    def unique ( tup ) :
        output = ( )
        for i in tup :
            if ( i not in output ) :
                output += ( i , )
        return output
    dates = unique ( tup2 )
    for i in filtered :
        if ( i [ 1 ] not in dates ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            if ( counter >= 1 ) :
                return False
            else :
                counter += 1
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if ( counter >= 1 ) :
                return False
            else :
                counter += 1
    return True
def contains_unique_day ( month , possible_birthdays ) :
    filtered = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    tup1 = tuple ( filter ( ( lambda x : ( x [ 0 ] != month ) ) , possible_birthdays ) )
    tup2 = tuple ( map ( ( lambda x : x [ 1 ] ) , tup1 ) )
    def unique ( tup ) :
        output = ( )
        for i in tup :
            if ( i not in output ) :
                output += ( i , )
        return output
    dates = unique ( tup2 )
    for i in filtered :
        if ( i [ 1 ] not in dates ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def contains_unique_day ( month , possible_birthdays ) :
    'Your solution here'
    b = False
    def month_tup ( month ) :
        a = ( )
        for birthday in possible_birthdays :
            if ( month == birthday [ 0 ] ) :
                a = ( a + ( birthday , ) )
        return a
    for birthday in month_tup ( month ) :
        if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            b = True
    return b


","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_077.py', 'contains_unique_day': 'correct_2_260.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}",N/A,N/A,0.504,0.035,0.000,0.000,0.120,0.635,1.320,N/A,N/A,N/A
question_2,100,0,wrong_2_423.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( date == birthdate [ 1 ] ) :
            counter += 1
    if ( ( counter > 1 ) or ( counter == 0 ) ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( date == birthdate [ 1 ] ) :
            counter += 1
    if ( ( counter > 1 ) or ( counter == 0 ) ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( day == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b >= 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_110.py', 'unique_month': 'correct_2_110.py', 'contains_unique_day': 'correct_2_286.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( date == birthdate [ 1 ] ) :
            counter += 1
    if ( ( counter > 1 ) or ( counter == 0 ) ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False
",N/A,0.501,0.614,0.000,0.000,0.293,0.197,1.637,17,17,0.009
question_2,100,0,wrong_2_389.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( day == item [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count >= 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( motnh == item [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count >= 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( day == item [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count >= 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( motnh == item [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count >= 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_285.py', 'unique_month': 'correct_2_285.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( day == item [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for item in possible_birthdays :
        if ( month == item [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.505,0.255,0.000,0.000,0.242,0.650,1.679,17,17,0.514
question_2,100,0,wrong_2_175.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.496,N/A,N/A,N/A
question_2,100,0,wrong_2_102.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return count
    if ( count == 1 ) :
        return True
    return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return count
    if ( count == 1 ) :
        return True
    return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_205.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.498,0.142,0.000,0.000,0.171,0.187,1.019,17,17,1.109
question_2,100,0,wrong_2_160.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.495,N/A,N/A,N/A
question_2,100,0,wrong_2_365.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_245.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.498,0.234,0.000,0.000,0.179,0.255,1.188,17,17,1.042
question_2,100,0,wrong_2_101.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return count
    if ( count == 1 ) :
        return True
    return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return count
    if ( count == 1 ) :
        return True
    return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_201.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.502,0.151,0.000,0.000,0.175,0.186,1.037,17,17,1.109
question_2,100,0,wrong_2_241.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    count = 0
    for ele in days :
        if ( ele == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    count = 0
    for ele in days :
        if ( ele == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    count = 0
    for ele in days :
        if ( ele == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


",{'unique_day': 'correct_2_151.py'},{'unique_day': ''},"def unique_day ( day , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        days += ( i [ 1 ] , )
    count = 0
    for ele in days :
        if ( ele == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
",N/A,0.495,0.012,0.000,0.000,0.286,0.019,0.823,17,17,0.023
question_2,100,0,wrong_2_157.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    date = ( )
    for mon in possible_birthdays :
        if ( month == mon [ 0 ] ) :
            date += ( mon , )
        else :
            date = date
    days = ( )
    for day in date :
        days += ( day [ 1 ] , )
    y = ( )
    for x in days :
        if ( unique_day ( x , possible_birthdays ) == True ) :
            y += ( x , )
        else :
            y = y
    if ( y == ( ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    date = ( )
    for mon in possible_birthdays :
        if ( month == mon [ 0 ] ) :
            date += ( mon , )
        else :
            date = date
    days = ( )
    for day in date :
        days += ( day [ 1 ] , )
    y = ( )
    for x in days :
        if ( unique_day ( x , possible_birthdays ) == True ) :
            y += ( x , )
        else :
            y = y
    if ( y == ( ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    date = ( )
    for mon in possible_birthdays :
        if ( month == mon [ 0 ] ) :
            date += ( mon , )
        else :
            date = date
    days = ( )
    for day in date :
        days += ( day [ 1 ] , )
    y = ( )
    for x in days :
        if ( unique_day ( x , possible_birthdays ) == True ) :
            y += ( x , )
        else :
            y = y
    if ( y == ( ) ) :
        return False
    else :
        return True


","{'unique_day': 'correct_2_099.py', 'unique_month': 'correct_2_099.py', 'contains_unique_day': 'correct_2_099.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for ref_i in possible_birthdays :
        if ( ref_i [ 1 ] == date ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    date = ( )
    for mon in possible_birthdays :
        if ( month == mon [ 0 ] ) :
            date += ( mon , )
        else :
            date = date
    days = ( )
    for day in date :
        days += ( day [ 1 ] , )
    y = ( )
    for x in days :
        if ( unique_day ( x , possible_birthdays ) == True ) :
            y += ( x , )
        else :
            y = y
    if ( y == ( ) ) :
        return False
    else :
        return True
",N/A,0.500,0.217,0.000,0.000,0.362,0.179,1.289,17,17,0.021
question_2,100,0,wrong_2_407.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter <= 1 )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp += ( i , )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter <= 1 )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp += ( i , )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_288.py', 'unique_month': 'correct_2_088.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp += ( i , )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.499,0.516,0.000,0.000,0.259,0.174,1.472,17,17,0.020
question_2,100,0,wrong_2_037.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            tup += ( i [ 1 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i [ 0 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            tup += ( date , )
    for bday in tup :
        if unique_day ( bday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            tup += ( i [ 1 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i [ 0 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            tup += ( date , )
    for bday in tup :
        if unique_day ( bday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            tup += ( i [ 1 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i [ 0 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            tup += ( date , )
    for bday in tup :
        if unique_day ( bday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_042.py', 'unique_month': 'correct_2_042.py', 'contains_unique_day': 'correct_2_042.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            tup += ( i [ 1 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i [ 0 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            tup += ( date , )
    for bday in tup :
        if unique_day ( bday [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.500,0.592,0.000,0.000,0.220,0.067,1.407,17,17,0.009
question_2,100,0,wrong_2_161.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.518,N/A,N/A,N/A
question_2,100,0,wrong_2_073.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    no_of_days = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            no_of_days += 1
    if ( no_of_days != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    no_of_months = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            no_of_months += 1
    if ( no_of_months != 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays_with_month = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            birthdays_with_month += ( i [ 1 ] , )
    counter = 0
    for i in birthdays_with_month :
        if ( unique_day ( i , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    no_of_days = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            no_of_days += 1
    if ( no_of_days != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    no_of_months = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            no_of_months += 1
    if ( no_of_months != 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays_with_month = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            birthdays_with_month += ( i [ 1 ] , )
    counter = 0
    for i in birthdays_with_month :
        if ( unique_day ( i , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for possible_dates in possible_birthdays :
        if ( possible_dates [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
    new_day = ''
    counter = 0
    for n in range ( len ( new_possible_birthdays ) ) :
        new_day = new_possible_birthdays [ n ] [ 1 ]
        if ( unique_day ( new_day , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 0 ) :
        return False
    else :
        return True


","{'unique_day': 'correct_2_217.py', 'unique_month': 'correct_2_095.py', 'contains_unique_day': 'correct_2_241.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    no_of_days = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            no_of_days += 1
    if ( no_of_days == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    no_of_months = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            no_of_months += 1
    if ( no_of_months != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    birthdays_with_month = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            birthdays_with_month += ( possible_birthdays [ i ] , )
    counter = 0
    for ref_n in range ( len ( birthdays_with_month ) ) :
        ref_new_day = birthdays_with_month [ ref_n ] [ 1 ]
        if ( unique_day ( ref_new_day , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 0 ) :
        return False
    else :
        return True
",N/A,0.503,0.311,0.000,0.000,0.307,0.933,2.087,17,17,0.254
question_2,100,0,wrong_2_202.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.506,0.853,0.000,0.000,0.259,0.289,1.939,17,17,0.028
question_2,100,0,wrong_2_305.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    specific_set = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    get_days = tuple ( map ( ( lambda x : x [ 1 ] ) , specific_set ) )
    ans = tuple ( map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , get_days ) )
    if ( True in ans ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_205.py', 'unique_month': 'correct_2_103.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
    if ( True in ref_ans ) :
        return True
    else :
        return False
",N/A,0.506,0.158,0.000,0.000,0.183,0.416,1.288,12,17,N/A
question_2,100,0,wrong_2_122.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    if ( month == 'May' ) :
        return True
    if ( month == 'June' ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for i in possible_birthdays :
        return True
        if ( month in i ) :
            pass
            if ( month == 'June' ) :
                return True
            pass
        return False
    pass
","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month in i ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_017.py', 'unique_month': 'correct_2_017.py', 'contains_unique_day': 'correct_2_090.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for i in possible_birthdays :
        if ( month in i ) :
            pass
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
            pass
    return False
",N/A,3.795,1.102,0.000,0.002,0.269,0.152,5.350,17,17,0.283
question_2,100,0,wrong_2_229.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.625,N/A,N/A,N/A
question_2,100,0,wrong_2_317.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            months = ( months + ( i , ) )
        else :
            continue
    for i in months :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            months = ( months + ( i , ) )
        else :
            continue
    for i in months :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            months = ( months + ( i , ) )
        else :
            continue
    for i in months :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_216.py', 'unique_month': 'correct_2_285.py', 'contains_unique_day': 'correct_2_216.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    months = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            months = ( months + ( i , ) )
        else :
            continue
    for i in months :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
        else :
            continue
    return False
",N/A,0.739,0.189,0.000,0.000,0.308,0.150,1.413,17,17,0.036
question_2,100,0,wrong_2_282.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( date ) == 1 )
def unique_month ( month , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( month ) == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    b = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            a += ( i , )
    for i in a :
        b = ( b or unique_day ( i [ 1 ] , possible_birthdays ) )
    return b


","def unique_day ( date , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( date ) == 1 )
def unique_month ( month , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( month ) == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    b = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            a += ( i , )
    for i in a :
        b = ( b or unique_day ( i [ 1 ] , possible_birthdays ) )
    return b


","def unique_day ( day , possible_birthdays ) :
    all_days = ( )
    for i in possible_birthdays :
        all_days += ( i [ 1 ] , )
    return ( all_days . count ( day ) == 1 )




def unique_month ( month , possible_birthdays ) :
    all_months = ( )
    for i in possible_birthdays :
        all_months += ( i [ 0 ] , )
    return ( all_months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    dayi = ( )
    result = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            dayi += ( i [ 1 ] , )
    for j in dayi :
        result = ( result or unique_day ( j , possible_birthdays ) )
    return result


","{'unique_day': 'correct_2_001.py', 'unique_month': 'correct_2_001.py', 'contains_unique_day': 'correct_2_123.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( date ) == 1 )


def unique_month ( month , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 0 ] , )
    return ( a . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    b = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            a += ( i [ 1 ] , )
    for ref_j in a :
        b = ( b or unique_day ( ref_j , possible_birthdays ) )
    return b
",N/A,0.522,0.026,0.000,0.000,0.268,0.301,1.141,17,17,0.092
question_2,100,0,wrong_2_133.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    unique_day_counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            unique_day_counter += 1
    if ( unique_day_counter != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    unique_month_counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            unique_month_counter += 1
    if ( unique_month_counter != 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    unique_day_counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            unique_day_counter += 1
    if ( unique_day_counter != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    unique_month_counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            unique_month_counter += 1
    if ( unique_month_counter != 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    unique_day_counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            unique_day_counter += 1
    if ( unique_day_counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    unique_month_counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            unique_month_counter += 1
    if ( unique_month_counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_078.py', 'unique_month': 'correct_2_078.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    unique_day_counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            unique_day_counter += 1
    if ( unique_day_counter != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    unique_month_counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            unique_month_counter += 1
    if ( unique_month_counter != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.498,0.142,0.000,0.000,0.222,0.123,1.006,17,17,0.457
question_2,100,0,wrong_2_027.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    birthday_with_day = list ( filter ( ( lambda birthday : ( birthday [ 1 ] == day ) ) , possible_birthdays ) )
    if ( len ( birthday_with_day ) >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    birthday_with_month = list ( filter ( ( lambda birthday : ( birthday [ 0 ] == month ) ) , possible_birthdays ) )
    if ( len ( birthday_with_month ) >= 2 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthday_with_month = list ( filter ( ( lambda birthday : ( birthday [ 0 ] == month ) ) , possible_birthdays ) )
    birthday_day = list ( map ( ( lambda birthday : birthday [ 1 ] ) , birthday_with_month ) )
    unique_day_list = list ( filter ( ( lambda day : unique_day ( day , possible_birthdays ) ) , birthday_day ) )
    return ( len ( unique_day_list ) > 0 )


","def unique_day ( day , possible_birthdays ) :
    birthday_with_day = list ( filter ( ( lambda birthday : ( birthday [ 1 ] == day ) ) , possible_birthdays ) )
    if ( len ( birthday_with_day ) >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    birthday_with_month = list ( filter ( ( lambda birthday : ( birthday [ 0 ] == month ) ) , possible_birthdays ) )
    if ( len ( birthday_with_month ) >= 2 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    birthday_with_month = list ( filter ( ( lambda birthday : ( birthday [ 0 ] == month ) ) , possible_birthdays ) )
    birthday_day = list ( map ( ( lambda birthday : birthday [ 1 ] ) , birthday_with_month ) )
    unique_day_list = list ( filter ( ( lambda day : unique_day ( day , possible_birthdays ) ) , birthday_day ) )
    return ( len ( unique_day_list ) > 0 )


","def unique_day ( day , possible_birthdays ) :
    count = tuple ( filter ( ( lambda x : ( x [ 1 ] == day ) ) , possible_birthdays ) )
    if ( len ( count ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    count = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    if ( len ( count ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    days_in_month = map ( ( lambda x : ( x [ 1 ] if ( x [ 0 ] == month ) else ( ) ) ) , possible_birthdays )
    check = map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , days_in_month )
    return ( True in check )


","{'unique_day': 'correct_2_141.py', 'unique_month': 'correct_2_141.py', 'contains_unique_day': 'correct_2_189.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    birthday_with_day = list ( filter ( ( lambda birthday : ( birthday [ 1 ] == day ) ) , possible_birthdays ) )
    if ( len ( birthday_with_day ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    birthday_with_month = list ( filter ( ( lambda birthday : ( birthday [ 0 ] == month ) ) , possible_birthdays ) )
    if ( len ( birthday_with_month ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    birthday_with_month = list ( filter ( ( lambda birthday : ( birthday [ 0 ] == month ) ) , possible_birthdays ) )
    birthday_day = list ( map ( ( lambda birthday : birthday [ 1 ] ) , birthday_with_month ) )
    unique_day_list = list ( filter ( ( lambda day : unique_day ( day , possible_birthdays ) ) , birthday_day ) )
    return ( len ( unique_day_list ) > 0 )
",N/A,0.501,0.085,0.000,0.000,0.123,0.476,1.215,17,17,0.033
question_2,100,0,wrong_2_189.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.498,N/A,N/A,N/A
question_2,100,0,wrong_2_118.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.494,N/A,N/A,N/A
question_2,100,0,wrong_2_250.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    value = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            value += 1
    if ( ( value > 1 ) or ( value == 0 ) ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    value = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            value += 1
    if ( ( value > 1 ) or ( value == 0 ) ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    value = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            value += 1
    if ( ( value > 1 ) or ( value == 0 ) ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_168.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    value = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            value += 1
    if ( ( value > 1 ) or ( value == 0 ) ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.498,0.395,0.000,0.000,0.183,0.185,1.283,17,17,0.845
question_2,100,0,wrong_2_058.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    total_day = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            total_day += 1
    if ( total_day == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    total_month = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            total_month += 1
    if ( total_month == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    total_day = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            total_day += 1
    if ( total_day == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    total_month = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            total_month += 1
    if ( total_month == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    total_day = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            total_day += 1
    if ( total_day == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    total_month = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            total_month += 1
    if ( total_month == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_058.py', 'unique_month': 'correct_2_058.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    total_day = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            total_day += 1
    if ( total_day == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    total_month = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            total_month += 1
    if ( total_month == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.498,0.335,0.000,0.000,0.182,0.119,1.158,17,17,0.457
question_2,100,0,wrong_2_013.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( day , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = 0
    for j in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ j ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_014.py', 'unique_month': 'correct_2_014.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,0.502,0.559,0.000,0.000,0.241,0.064,1.397,17,17,0.007
question_2,100,0,wrong_2_064.py,fail_other,1,1,"def unique_day ( day , possible_birthdays ) :
    unique = False
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            if unique :
                return False
            else :
                unique = True
    return True
def unique_month ( month , possible_birthdays ) :
    unique = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique :
                return False
            else :
                unique = True
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    unique = False
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            if unique :
                return False
            else :
                unique = True
    return True
def unique_month ( month , possible_birthdays ) :
    unique = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique :
                return False
            else :
                unique = True
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_077.py', 'contains_unique_day': 'correct_2_077.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            if unique :
                return False
            else :
                unique = 1
    return unique


def unique_month ( month , possible_birthdays ) :
    unique = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique :
                return False
            else :
                unique = 1
    return unique


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.505,0.104,0.000,0.000,0.208,0.483,1.323,11,17,N/A
question_2,100,0,wrong_2_207.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.503,0.930,0.000,0.000,0.254,0.291,2.010,17,17,0.045
question_2,100,0,wrong_2_030.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    tpl = ( )
    for i in possible_birthdays :
        tpl += ( i [ 1 ] , )
    if ( tpl . count ( date ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    tpl = ( )
    for i in possible_birthdays :
        tpl += ( i [ 1 ] , )
    if ( tpl . count ( date ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_233.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_b = [ ]
    for i in possible_birthdays :
        ref_b . append ( i [ 1 ] )
    if ( ref_b . count ( date ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.504,0.021,0.000,0.000,0.186,0.522,1.255,17,17,1.372
question_2,100,0,wrong_2_292.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    the_day = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            the_day += ( day , )
    return ( len ( the_day ) == 1 )
def unique_month ( month , possible_birthdays ) :
    the_month = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            the_month += ( month , )
    return ( len ( the_month ) == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    the_day = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            the_day += ( day , )
    return ( len ( the_day ) == 1 )
def unique_month ( month , possible_birthdays ) :
    the_month = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            the_month += ( month , )
    return ( len ( the_month ) == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    the_day = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            the_day += ( day , )
    return ( len ( the_day ) == 1 )




def unique_month ( month , possible_birthdays ) :
    the_month = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            the_month += ( month , )
    return ( len ( the_month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_195.py', 'unique_month': 'correct_2_195.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    the_day = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            the_day += ( day , )
    return ( len ( the_day ) == 1 )


def unique_month ( month , possible_birthdays ) :
    the_month = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            the_month += ( month , )
    return ( len ( the_month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.498,0.327,0.000,0.000,0.210,0.119,1.177,17,17,0.471
question_2,100,0,wrong_2_055.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list = [ x for x in possible_birthdays [ i ] [ 1 ] ]
        list = sorted ( list )
        if ( ( date == list [ i ] ) and ( date != list [ ( i + 1 ) ] ) and ( date != list [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list = [ x for x in possible_birthdays [ i ] [ 0 ] ]
        list = sorted ( list )
        if ( ( month == list [ i ] ) and ( month != list [ ( i + 1 ) ] ) and ( month != list [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
def contains_unique_day ( month , possible_birthdays ) :
    month_tuple = ( )
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            month_tuple = ( month_tuple + ( possible_birthdays [ i ] [ 1 ] , ) )
    for x in month_tuple :
        for i in range ( 0 , len ( possible_birthdays ) ) :
            if ( x == possible_birthdays [ i ] [ 1 ] ) :
                return False
            else :
                return True


","def unique_day ( date , possible_birthdays ) :
    pass
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list = [ x for x in possible_birthdays [ i ] [ 1 ] ]
        list = sorted ( list )
        if ( ( date == list [ i ] ) and ( date != list [ ( i + 1 ) ] ) and ( date != list [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
        pass
    pass


def unique_month ( month , possible_birthdays ) :
    pass
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list = [ x for x in possible_birthdays [ i ] [ 0 ] ]
        list = sorted ( list )
        if ( ( month == list [ i ] ) and ( month != list [ ( i + 1 ) ] ) and ( month != list [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
        pass
    pass


def contains_unique_day ( month , possible_birthdays ) :
    month_tuple = ( )
    for i in range ( 0 , len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            month_tuple = ( month_tuple + ( possible_birthdays [ i ] [ 1 ] , ) )
        pass
    pass
    if True :
        pass
        for i in range ( 0 , len ( possible_birthdays ) ) :
            pass
            if ( x == possible_birthdays [ i ] [ 1 ] ) :
                return False
            else :
                return True
            pass
        pass
    else :
        pass
    pass
","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 0 ] == month ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )






def contains_unique_day(month, possible_birthdays):
    x = ()
    for k in range(len(possible_birthdays)):
        if (possible_birthdays[k][0] == month):
            x = (x + (possible_birthdays[k],))
    if True:
        for l in range(len(x)):
            if unique_day(x[l][1], possible_birthdays):
                return True
            else:
                continue
        return False
    else:
        pass
","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_229.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,B2.l'}","def unique_day ( date , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        if ( ref_b [ 1 ] == date ) :
            ref_s = ( ref_s + 1 )
        else :
            continue
        pass
    return ( ref_s == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        if ( ref_b [ 0 ] == month ) :
            ref_s = ( ref_s + 1 )
        else :
            continue
        pass
    return ( ref_s == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    month_tuple = ( )
    for ref_k in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ ref_k ] [ 0 ] == month ) :
            month_tuple = ( month_tuple + ( possible_birthdays [ ref_k ] , ) )
        pass
    pass
    if True :
        pass
        for ref_l in range ( len ( month_tuple ) ) :
            pass
            if unique_day ( month_tuple [ ref_l ] [ 1 ] , possible_birthdays ) :
                return True
            else :
                continue
            pass
        return False
    else :
        pass
    pass
",N/A,6.846,0.438,0.000,0.003,0.262,1.174,8.761,17,17,0.694
question_2,100,0,wrong_2_364.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_245.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.839,0.228,0.000,0.000,0.184,0.244,1.518,17,17,1.042
question_2,100,0,wrong_2_245.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + ( i , ) )
    for a in x :
        if unique_day ( a [ 1 ] , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( day , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    x = 1
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x > 2 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + ( i , ) )
    for a in x :
        if unique_day ( a [ 1 ] , possible_birthdays ) :
            return True
        else :
            return False


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    j = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            j = ( j + 1 )
        else :
            j = j
    if ( j == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            days += ( birthday [ 1 ] , )
    for day in days :
        if ( unique_day ( day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( day , possible_birthdays )
    return False


","{'unique_day': 'correct_2_271.py', 'unique_month': 'correct_2_123.py', 'contains_unique_day': 'correct_2_201.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            ref_result = ( ref_result + 1 )
        else :
            continue
    if ( ref_result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    x = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x = ( x + 1 )
        else :
            x = x
    if ( x == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            x += ( i [ 1 ] , )
    for ref_day in x :
        if ( unique_day ( ref_day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( ref_day , possible_birthdays )
    return False
",N/A,0.507,0.302,0.000,0.000,0.333,1.145,2.318,17,17,0.296
question_2,100,0,wrong_2_430.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    unique_num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            unique_num = ( unique_num + 1 )
        else :
            unique_num = ( unique_num + 0 )
    if ( unique_num > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    unique_num = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            unique_num = ( unique_num + 1 )
        else :
            unique_num = ( unique_num + 0 )
    if ( unique_num > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    days_in_month = ( )
    days_not_in_month = ( )
    unique_days = ( )
    for row in possible_birthdays :
        if ( row [ 0 ] == month ) :
            days_in_month = ( days_in_month + ( row [ 1 ] , ) )
        else :
            days_not_in_month = ( days_not_in_month + ( row [ 1 ] , ) )
    for row2 in days_in_month :
        if ( row2 in days_not_in_month ) :
            continue
        else :
            unique_days = ( unique_days + ( row2 , ) )
    if ( unique_days == ( ) ) :
        return False
    else :
        return True


","def unique_day ( day , possible_birthdays ) :
    unique_num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            unique_num = ( unique_num + 1 )
        else :
            unique_num = ( unique_num + 0 )
    if ( unique_num > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    unique_num = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            unique_num = ( unique_num + 1 )
        else :
            unique_num = ( unique_num + 0 )
    if ( unique_num > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    days_in_month = ( )
    days_not_in_month = ( )
    unique_days = ( )
    for row in possible_birthdays :
        if ( row [ 0 ] == month ) :
            days_in_month = ( days_in_month + ( row [ 1 ] , ) )
        else :
            days_not_in_month = ( days_not_in_month + ( row [ 1 ] , ) )
    for row2 in days_in_month :
        if ( row2 in days_not_in_month ) :
            continue
        else :
            unique_days = ( unique_days + ( row2 , ) )
    if ( unique_days == ( ) ) :
        return False
    else :
        return True


","def unique_day ( day , possible_birthdays ) :
    freq = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            freq = ( freq + 1 )
        else :
            continue
    if ( freq == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    freq = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            freq = ( freq + 1 )
        else :
            continue
    if ( freq == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    (data, outcome) = ((), ())
    for birthday in possible_birthdays:
        if (month == birthday[0]):
            data += (birthday,)
        else:
            pass
    for birthday in data:
        if (unique_day(birthday[1], possible_birthdays) == True):
            outcome += birthday
        else:
            continue
    if (outcome == ()):
        return False
    else:
        return unique_day(outcome[1], possible_birthdays)
","{'unique_day': 'correct_2_050.py', 'unique_month': 'correct_2_050.py', 'contains_unique_day': 'correct_2_246.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B2.l'}","def unique_day ( day , possible_birthdays ) :
    unique_num = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            unique_num = ( unique_num + 1 )
        else :
            unique_num = ( unique_num + 0 )
    if ( unique_num == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    unique_num = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            unique_num = ( unique_num + 1 )
        else :
            unique_num = ( unique_num + 0 )
    if ( unique_num == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    ( days_in_month , ref_outcome ) = ( ( ) , ( ) )
    for ref_birthday in possible_birthdays :
        if ( month == ref_birthday [ 0 ] ) :
            days_in_month += ( ref_birthday , )
        else :
            pass
    for ref_birthday in days_in_month :
        if ( unique_day ( ref_birthday [ 1 ] , possible_birthdays ) == True ) :
            ref_outcome += ref_birthday
        else :
            continue
    if ( ref_outcome == ( ) ) :
        return False
    else :
        return True
",N/A,0.579,0.329,0.000,0.000,0.400,1.257,2.602,17,17,0.340
question_2,100,0,wrong_2_213.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_243.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count = ( count + 1 )
    if ( count != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.519,0.185,0.000,0.000,0.182,0.338,1.247,17,17,1.094
question_2,100,0,wrong_2_025.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    checker = [ ]
    for bday in possible_birthdays :
        if ( ( day == bday [ 1 ] ) and ( day not in checker ) ) :
            checker . append ( day )
        elif ( ( day == bday [ 1 ] ) and ( day in checker ) ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    checker = [ ]
    for bday in possible_birthdays :
        if ( ( month == bday [ 0 ] ) and ( month not in checker ) ) :
            checker . append ( month )
        elif ( ( month == bday [ 0 ] ) and ( month in checker ) ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for bday in possible_birthdays :
        if ( bday [ 0 ] == month ) :
            if ( unique_day ( bday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    checker = [ ]
    for bday in possible_birthdays :
        if ( ( day == bday [ 1 ] ) and ( day not in checker ) ) :
            checker . append ( day )
        elif ( ( day == bday [ 1 ] ) and ( day in checker ) ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    checker = [ ]
    for bday in possible_birthdays :
        if ( ( month == bday [ 0 ] ) and ( month not in checker ) ) :
            checker . append ( month )
        elif ( ( month == bday [ 0 ] ) and ( month in checker ) ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for bday in possible_birthdays :
        if ( bday [ 0 ] == month ) :
            if ( unique_day ( bday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","

def unique_day(day, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (day == date[1]):
            counter += 1
        elif False:
            pass
    return (counter == 1)




def unique_month(month, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (month == date[0]):
            counter += 1
        elif False:
            pass
    return (counter == 1)


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
                break
    return False


","{'unique_day': 'correct_2_136.py', 'unique_month': 'correct_2_136.py', 'contains_unique_day': 'correct_2_050.py'}","{'unique_day': 'B2.j', 'unique_month': 'B2.j', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_counter = 0
    for ref_date in possible_birthdays :
        if ( day == ref_date [ 1 ] ) :
            ref_counter += 1
        elif False :
            pass
    return ( ref_counter == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_counter = 0
    for ref_date in possible_birthdays :
        if ( month == ref_date [ 0 ] ) :
            ref_counter += 1
        elif False :
            pass
    return ( ref_counter == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for bday in possible_birthdays :
        if ( bday [ 0 ] == month ) :
            if ( unique_day ( bday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False
",N/A,0.670,0.148,0.000,0.000,0.215,0.828,1.890,17,17,0.535
question_2,100,0,wrong_2_106.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
        return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
        return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_107.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.499,0.286,0.000,0.000,0.152,0.400,1.358,17,17,1.130
question_2,100,0,wrong_2_092.py,fail_other,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
    return
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( month == dates [ 0 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    new_list = keep_month ( month , possible_birthdays )
    for i in new_list :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
    return
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( month == dates [ 0 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    new_list = keep_month ( month , possible_birthdays )
    for i in new_list :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
    return




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( month == dates [ 0 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    revised_list = keep_month ( month , possible_birthdays )
    for i in revised_list :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_073.py', 'unique_month': 'correct_2_073.py', 'contains_unique_day': 'correct_2_073.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( day == dates [ 1 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
    return


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for dates in possible_birthdays :
        if ( month == dates [ 0 ] ) :
            possible_birthdays = possible_birthdays [ 1 : ]
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    new_list = keep_month ( month , possible_birthdays )
    for i in new_list :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.505,0.363,0.000,0.000,0.192,0.059,1.145,12,17,N/A
question_2,100,0,wrong_2_432.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    new_tuple = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            new_tuple += ( i , )
        if ( len ( new_tuple ) > 1 ) :
            return False
        else :
            return unique_day ( new_tuple [ 0 ] [ 1 ] , possible_birthdays )


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == date ) :
            counter += 1
        pass
    pass
    if ( counter > 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            counter += 1
        pass
    pass
    if ( counter > 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    new_tuple = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            new_tuple += ( i , )
            if ( len ( new_tuple ) > 1 ) :
                return False
            return unique_day ( new_tuple [ 0 ] [ 1 ] , possible_birthdays )
        pass
    pass
","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    number = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
                number += 1
    return ( number > 0 )


","{'unique_day': 'correct_2_217.py', 'unique_month': 'correct_2_161.py', 'contains_unique_day': 'correct_2_180.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == date ) :
            counter += 1
        pass
    pass
    if ( counter == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            counter += 1
        pass
    pass
    if ( counter == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    ref_number = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
                ref_number += 1
        pass
    return ( ref_number > 0 )
",N/A,3.945,1.217,0.000,0.002,0.316,0.772,6.282,17,17,0.398
question_2,100,0,wrong_2_188.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.499,N/A,N/A,N/A
question_2,100,0,wrong_2_039.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            tup += ( i [ 1 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    elif ( len ( tup ) > 1 ) :
        return False
    elif ( len ( tup ) == 0 ) :
        return None
def unique_month ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i [ 0 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            tup += ( date , )
    for bday in tup :
        if unique_day ( bday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == day ) :
            tup += ( i [ 1 ] , )
        pass
    pass
    if ( len ( tup ) == 1 ) :
        return True
        if False :
            pass
        return False
    else :
        return None
    pass


def unique_month ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            tup += ( i [ 0 ] , )
        pass
    pass
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for date in possible_birthdays :
        pass
        if ( date [ 0 ] == month ) :
            tup += ( date , )
        pass
    pass
    for bday in tup :
        pass
        if unique_day ( bday [ 1 ] , possible_birthdays ) :
            return True
        pass
    return False
","

def unique_day(day, possible_birthdays):
    count = 0
    for x in possible_birthdays:
        if (x[1] == day):
            count = (count + 1)
    if (count == 1):
        if False:
            pass
        return True
    else:
        return False


def unique_month ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i [ 0 ] , )
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            tup += ( date , )
    for bday in tup :
        if unique_day ( bday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_222.py', 'unique_month': 'correct_2_042.py', 'contains_unique_day': 'correct_2_042.py'}","{'unique_day': 'B1.g', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    tup = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == day ) :
            tup = ( tup + 1 )
        pass
    pass
    if ( tup == 1 ) :
        if False :
            pass
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            tup += ( i [ 0 ] , )
        pass
    pass
    if ( len ( tup ) == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for date in possible_birthdays :
        pass
        if ( date [ 0 ] == month ) :
            tup += ( date , )
        pass
    pass
    for bday in tup :
        pass
        if unique_day ( bday [ 1 ] , possible_birthdays ) :
            return True
        pass
    return False
",N/A,4.947,0.442,0.000,0.002,0.338,0.410,6.169,17,17,0.298
question_2,100,0,wrong_2_043.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day in birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday_month in possible_birthdays :
        if ( month in birthday_month [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    month_tuple = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            month_tuple += ( birthday , )
        else :
            continue
    for day in month_tuple :
        if ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day in birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday_month in possible_birthdays :
        if ( month in birthday_month [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    month_tuple = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            month_tuple += ( birthday , )
        else :
            continue
    for day in month_tuple :
        if ( unique_day ( day [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for x in possible_birthdays :
        if ( month == x [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x += ( i , )
        else :
            continue
    for i in x :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_175.py', 'unique_month': 'correct_2_100.py', 'contains_unique_day': 'correct_2_152.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday_month in possible_birthdays :
        if ( month in birthday_month [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    month_tuple = ( )
    for ref_i in possible_birthdays :
        if ( ref_i [ 0 ] == month ) :
            month_tuple += ( ref_i , )
        else :
            continue
    for ref_i in month_tuple :
        if ( unique_day ( ref_i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.601,0.505,0.000,0.000,0.294,0.484,1.914,17,17,0.093
question_2,100,0,wrong_2_433.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    new_tuple = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            new_tuple += ( i , )
    print ( new_tuple )
    for i in range ( 0 , len ( new_tuple ) ) :
        if unique_day ( new_tuple [ i ] [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    new_tuple = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            new_tuple += ( i , )
    print ( new_tuple )
    for i in range ( 0 , len ( new_tuple ) ) :
        if unique_day ( new_tuple [ i ] [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_217.py', 'unique_month': 'correct_2_161.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    new_tuple = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            new_tuple += ( i , )
    for i in new_tuple :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.502,0.589,0.000,0.000,0.269,0.576,1.962,17,17,0.122
question_2,100,0,wrong_2_158.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    date = ( )
    for mon in possible_birthdays :
        if ( month == mon [ 0 ] ) :
            date += ( mon , )
        else :
            date = date
    days = ( )
    for day in date :
        days += ( day [ 1 ] , )
    y = ( )
    for x in days :
        if ( unique_day ( x , possible_birthdays ) == True ) :
            y += ( x , )
        else :
            y = y
    if ( y == ( ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    date = ( )
    for mon in possible_birthdays :
        if ( month == mon [ 0 ] ) :
            date += ( mon , )
        else :
            date = date
    days = ( )
    for day in date :
        days += ( day [ 1 ] , )
    y = ( )
    for x in days :
        if ( unique_day ( x , possible_birthdays ) == True ) :
            y += ( x , )
        else :
            y = y
    if ( y == ( ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    date = ( )
    for mon in possible_birthdays :
        if ( month == mon [ 0 ] ) :
            date += ( mon , )
        else :
            date = date
    days = ( )
    for day in date :
        days += ( day [ 1 ] , )
    y = ( )
    for x in days :
        if ( unique_day ( x , possible_birthdays ) == True ) :
            y += ( x , )
        else :
            y = y
    if ( y == ( ) ) :
        return False
    else :
        return True


","{'unique_day': 'correct_2_099.py', 'unique_month': 'correct_2_099.py', 'contains_unique_day': 'correct_2_099.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for ref_i in possible_birthdays :
        if ( ref_i [ 1 ] == date ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    date = ( )
    for mon in possible_birthdays :
        if ( month == mon [ 0 ] ) :
            date += ( mon , )
        else :
            date = date
    days = ( )
    for day in date :
        days += ( day [ 1 ] , )
    y = ( )
    for x in days :
        if ( unique_day ( x , possible_birthdays ) == True ) :
            y += ( x , )
        else :
            y = y
    if ( y == ( ) ) :
        return False
    else :
        return True
",N/A,0.508,0.182,0.000,0.000,0.345,0.178,1.248,17,17,0.021
question_2,100,0,wrong_2_258.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    if ( date in possible_birthdays [ 1 ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( date in possible_birthdays [ 1 ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( ( not unique_day ) and ( not unique_month ) ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    specific_set = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    get_days = tuple ( map ( ( lambda x : x [ 1 ] ) , specific_set ) )
    ans = tuple ( map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , get_days ) )
    if ( True in ans ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_103.py', 'unique_month': 'correct_2_103.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
    if ( True in ref_ans ) :
        return True
    else :
        return False
",N/A,0.499,0.026,0.000,0.000,0.078,0.553,1.176,0,17,N/A
question_2,100,0,wrong_2_142.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.498,N/A,N/A,N/A
question_2,100,0,wrong_2_026.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    checker = [ ]
    for bday in possible_birthdays :
        if ( ( day == bday [ 1 ] ) and ( day not in checker ) ) :
            checker . append ( day )
        elif ( ( day == bday [ 1 ] ) and ( day in checker ) ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    checker = [ ]
    for bday in possible_birthdays :
        if ( ( month == bday [ 0 ] ) and ( month not in checker ) ) :
            checker . append ( month )
        elif ( ( month == bday [ 0 ] ) and ( month in checker ) ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for bday in possible_birthdays :
        if ( bday [ 0 ] == month ) :
            if ( unique_day ( bday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    checker = [ ]
    for bday in possible_birthdays :
        if ( ( day == bday [ 1 ] ) and ( day not in checker ) ) :
            checker . append ( day )
        elif ( ( day == bday [ 1 ] ) and ( day in checker ) ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    checker = [ ]
    for bday in possible_birthdays :
        if ( ( month == bday [ 0 ] ) and ( month not in checker ) ) :
            checker . append ( month )
        elif ( ( month == bday [ 0 ] ) and ( month in checker ) ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for bday in possible_birthdays :
        if ( bday [ 0 ] == month ) :
            if ( unique_day ( bday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","

def unique_day(day, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (day == date[1]):
            counter += 1
        elif False:
            pass
    return (counter == 1)




def unique_month(month, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (month == date[0]):
            counter += 1
        elif False:
            pass
    return (counter == 1)


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
                break
    return False


","{'unique_day': 'correct_2_136.py', 'unique_month': 'correct_2_136.py', 'contains_unique_day': 'correct_2_050.py'}","{'unique_day': 'B2.j', 'unique_month': 'B2.j', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_counter = 0
    for ref_date in possible_birthdays :
        if ( day == ref_date [ 1 ] ) :
            ref_counter += 1
        elif False :
            pass
    return ( ref_counter == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_counter = 0
    for ref_date in possible_birthdays :
        if ( month == ref_date [ 0 ] ) :
            ref_counter += 1
        elif False :
            pass
    return ( ref_counter == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for bday in possible_birthdays :
        if ( bday [ 0 ] == month ) :
            if ( unique_day ( bday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False
",N/A,0.665,0.130,0.000,0.000,0.223,0.825,1.873,17,17,0.535
question_2,100,0,wrong_2_398.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( day == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b >= 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_110.py', 'unique_month': 'correct_2_110.py', 'contains_unique_day': 'correct_2_286.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False
",N/A,0.504,0.535,0.000,0.000,0.283,0.258,1.612,17,17,0.018
question_2,100,0,wrong_2_049.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    for x in range ( len ( 1 , ( possible_birthdays + 1 ) ) ) :
        for i in possible_birthdays [ x ] [ 1 ] :
            if ( i == possible_birthdays [ 0 ] [ 1 ] ) :
                return False
            else :
                return ( i == unique_day ( date , possible_birthdays [ 1 : ] [ 1 ] ) )
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    pass
    for x in range ( len ( 1 , ( possible_birthdays + 1 ) ) ) :
        pass
        if ( b [ 1 ] == day ) :
            pass
            if ( i == possible_birthdays [ 0 ] [ 1 ] ) :
                return False
            pass
        else :
            pass
        pass
    pass


def unique_month ( month , possible_birthdays ) :
    return


def contains_unique_day ( month , possible_birthdays ) :
    return
","

def unique_day(day, possible_birthdays):
    s = 0
    for b in possible_birthdays:
        if (b[1] == day):
            if True:
                s = (s + 1)
        else:
            continue
    return (s == 1)


def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_223.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': 'B1.f', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        pass
        if ( ref_b [ 1 ] == date ) :
            pass
            if True :
                ref_s = ( ref_s + 1 )
            pass
        else :
            continue
        pass
    return ( ref_s == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,3.507,0.040,0.000,0.001,0.154,0.366,4.093,17,17,1.500
question_2,100,0,wrong_2_288.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            conter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == month ) :
            conter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            conter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == month ) :
            conter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_099.py', 'unique_month': 'correct_2_099.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( date [ 0 ] == month ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.621,0.187,0.000,0.000,0.247,0.421,1.500,17,17,0.461
question_2,100,0,wrong_2_095.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return count
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_170.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.503,0.277,0.000,0.000,0.179,0.183,1.163,17,17,1.109
question_2,100,0,wrong_2_149.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
        if ( count > 1 ) :
            return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
        if ( count > 1 ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( day == birthday [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    return
","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_201.py', 'unique_month': 'correct_2_201.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( day == birthday [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,7.531,0.860,0.000,0.001,0.278,0.293,8.991,17,17,0.629
question_2,100,0,wrong_2_041.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    days = ( )
    for birthdays in possible_birthdays :
        days += ( birthdays [ 1 ] , )
    a = 0
    for dates in days :
        if ( day == dates ) :
            a += 1
    if ( a != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for birthdays in possible_birthdays :
        days += ( birthdays [ 1 ] , )
    a = 0
    for dates in days :
        if ( day == dates ) :
            a += 1
    if ( a != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for birthdays in possible_birthdays :
        days += ( birthdays [ 1 ] , )
    a = 0
    for dates in days :
        if ( day == dates ) :
            a += 1
    if ( a != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_049.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    days = ( )
    for birthdays in possible_birthdays :
        days += ( birthdays [ 1 ] , )
    a = 0
    for dates in days :
        if ( day == dates ) :
            a += 1
    if ( a != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.699,0.022,0.000,0.000,0.344,0.196,1.285,17,17,0.891
question_2,100,0,wrong_2_195.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( day == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for j in possible_birthdays :
        if ( month != j [ 0 ] ) :
            continue
        elif unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( day == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for j in possible_birthdays :
        if ( month != j [ 0 ] ) :
            continue
        elif unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( day == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    for j in possible_birthdays :
        if ( month != j [ 0 ] ) :
            continue
        elif unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_110.py', 'unique_month': 'correct_2_110.py', 'contains_unique_day': 'correct_2_110.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( date == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    for j in possible_birthdays :
        if ( month != j [ 0 ] ) :
            continue
        elif unique_day ( j [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.502,0.358,0.000,0.000,0.199,0.059,1.139,17,17,0.011
question_2,100,0,wrong_2_269.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    total = ( )
    for i in possible_birthdays :
        total += ( i [ 1 ] , )
    if ( total . count ( day ) > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    total = ( )
    for i in possible_birthdays :
        total += ( i [ 0 ] , )
    if ( total . count ( month ) > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    uniquedays = ( )
    daysinmonth = ( )
    for i in possible_birthdays :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            uniquedays += ( i [ 1 ] , )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            daysinmonth += ( i [ 1 ] , )
    for each in uniquedays :
        if ( each in daysinmonth ) :
            return True
        else :
            continue
    return False


","def unique_day ( day , possible_birthdays ) :
    total = ( )
    for i in possible_birthdays :
        total += ( i [ 1 ] , )
    pass
    if ( total . count ( day ) > 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    total = ( )
    for i in possible_birthdays :
        total += ( i [ 0 ] , )
    pass
    if ( total . count ( month ) > 1 ) :
        return False
    else :
        return True
    pass


def contains_unique_day ( month , possible_birthdays ) :
    uniquedays = ( )
    daysinmonth = ( )
    for i in possible_birthdays :
        pass
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            uniquedays += ( i [ 1 ] , )
        pass
    pass
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            daysinmonth += ( i [ 1 ] , )
        pass
    pass
    if True :
        pass
        if ( each in daysinmonth ) :
            return True
        else :
            continue
        new_day = ''
        counter = 0
    elif True :
        pass
    return False
","def unique_day ( date , possible_birthdays ) :
    dates = ( )
    for d in possible_birthdays :
        dates += ( d [ 1 ] , )
    if ( dates . count ( date ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    months = ( )
    for a in possible_birthdays :
        months += ( a [ 0 ] , )
    if ( months . count ( month ) == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    new_possible_birthdays = ()
    for i in range(len(possible_birthdays)):
        if (month == possible_birthdays[i][0]):
            new_possible_birthdays += (possible_birthdays[i],)
    new_day = ''
    counter = 0
    for n in range(len(new_possible_birthdays)):
        new_day = new_possible_birthdays[n][1]
        if (unique_day(new_day, possible_birthdays) == True):
            counter += 1
    if True:
        if (counter == 0):
            return False
        else:
            return True
    elif True:
        pass
","{'unique_day': 'correct_2_104.py', 'unique_month': 'correct_2_104.py', 'contains_unique_day': 'correct_2_107.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,B2.k'}","def unique_day ( day , possible_birthdays ) :
    total = ( )
    for i in possible_birthdays :
        total += ( i [ 1 ] , )
    pass
    if ( total . count ( day ) == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    total = ( )
    for i in possible_birthdays :
        total += ( i [ 0 ] , )
    pass
    if ( total . count ( month ) == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    uniquedays = ( )
    daysinmonth = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            uniquedays += ( possible_birthdays [ i ] , )
        pass
    new_day = ''
    counter = 0
    for ref_n in range ( len ( uniquedays ) ) :
        new_day = uniquedays [ ref_n ] [ 1 ]
        if ( unique_day ( new_day , possible_birthdays ) == True ) :
            counter += 1
        pass
    pass
    if True :
        pass
        if ( counter == 0 ) :
            return False
        else :
            return True
    elif True :
        pass
",N/A,8.928,0.261,0.000,0.002,0.297,1.263,10.787,17,17,0.543
question_2,100,0,wrong_2_066.py,fail_other,1,0,"def unique_day ( day , possible_birthdays ) :
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    day = month
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for possiblemonth in possible_birthdays :
        if ( possiblemonth [ 0 ] == month ) :
            if ( unique_day ( possiblemonth [ 1 ] , possible_birthdays ) == True ) :
                return True
            else :
                continue
    return False


","def unique_day ( day , possible_birthdays ) :
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    day = month
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for possiblemonth in possible_birthdays :
        if ( possiblemonth [ 0 ] == month ) :
            if ( unique_day ( possiblemonth [ 1 ] , possible_birthdays ) == True ) :
                return True
            else :
                continue
    return False


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if ( unique_day ( i [ 1 ] , possible_birthdays ) == False ) :
                continue
            else :
                return True
    return False
    return True


","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_077.py', 'contains_unique_day': 'correct_2_271.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ref_tester = 0
    for birthdays in possible_birthdays :
        if ( day == birthdays [ 1 ] ) :
            if ref_tester :
                return False
            else :
                ref_tester = 1
    return ref_tester


def unique_month ( day , possible_birthdays ) :
    ref_tester = 0
    for birthdays in possible_birthdays :
        if ( day == birthdays [ 0 ] ) :
            if ref_tester :
                return False
            else :
                ref_tester = 1
    return ref_tester


def contains_unique_day ( month , possible_birthdays ) :
    for possiblemonth in possible_birthdays :
        if ( month == possiblemonth [ 0 ] ) :
            if ( unique_day ( possiblemonth [ 1 ] , possible_birthdays ) == False ) :
                continue
            else :
                return True
    return False
    return True
",N/A,0.842,0.008,0.000,0.000,0.229,1.415,2.520,11,17,N/A
question_2,100,0,wrong_2_409.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter <= 1 )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter <= 1 )
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp += ( i , )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter <= 1 )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter <= 1 )
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp += ( i , )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_288.py', 'unique_month': 'correct_2_288.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    return ( counter == 1 )


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    return ( counter == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp += ( i , )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.503,0.389,0.000,0.000,0.243,0.161,1.320,17,17,0.021
question_2,100,0,wrong_2_046.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            num = ( num + 1 )
    if ( num == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            num = ( num + 1 )
    if ( num == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            result = ( result + ( i [ 0 ] , ) )
    num = 0
    for j in result :
        if ( month == j ) :
            num = ( num + 1 )
    if ( num == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            num = ( num + 1 )
    if ( num == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            num = ( num + 1 )
    if ( num == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in possible_birthdays :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            result = ( result + ( i [ 0 ] , ) )
    num = 0
    for j in result :
        if ( month == j ) :
            num = ( num + 1 )
    if ( num == 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            result = ( result + 1 )
    if ( result == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
    new_day = ''
    counter = 0
    for n in range ( len ( new_possible_birthdays ) ) :
        new_day = new_possible_birthdays [ n ] [ 1 ]
        if ( unique_day ( new_day , possible_birthdays ) == True ) :
            counter += 1
    if ( counter == 0 ) :
        return False
    else :
        return True


","{'unique_day': 'correct_2_208.py', 'unique_month': 'correct_2_208.py', 'contains_unique_day': 'correct_2_241.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            num = ( num + 1 )
    if ( num == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    num = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            num = ( num + 1 )
    if ( num == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            result += ( possible_birthdays [ i ] , )
    num = 0
    for ref_n in range ( len ( result ) ) :
        ref_new_day = result [ ref_n ] [ 1 ]
        if ( unique_day ( ref_new_day , possible_birthdays ) == True ) :
            num = ( num + 1 )
    if ( num == 0 ) :
        return False
    else :
        return True
",N/A,0.501,0.611,0.000,0.000,0.322,0.751,2.215,17,17,0.310
question_2,100,0,wrong_2_290.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( date ) == 1 )
def unique_month ( month , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( month ) == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    b = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            a += ( i , )
    for i in a :
        b = ( b or unique_day ( i [ 1 ] , possible_birthdays ) )
    return b


","def unique_day ( date , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( date ) == 1 )
def unique_month ( month , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( month ) == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    b = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            a += ( i , )
    for i in a :
        b = ( b or unique_day ( i [ 1 ] , possible_birthdays ) )
    return b


","def unique_day ( day , possible_birthdays ) :
    all_days = ( )
    for i in possible_birthdays :
        all_days += ( i [ 1 ] , )
    return ( all_days . count ( day ) == 1 )




def unique_month ( month , possible_birthdays ) :
    all_months = ( )
    for i in possible_birthdays :
        all_months += ( i [ 0 ] , )
    return ( all_months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    dayi = ( )
    result = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            dayi += ( i [ 1 ] , )
    for j in dayi :
        result = ( result or unique_day ( j , possible_birthdays ) )
    return result


","{'unique_day': 'correct_2_001.py', 'unique_month': 'correct_2_001.py', 'contains_unique_day': 'correct_2_123.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 1 ] , )
    return ( a . count ( date ) == 1 )


def unique_month ( month , possible_birthdays ) :
    a = ( )
    for i in possible_birthdays :
        a += ( i [ 0 ] , )
    return ( a . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    b = False
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            a += ( i [ 1 ] , )
    for ref_j in a :
        b = ( b or unique_day ( ref_j , possible_birthdays ) )
    return b
",N/A,0.502,0.022,0.000,0.000,0.274,0.310,1.133,17,17,0.092
question_2,100,0,wrong_2_395.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 1 ] == date ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for n in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ n ] [ 0 ] ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
    new_day = ''
    counter = 0
    for i in range ( len ( new_possible_birthdays ) ) :
        new_day = new_possible_birthdays [ i ] [ 1 ]
        if ( unique_day ( new_day , possible_birthdays ) == True ) :
            counter = ( counter + 1 )
        if ( counter == 0 ) :
            return False
        else :
            return True


","def unique_day ( date , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 1 ] == date ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for n in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ n ] [ 0 ] ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
    new_day = ''
    counter = 0
    for i in range ( len ( new_possible_birthdays ) ) :
        new_day = new_possible_birthdays [ i ] [ 1 ]
        if ( unique_day ( new_day , possible_birthdays ) == True ) :
            counter = ( counter + 1 )
        if ( counter == 0 ) :
            return False
        else :
            return True


","def unique_day ( date , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 1 ] == date ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True






def contains_unique_day(month, possible_birthdays):
    x = ()
    for k in range(len(possible_birthdays)):
        if (possible_birthdays[k][0] == month):
            x = (x + (possible_birthdays[k],))
    for l in range(len(x)):
        if False:
            pass
        if unique_day(x[l][1], possible_birthdays):
            return True
        else:
            continue
    return False
","{'unique_day': 'correct_2_264.py', 'unique_month': 'correct_2_264.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.g'}","def unique_day ( date , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 1 ] == date ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    result = 0
    for n in possible_birthdays :
        if ( n [ 0 ] == month ) :
            result = ( result + 1 )
    if ( result != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for ref_k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ ref_k ] [ 0 ] == month ) :
            new_possible_birthdays = ( new_possible_birthdays + ( possible_birthdays [ ref_k ] , ) )
    for ref_l in range ( len ( new_possible_birthdays ) ) :
        if False :
            pass
        if unique_day ( new_possible_birthdays [ ref_l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,7.881,0.322,0.000,0.000,0.211,0.676,9.120,17,17,0.313
question_2,100,0,wrong_2_192.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    i = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            i += 1
            if ( i == 2 ) :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    i = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            i += 1
            if ( i == 2 ) :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    bday_list = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            bday_list += ( birthday , )
    for birthday in bday_list :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            i += 1
            if ( i == 2 ) :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    i = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            i += 1
            if ( i == 2 ) :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    bday_list = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            bday_list += ( birthday , )
    for birthday in bday_list :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","

def unique_day(day, possible_birthdays):
    s = 0
    for b in possible_birthdays:
        if True:
            if (b[1] == day):
                s = (s + 1)
            continue
    return (s == 1)




def unique_month(month, possible_birthdays):
    s = 0
    for b in possible_birthdays:
        if True:
            if (b[0] == month):
                s = (s + 1)
            continue
    return (s == 1)


def contains_unique_day ( month , possible_birthdays ) :
    birthdays_in_month = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            birthdays_in_month += ( birthday , )
    for birthday in birthdays_in_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_223.py', 'contains_unique_day': 'correct_2_026.py'}","{'unique_day': 'B1.f,A1.a', 'unique_month': 'B1.f,A1.a', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    i = 0
    for ref_b in possible_birthdays :
        if True :
            if ( ref_b [ 1 ] == day ) :
                i = ( i + 1 )
            continue
    return ( i == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        if True :
            if ( ref_b [ 0 ] == month ) :
                ref_s = ( ref_s + 1 )
            continue
    return ( ref_s == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    bday_list = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            bday_list += ( birthday , )
    for birthday in bday_list :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,3.241,0.290,0.000,0.000,0.278,0.871,4.709,17,17,0.447
question_2,100,0,wrong_2_342.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( date == birthday [ 1 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( date == birthday [ 1 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count = ( count + 1 )
    if ( count > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False


","{'unique_day': 'correct_2_277.py', 'unique_month': 'correct_2_277.py', 'contains_unique_day': 'correct_2_175.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( date == birthday [ 1 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
                return True
    return False
",N/A,0.699,0.680,0.000,0.000,0.238,0.498,2.140,17,17,0.020
question_2,100,0,wrong_2_274.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    birthdays_in_month = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            birthdays_in_month += ( birthday , )
    for birthday in birthdays_in_month :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_026.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    a = ( )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + ( birthday , ) )
    for birthday in a :
        if unique_day ( birthday [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.501,0.916,0.000,0.000,0.266,0.208,1.923,17,17,0.018
question_2,100,0,wrong_2_172.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.511,N/A,N/A,N/A
question_2,100,0,wrong_2_020.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    daysinmonth = ( )
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            daysinmonth += ( i [ 1 ] , )
    for i in daysinmonth :
        if unique_day ( i , possible_birthdays ) :
            count += 1
    return ( count == 1 )


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    daysinmonth = ( )
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            daysinmonth += ( i [ 1 ] , )
    for i in daysinmonth :
        if unique_day ( i , possible_birthdays ) :
            count += 1
    return ( count == 1 )


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            days += ( i [ 1 ] , )
    for i in days :
        if unique_day ( i , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_082.py', 'unique_month': 'correct_2_287.py', 'contains_unique_day': 'correct_2_287.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    daysinmonth = ( )
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            daysinmonth += ( i [ 1 ] , )
    for i in daysinmonth :
        if unique_day ( i , possible_birthdays ) :
            return True
    return ( count == 1 )
",N/A,0.510,0.651,0.000,0.000,0.251,0.204,1.644,17,17,0.039
question_2,100,0,wrong_2_012.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            days = ( days + 1 )
    if ( days == 1 ) :
        return True
    else :
        return False
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == day ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
    for j in range ( len ( x ) ) :
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","def unique_day ( date , possible_birthdays ) :
    days = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
    return True
    if ( possible_birthdays [ i ] [ 1 ] == day ) :
        days = ( days + 1 )
        for i in x :
            pass
            if ( days == 1 ) :
                return True
            else :
                return False
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
        pass
    pass
    if ( months == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
        pass
    pass
    for j in range ( len ( x ) ) :
        pass
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
        pass
    return False
","

def unique_day(day, possible_birthdays):
    x = ()
    y = ()
    for i in possible_birthdays:
        x += (i[1],)
    if (len(x) > 0):
        for i in x:
            if (i == day):
                y += (i,)
            else:
                continue
    if (len(y) == 1):
        return True
    else:
        return False


def unique_month ( month , possible_birthdays ) :
    months = 0
    for j in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ j ] [ 0 ] == month ) :
            months = ( months + 1 )
    if ( months == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_152.py', 'unique_month': 'correct_2_014.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': 'C1.n', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_x = ( )
    ref_y = ( )
    for i in possible_birthdays :
        ref_x += ( i [ 1 ] , )
    if ( len ( ref_x ) > 0 ) :
        for i in ref_x :
            pass
            if ( i == date ) :
                ref_y += ( i , )
            else :
                continue
        pass
    pass
    if ( len ( ref_y ) == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    months = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            months = ( months + 1 )
        pass
    pass
    if ( months == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ i ] , ) )
        pass
    pass
    for j in range ( len ( x ) ) :
        pass
        if unique_day ( x [ j ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
        pass
    return False
",N/A,9.174,0.347,0.000,0.003,0.415,0.589,10.571,17,17,0.389
question_2,100,0,wrong_2_167.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.498,N/A,N/A,N/A
question_2,100,0,wrong_2_124.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester
def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester
def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_077.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester


def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.621,0.014,0.000,0.000,0.197,0.213,1.067,11,17,N/A
question_2,100,0,wrong_2_334.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    while ( len ( bdaylist ) > 0 ) :
        single = bdaylist [ 0 ]
        if ( single [ 1 ] == day ) :
            count = ( count + 1 )
        if ( count == 2 ) :
            return False
            break
        bdaylist = bdaylist [ 1 : ]
    return True
def unique_month ( month , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    while ( len ( bdaylist ) > 0 ) :
        single = bdaylist [ 0 ]
        if ( single [ 0 ] == month ) :
            count = ( count + 1 )
        if ( count == 2 ) :
            return False
            break
        bdaylist = bdaylist [ 1 : ]
    return True
def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    while ( len ( bday_list ) > 0 ) :
        if ( bday_list [ 0 ] [ 0 ] == month ) :
            month_list = ( month_list + ( bday_list [ 0 ] , ) )
        bday_list = bday_list [ 1 : ]
    while ( len ( month_list ) > 0 ) :
        if unique_day ( month_list [ 0 ] [ 1 ] , possible_birthdays ) :
            return True
        month_list = month_list [ 1 : ]
    return False


","def unique_day ( date , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    for birthday in possible_birthdays :
        single = bdaylist [ 0 ]
        if ( single [ 1 ] == day ) :
            'Your solution here'
            a = 0
        count = ( count + 1 )
    pass
    if ( count == 2 ) :
        return False
        break
    else :
        bdaylist = bdaylist [ 1 : ]
    return True


def unique_month ( month , possible_birthdays ) :
    bdaylist = possible_birthdays
    count = 0
    for birthday in possible_birthdays :
        single = bdaylist [ 0 ]
        if ( single [ 0 ] == month ) :
            return True
        count = ( count + 1 )
    pass
    if ( count == 2 ) :
        return False
        break
    else :
        bdaylist = bdaylist [ 1 : ]
    return True


def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    for k in range ( len ( possible_birthdays ) ) :
        pass
        if ( bday_list [ 0 ] [ 0 ] == month ) :
            month_list = ( month_list + ( bday_list [ 0 ] , ) )
        bday_list = bday_list [ 1 : ]
    pass
    for l in range ( len ( x ) ) :
        pass
        if unique_day ( month_list [ 0 ] [ 1 ] , possible_birthdays ) :
            pass
        else :
            return True
        month_list = month_list [ 1 : ]
    return False
","def unique_day ( day , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            a = ( a + 1 )
    if ( a == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            a = ( a + 1 )
    if ( a == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    for k in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            x = ( x + ( possible_birthdays [ k ] , ) )
    for l in range ( len ( x ) ) :
        if unique_day ( x [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False


","{'unique_day': 'correct_2_260.py', 'unique_month': 'correct_2_260.py', 'contains_unique_day': 'correct_2_018.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    'Your solution here'
    a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == date ) :
            a = ( a + 1 )
    pass
    if ( a == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    'Your solution here'
    ref_a = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            ref_a = ( ref_a + 1 )
    pass
    if ( ref_a == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    month_list = ( )
    bday_list = possible_birthdays
    for k in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ k ] [ 0 ] == month ) :
            month_list = ( month_list + ( possible_birthdays [ k ] , ) )
    pass
    for l in range ( len ( month_list ) ) :
        pass
        if unique_day ( month_list [ l ] [ 1 ] , possible_birthdays ) :
            return True
        else :
            continue
    return False
",N/A,12.642,2.175,0.000,0.003,0.224,2.163,17.249,17,17,0.552
question_2,100,0,wrong_2_385.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            return unique_day ( birthdate [ 1 ] , possible_birthdays )


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            return unique_day ( birthdate [ 1 ] , possible_birthdays )


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( day == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    for possible_birthday in possible_birthdays :
        if ( ( month == possible_birthday [ 0 ] ) and unique_day ( possible_birthday [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_110.py', 'unique_month': 'correct_2_110.py', 'contains_unique_day': 'correct_2_068.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( str ( date ) == birthdate [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    for ref_possible_birthday in possible_birthdays :
        if ( ( month == ref_possible_birthday [ 0 ] ) and unique_day ( ref_possible_birthday [ 1 ] , possible_birthdays ) ) :
            return True
    return False
",N/A,0.836,0.670,0.000,0.000,0.234,0.384,2.150,17,17,0.133
question_2,100,0,wrong_2_221.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day in date ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( month in date ) :
            counter += 1
        if ( counter > 1 ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        ( months , day ) = date
        if unique_day ( day , possible_birthdays ) :
            dates += ( months , )
    return ( month in dates )


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( day in date ) :
            counter += 1
        pass
    pass
    if ( counter > 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( month in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        ( months , day ) = date
        if unique_day ( day , possible_birthdays ) :
            dates += ( months , )
        pass
    return ( month in dates )
","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day in date ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    contains = ( )
    for date in possible_birthdays :
        if ( ( month in date ) and unique_day ( date [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_047.py', 'unique_month': 'correct_2_252.py', 'contains_unique_day': 'correct_2_047.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( day in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( month in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        if ( ( month in date ) and unique_day ( date [ 1 ] , possible_birthdays ) ) :
            return True
        pass
    return ( month in dates )
",N/A,4.053,0.766,0.000,0.002,0.323,0.354,5.527,17,17,0.315
question_2,100,0,wrong_2_071.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( str ( day ) == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( str ( month ) == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    list_d = ( )
    for i in range ( 16 , 20 ) :
        i_string = str ( i )
        if ( unique_day ( i_string , possible_birthdays ) is True ) :
            list_d = ( list_d + ( str ( i ) , ) )
    for i in possible_birthdays :
        for j in list_d :
            if ( i [ 1 ] == j ) :
                if ( i [ 0 ] == month ) :
                    return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( str ( day ) == i [ 1 ] ) :
            counter = ( counter + 1 )
        pass
    pass
    if ( counter > 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( str ( month ) == i [ 0 ] ) :
            counter = ( counter + 1 )
        pass
    pass
    if ( counter > 1 ) :
        return False
    else :
        return True
    pass


def contains_unique_day ( month , possible_birthdays ) :
    list_d = ( )
    for i in range ( 16 , 20 ) :
        i_string = str ( i )
        if ( unique_day ( i_string , possible_birthdays ) is True ) :
            list_d = ( list_d + ( str ( i ) , ) )
            if ( unique_day ( str ( i ) , possible_birthdays ) == True ) :
                pass
            pass
        pass
    pass
    for j in list_d :
        pass
        if ( i [ 1 ] == j ) :
            pass
            if ( i [ 0 ] == month ) :
                return True
            pass
        else :
            pass
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    month_tup = ()
    helper = 0
    for i in possible_birthdays:
        if True:
            if (month in i):
                month_tup = (month_tup + possible_birthdays[helper])
            helper = (helper + 1)
    for i in range(1, 32):
        if (unique_day(str(i), possible_birthdays) == True):
            if (str(i) in month_tup):
                return True
        else:
            pass
    return False
","{'unique_day': 'correct_2_210.py', 'unique_month': 'correct_2_210.py', 'contains_unique_day': 'correct_2_221.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,B2.l'}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( str ( day ) == i [ 1 ] ) :
            counter = ( counter + 1 )
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        pass
        if ( str ( month ) == i [ 0 ] ) :
            counter = ( counter + 1 )
        pass
    pass
    if ( counter == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    ref_month_tup = ( )
    ref_helper = 0
    for i in possible_birthdays :
        if True :
            if ( month in i ) :
                ref_month_tup = ( ref_month_tup + possible_birthdays [ ref_helper ] )
            ref_helper = ( ref_helper + 1 )
        pass
    pass
    for i in range ( 1 , 32 ) :
        pass
        if ( unique_day ( str ( i ) , possible_birthdays ) == True ) :
            pass
            if ( str ( i ) in ref_month_tup ) :
                return True
            pass
        else :
            pass
        pass
    return False
",N/A,9.655,0.888,0.000,0.002,0.927,1.101,12.613,17,17,0.493
question_2,100,0,wrong_2_143.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    singlemonthbirthday = ( )
    for birthmonth in possible_birthdays :
        if ( month == birthmonth [ 0 ] ) :
            singlemonthbirthday += ( birthmonth , )
    for birthday in singlemonthbirthday :
        if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    singlemonthbirthday = ( )
    for birthmonth in possible_birthdays :
        if ( month == birthmonth [ 0 ] ) :
            singlemonthbirthday += ( birthmonth , )
    for birthday in singlemonthbirthday :
        if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    singlemonthbirthday = ( )
    for birthmonth in possible_birthdays :
        if ( month == birthmonth [ 0 ] ) :
            singlemonthbirthday += ( birthmonth , )
    for birthday in singlemonthbirthday :
        if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_164.py', 'unique_month': 'correct_2_082.py', 'contains_unique_day': 'correct_2_082.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( date == birthday [ 1 ] ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    singlemonthbirthday = ( )
    for birthmonth in possible_birthdays :
        if ( month == birthmonth [ 0 ] ) :
            singlemonthbirthday += ( birthmonth , )
    for birthday in singlemonthbirthday :
        if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.832,0.357,0.000,0.000,0.233,0.059,1.505,17,17,0.010
question_2,100,0,wrong_2_249.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for days in range ( len ( possible_birthdays ) ) :
        if ( str ( day ) == possible_birthdays [ days ] [ 1 ] ) :
            counter += 1
    return ( True if ( counter == 1 ) else False )
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for mth in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ mth ] [ 0 ] ) :
            counter += 1
    return ( True if ( counter == 1 ) else False )
def contains_unique_day ( month , possible_birthdays ) :
    daystoconsider = ( )
    i = 0
    while ( i < len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            daystoconsider += ( possible_birthdays [ i ] [ 1 ] , )
        i += 1
    monthcontaininguniqueday = ( )
    for a in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ a ] [ 1 ] in daystoconsider ) :
            monthcontaininguniqueday += ( possible_birthdays [ a ] [ 0 ] , )
    for mth in range ( len ( monthcontaininguniqueday ) ) :
        if ( monthcontaininguniqueday [ mth ] == month ) :
            return True
            break
        return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for days in range ( len ( possible_birthdays ) ) :
        pass
        if ( str ( day ) == possible_birthdays [ days ] [ 1 ] ) :
            counter += 1
        pass
    return ( True if ( counter == 1 ) else False )


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for mth in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ mth ] [ 0 ] ) :
            counter += 1
        pass
    return ( True if ( counter == 1 ) else False )


def contains_unique_day ( month , possible_birthdays ) :
    daystoconsider = ( )
    i = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            daystoconsider += ( possible_birthdays [ i ] [ 1 ] , )
        i += 1
    monthcontaininguniqueday = ( )
    for a in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ a ] [ 1 ] in daystoconsider ) :
            monthcontaininguniqueday += ( possible_birthdays [ a ] [ 0 ] , )
        pass
    pass
    if True :
        pass
        if ( monthcontaininguniqueday [ mth ] == month ) :
            return True
            break
        return False
    pass
","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            counter = ( counter + 1 )
    return ( counter == 1 )




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            counter = ( counter + 1 )
    return ( counter == 1 )






def contains_unique_day(month, possible_birthdays):
    new_possible_birthdays = ()
    for i in range(len(possible_birthdays)):
        if (month == possible_birthdays[i][0]):
            new_possible_birthdays += (possible_birthdays[i],)
    new_day = ''
    counter = 0
    for n in range(len(new_possible_birthdays)):
        new_day = new_possible_birthdays[n][1]
        if (unique_day(new_day, possible_birthdays) == True):
            counter += 1
    if True:
        if (counter == 0):
            return False
        return True
","{'unique_day': 'correct_2_215.py', 'unique_month': 'correct_2_215.py', 'contains_unique_day': 'correct_2_107.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'A1.a,B1.f'}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for days in range ( len ( possible_birthdays ) ) :
        pass
        if ( str ( day ) == possible_birthdays [ days ] [ 1 ] ) :
            counter += 1
        pass
    return ( True if ( counter == 1 ) else False )


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for mth in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ mth ] [ 0 ] ) :
            counter += 1
        pass
    return ( True if ( counter == 1 ) else False )


def contains_unique_day ( month , possible_birthdays ) :
    daystoconsider = ( )
    i = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            daystoconsider += ( possible_birthdays [ i ] , )
    ref_new_day = ''
    monthcontaininguniqueday = 0
    for ref_n in range ( len ( daystoconsider ) ) :
        ref_new_day = daystoconsider [ ref_n ] [ 1 ]
        if ( unique_day ( ref_new_day , possible_birthdays ) == True ) :
            monthcontaininguniqueday += 1
        pass
    pass
    if True :
        pass
        if ( monthcontaininguniqueday == 0 ) :
            return False
        return True
    pass
",N/A,10.115,0.447,0.000,0.002,0.316,0.910,11.837,17,17,0.328
question_2,100,0,wrong_2_420.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_285.py', 'unique_month': 'correct_2_285.py', 'contains_unique_day': 'correct_2_199.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
        else :
            continue
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.839,0.253,0.000,0.000,0.260,0.119,1.496,17,17,0.011
question_2,100,0,wrong_2_297.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )
def unique_month ( month , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            total = ( total + 1 )
    return ( total == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )
def unique_month ( month , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            total = ( total + 1 )
    return ( total == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )




def unique_month ( month , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            total = ( total + 1 )
    return ( total == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and unique_day ( i [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_226.py', 'unique_month': 'correct_2_226.py', 'contains_unique_day': 'correct_2_012.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            total = ( total + 1 )
    return ( total == 1 )


def unique_month ( month , possible_birthdays ) :
    total = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            total = ( total + 1 )
    return ( total == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and unique_day ( i [ 1 ] , possible_birthdays ) ) :
            return True
    return False
",N/A,0.498,0.259,0.000,0.000,0.200,0.146,1.125,17,17,0.113
question_2,100,0,wrong_2_265.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for possible_birthday in possible_birthdays :
        if ( possible_birthday [ 1 ] == day ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for possible_birthday in possible_birthdays :
        if ( possible_birthday [ 0 ] == month ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    filtered_birthdays = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    for day in tuple ( map ( ( lambda x : x [ 1 ] ) , filtered_birthdays ) ) :
        if unique_day ( day , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for possible_birthday in possible_birthdays :
        if ( possible_birthday [ 1 ] == day ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for possible_birthday in possible_birthdays :
        if ( possible_birthday [ 0 ] == month ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    filtered_birthdays = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    for day in tuple ( map ( ( lambda x : x [ 1 ] ) , filtered_birthdays ) ) :
        if unique_day ( day , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    get_possible_months = filter ( ( lambda birthday : ( birthday [ 0 ] == month ) ) , possible_birthdays )
    get_possible_days = map ( ( lambda birthday : birthday [ 1 ] ) , get_possible_months )
    for days in get_possible_days :
        if unique_day ( days , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_161.py', 'unique_month': 'correct_2_161.py', 'contains_unique_day': 'correct_2_283.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for possible_birthday in possible_birthdays :
        if ( possible_birthday [ 1 ] == day ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for possible_birthday in possible_birthdays :
        if ( possible_birthday [ 0 ] == month ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    filtered_birthdays = filter ( ( lambda ref_birthday : ( ref_birthday [ 0 ] == month ) ) , possible_birthdays )
    ref_get_possible_days = map ( ( lambda ref_birthday : ref_birthday [ 1 ] ) , filtered_birthdays )
    for day in ref_get_possible_days :
        if unique_day ( day , possible_birthdays ) :
            return True
    return False
",N/A,0.503,0.444,0.000,0.000,0.245,0.550,1.769,17,17,0.138
question_2,100,0,wrong_2_224.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for mon in possible_birthdays :
        if ( mon [ 0 ] == month ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for mon in possible_birthdays :
        if ( mon [ 0 ] == month ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for mon in possible_birthdays :
        if ( mon [ 0 ] == month ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_140.py', 'unique_month': 'correct_2_140.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for mon in possible_birthdays :
        if ( mon [ 0 ] == month ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.518,0.229,0.000,0.000,0.212,0.120,1.099,17,17,0.516
question_2,100,0,wrong_2_136.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.499,N/A,N/A,N/A
question_2,100,0,wrong_2_379.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.497,N/A,N/A,N/A
question_2,100,0,wrong_2_329.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day in date ) :
            counter += 1
        if ( counter > 1 ) :
            return False
        else :
            return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( month in date ) :
            counter += 1
        if ( counter > 1 ) :
            return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        ( months , day ) = date
        if unique_day ( day , possible_birthdays ) :
            return ( month == months )


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( day in date ) :
            counter += 1
        pass
    pass
    if ( counter > 1 ) :
        return False
    else :
        pass
    pass


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( month in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        ( months , day ) = date
        if unique_day ( day , possible_birthdays ) :
            return ( month == months )
        pass
    pass
","

def unique_day(day, possible_birthdays):
    counter = 0
    for date in possible_birthdays:
        if (day in date):
            counter += 1
    if (counter != 1):
        return False
    else:
        return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    contains = ( )
    for date in possible_birthdays :
        if ( ( month in date ) and unique_day ( date [ 1 ] , possible_birthdays ) ) :
            return True
    return False


","{'unique_day': 'correct_2_046.py', 'unique_month': 'correct_2_252.py', 'contains_unique_day': 'correct_2_047.py'}","{'unique_day': 'A1.b', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( day in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        pass
        if ( month in date ) :
            counter += 1
        pass
    pass
    if ( counter != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    dates = ( )
    for date in possible_birthdays :
        if ( ( month in date ) and unique_day ( date [ 1 ] , possible_birthdays ) ) :
            return True
        pass
    return False
",N/A,6.923,0.694,0.000,0.002,0.311,0.318,8.272,17,17,0.381
question_2,100,0,wrong_2_383.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.495,N/A,N/A,N/A
question_2,100,0,wrong_2_203.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return true
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.717,0.927,0.000,0.000,0.268,0.282,2.223,17,17,0.045
question_2,100,0,wrong_2_287.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == month ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == month ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x += ( i , )
        else :
            continue
    for i in x :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_099.py', 'unique_month': 'correct_2_145.py', 'contains_unique_day': 'correct_2_152.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.503,0.290,0.000,0.000,0.334,0.189,1.346,17,17,0.046
question_2,100,0,wrong_2_327.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    if ( month == 'May' ) :
        return True
    if ( month == 'June' ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for i in possible_birthdays :
        return True
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            pass
            if ( month == 'June' ) :
                return True
            pass
        return False
    pass
","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( month in i ) :
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_017.py', 'unique_month': 'correct_2_017.py', 'contains_unique_day': 'correct_2_090.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    for i in possible_birthdays :
        if ( month in i ) :
            pass
            if unique_day ( i [ 1 ] , possible_birthdays ) :
                return True
            pass
    return False
",N/A,3.793,1.102,0.000,0.002,0.273,0.264,5.463,17,17,0.283
question_2,100,0,wrong_2_199.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    checker = 0
    for k in possible_birthdays :
        if ( k [ 1 ] == day ) :
            checker += 1
    return ( checker == 1 )
def unique_month ( day , possible_birthdays ) :
    checker = 0
    for k in possible_birthdays :
        if ( k [ 0 ] == day ) :
            checker += 1
    return ( checker == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    checker = 0
    for k in possible_birthdays :
        if ( k [ 1 ] == day ) :
            checker += 1
    return ( checker == 1 )
def unique_month ( day , possible_birthdays ) :
    checker = 0
    for k in possible_birthdays :
        if ( k [ 0 ] == day ) :
            checker += 1
    return ( checker == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    checker = 0
    for k in possible_birthdays :
        if ( k [ 1 ] == day ) :
            checker += 1
    return ( checker == 1 )




def unique_month ( day , possible_birthdays ) :
    checker = 0
    for k in possible_birthdays :
        if ( k [ 0 ] == day ) :
            checker += 1
    return ( checker == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_112.py', 'unique_month': 'correct_2_112.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    checker = 0
    for k in possible_birthdays :
        if ( k [ 1 ] == day ) :
            checker += 1
    return ( checker == 1 )


def unique_month ( day , possible_birthdays ) :
    checker = 0
    for k in possible_birthdays :
        if ( k [ 0 ] == day ) :
            checker += 1
    return ( checker == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.840,0.157,0.000,0.000,0.216,0.118,1.354,17,17,0.516
question_2,100,0,wrong_2_284.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            counter = counter
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    x = ( )
    y = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            x += ( i , )
        else :
            continue
    for i in x :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_099.py', 'unique_month': 'correct_2_145.py', 'contains_unique_day': 'correct_2_152.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter += 1
        else :
            continue
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    tup = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tup += ( i , )
        else :
            continue
    for i in tup :
        if ( unique_day ( i [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.501,0.298,0.000,0.000,0.286,0.198,1.311,17,17,0.009
question_2,100,0,wrong_2_215.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.521,N/A,N/A,N/A
question_2,100,0,wrong_2_223.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for mon in possible_birthdays :
        if ( mon [ 0 ] == month ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for mon in possible_birthdays :
        if ( mon [ 0 ] == month ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for mon in possible_birthdays :
        if ( mon [ 0 ] == month ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_140.py', 'unique_month': 'correct_2_140.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for date in possible_birthdays :
        if ( date [ 1 ] == day ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for mon in possible_birthdays :
        if ( mon [ 0 ] == month ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.498,0.233,0.000,0.000,0.200,0.114,1.065,17,17,0.516
question_2,100,0,wrong_2_339.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( date in i ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month in i ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            birthdays += ( i , )
    for i in birthdays :
        if ( not unique_day ( i [ 1 ] , possible_birthdays ) ) :
            result = False
        else :
            result = True
            break
    return result


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( date in i ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month in i ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    birthdays = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            birthdays += ( i , )
    for i in birthdays :
        if ( not unique_day ( i [ 1 ] , possible_birthdays ) ) :
            result = False
        else :
            result = True
            break
    return result


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day in i ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month in i ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    possible_days = ( )
    for x in possible_birthdays :
        if ( month in x ) :
            possible_days += ( x [ 1 ] , )
    for x in possible_days :
        contains = unique_day ( x , possible_birthdays )
        if ( contains == False ) :
            continue
        else :
            return True
    return False


","{'unique_day': 'correct_2_258.py', 'unique_month': 'correct_2_258.py', 'contains_unique_day': 'correct_2_173.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( date in i ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month in i ) :
            counter += 1
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    birthdays = ( )
    for ref_x in possible_birthdays :
        if ( month in ref_x ) :
            birthdays += ( ref_x [ 1 ] , )
    for ref_x in birthdays :
        result = unique_day ( ref_x , possible_birthdays )
        if ( result == False ) :
            result = False
        else :
            return True
    return result
",N/A,0.503,0.494,0.000,0.000,0.263,1.004,2.296,17,17,0.208
question_2,100,0,wrong_2_298.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    ( count , result ) = ( 0 , 0 )
    for count in range ( 0 , len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ count ] [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    ( count , result ) = ( 0 , 0 )
    for count in range ( 0 , len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ count ] [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    ( count , result ) = ( 0 , 0 )
    for count in range ( 0 , len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ count ] [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    ( count , result ) = ( 0 , 0 )
    for count in range ( 0 , len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ count ] [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    ( count , result ) = ( 0 , 0 )
    for count in range ( 0 , len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ count ] [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    ( count , result ) = ( 0 , 0 )
    for count in range ( 0 , len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ count ] [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_207.py', 'unique_month': 'correct_2_207.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    ( count , result ) = ( 0 , 0 )
    for count in range ( 0 , len ( possible_birthdays ) ) :
        if ( day == possible_birthdays [ count ] [ 1 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    ( count , result ) = ( 0 , 0 )
    for count in range ( 0 , len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ count ] [ 0 ] ) :
            result = ( result + 1 )
        else :
            continue
    if ( result == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.503,0.124,0.000,0.000,0.277,0.136,1.070,17,17,0.320
question_2,100,0,wrong_2_208.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter <= 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    value = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            value += ( i , )
    for i in value :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_126.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_288.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    temp = ( )
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            temp = ( temp + ( i , ) )
    for i in temp :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.499,0.913,0.000,0.000,0.266,0.204,1.912,17,17,0.036
question_2,100,0,wrong_2_313.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            days += ( i [ 1 ] , )
    for i in days :
        if unique_date ( i , possible_birthdays ) :
            return True
        else :
            return false


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            days += ( i [ 1 ] , )
    for i in days :
        if unique_date ( i , possible_birthdays ) :
            return True
        else :
            return false


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            days += ( birthday [ 1 ] , )
    for day in days :
        if ( unique_day ( day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( day , possible_birthdays )
    return False


","{'unique_day': 'correct_2_082.py', 'unique_month': 'correct_2_287.py', 'contains_unique_day': 'correct_2_201.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for ref_birthday in possible_birthdays :
        if ( month == ref_birthday [ 0 ] ) :
            days += ( ref_birthday [ 1 ] , )
    for ref_day in days :
        if ( unique_day ( ref_day , possible_birthdays ) == False ) :
            continue
        else :
            return unique_day ( ref_day , possible_birthdays )
    return False
",N/A,0.505,0.243,0.000,0.000,0.247,0.501,1.525,17,17,0.168
question_2,100,0,wrong_2_212.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count >= 2 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( date == possible_birthdays [ i ] [ 1 ] ) :
            count = ( count + 1 )
    if ( count >= 2 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            count = ( count + 1 )
    if ( count >= 2 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            counter = ( counter + 1 )
    if ( counter != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    return False


","{'unique_day': 'correct_2_243.py', 'unique_month': 'correct_2_243.py', 'contains_unique_day': 'correct_2_108.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            count = ( count + 1 )
    if ( count != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            count = ( count + 1 )
    if ( count != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            if unique_day ( possible_birthdays [ i ] [ 1 ] , possible_birthdays ) :
                return True
    return False
",N/A,0.501,0.462,0.000,0.000,0.223,0.387,1.603,17,17,0.158
question_2,100,0,wrong_2_357.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tf = ( tf or unique_day ( i [ 1 ] , possible_birthdays ) )
    return tf


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return ( count == 1 )
def unique_month ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    return ( count == 1 )
def contains_unique_day ( month , possible_birthdays ) :
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tf = ( tf or unique_day ( i [ 1 ] , possible_birthdays ) )
    return tf


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return ( count == 1 )




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    return ( count == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    tf = False
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tf = ( tf or unique_day ( i [ 1 ] , possible_birthdays ) )
    return tf


","{'unique_day': 'correct_2_235.py', 'unique_month': 'correct_2_147.py', 'contains_unique_day': 'correct_2_235.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    return ( count == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    tf = False
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            tf = ( tf or unique_day ( i [ 1 ] , possible_birthdays ) )
    return tf
",N/A,0.506,0.279,0.000,0.000,0.207,0.052,1.069,17,17,0.072
question_2,100,0,wrong_2_059.py,success_w_mut,0,0,"def unique_day ( day , pb ) :
    n = len ( pb )
    for i in range ( n ) :
        if ( day == pb [ i ] [ 1 ] ) :
            k = pb [ ( i + 1 ) : ]
            for j in range ( len ( k ) ) :
                if ( day == k [ j ] [ 1 ] ) :
                    return False
    return True
def unique_month ( month , pb ) :
    n = len ( pb )
    for i in range ( n ) :
        if ( month == pb [ i ] [ 0 ] ) :
            k = pb [ ( i + 1 ) : ]
            for j in range ( len ( k ) ) :
                if ( month == k [ j ] [ 0 ] ) :
                    return False
    return True
def contains_unique_day ( month , pb ) :
    new_pb = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , pb ) )
    n = len ( new_pb )
    for i in range ( n ) :
        day = new_pb [ i ] [ 1 ]
        if unique_day ( day , pb ) :
            return True
    return False


","def unique_day ( day , pb ) :
    n = len ( pb )
    for i in range ( n ) :
        pass
        if ( day == pb [ i ] [ 1 ] ) :
            k = pb [ ( i + 1 ) : ]
        pass
    pass
    if ( day == k [ j ] [ 1 ] ) :
        pass
    else :
        pass
    return True


def unique_month ( month , pb ) :
    n = len ( pb )
    for i in range ( n ) :
        pass
        if ( month == pb [ i ] [ 0 ] ) :
            k = pb [ ( i + 1 ) : ]
        pass
    pass
    if ( month == k [ j ] [ 0 ] ) :
        pass
    else :
        pass
    return True


def contains_unique_day ( month , pb ) :
    new_pb = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , pb ) )
    n = len ( new_pb )
    for i in range ( n ) :
        day = new_pb [ i ] [ 1 ]
        if unique_day ( day , pb ) :
            return True
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for i in possible_birthdays :
        if ( day == i [ 1 ] ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    tup = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    for i in range ( len ( tup ) ) :
        if ( unique_day ( tup [ i ] [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_210.py', 'unique_month': 'correct_2_259.py', 'contains_unique_day': 'correct_2_183.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , pb ) :
    ref_counter = 0
    for i in pb :
        pass
        if ( day == i [ 1 ] ) :
            ref_counter = ( ref_counter + 1 )
        pass
    pass
    if ( ref_counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , pb ) :
    ref_count = 0
    for i in pb :
        pass
        if ( i [ 0 ] == month ) :
            ref_count += 1
        pass
    pass
    if ( ref_count != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , pb ) :
    new_pb = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , pb ) )
    n = len ( new_pb )
    for i in range ( len ( new_pb ) ) :
        if ( unique_day ( new_pb [ i ] [ 1 ] , pb ) == True ) :
            return True
        pass
    return False
",N/A,9.096,0.304,0.000,0.002,0.308,0.754,10.498,17,17,0.561
question_2,100,0,wrong_2_117.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.497,N/A,N/A,N/A
question_2,100,0,wrong_2_183.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.495,N/A,N/A,N/A
question_2,100,0,wrong_2_087.py,fail_other,1,0,"def unique_day ( day , possible_birthdays ) :
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    day = month
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True


","def unique_day ( day , possible_birthdays ) :
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 1 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    day = month
    counted = ( )
    for birthdays in possible_birthdays :
        if ( birthdays [ 0 ] == day ) :
            if ( day not in counted ) :
                counted += ( day , )
            else :
                return False
    return True


","def unique_day ( date , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( date == i [ 1 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester




def unique_month ( month , possible_birthdays ) :
    tester = 0
    for i in possible_birthdays :
        if ( month == i [ 0 ] ) :
            if tester :
                return False
            else :
                tester = 1
    return tester


","{'unique_day': 'correct_2_077.py', 'unique_month': 'correct_2_077.py'}","{'unique_day': '', 'unique_month': ''}","def unique_day ( day , possible_birthdays ) :
    ref_tester = 0
    for birthdays in possible_birthdays :
        if ( day == birthdays [ 1 ] ) :
            if ref_tester :
                return False
            else :
                ref_tester = 1
    return ref_tester


def unique_month ( day , possible_birthdays ) :
    ref_tester = 0
    for birthdays in possible_birthdays :
        if ( day == birthdays [ 0 ] ) :
            if ref_tester :
                return False
            else :
                ref_tester = 1
    return ref_tester
",N/A,0.700,0.001,0.000,0.000,0.177,0.971,1.866,11,17,N/A
question_2,100,0,wrong_2_368.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    i = 0
    for months in possible_birthdays :
        if ( month == months [ 0 ] ) :
            i += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    i = 0
    for months in possible_birthdays :
        if ( month == months [ 0 ] ) :
            i += 1
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    i = 0
    for months in possible_birthdays :
        if ( month == months [ 0 ] ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_245.py', 'unique_month': 'correct_2_245.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    i = 0
    for days in possible_birthdays :
        if ( int ( day ) == int ( days [ 1 ] ) ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    i = 0
    for months in possible_birthdays :
        if ( month == months [ 0 ] ) :
            i += 1
    if ( i == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.504,0.403,0.000,0.000,0.214,0.190,1.337,17,17,0.446
question_2,100,0,wrong_2_185.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.502,N/A,N/A,N/A
question_2,100,0,wrong_2_169.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.497,N/A,N/A,N/A
question_2,100,0,wrong_2_321.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 1 ] == day ) :
            count = ( count + 1 )
            if ( count > 1 ) :
                return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            count = ( count + 1 )
            if ( count > 1 ) :
                return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    unique_days = ( )
    month_birthdays = ( )
    for day in range ( 0 , 32 ) :
        if ( unique_day ( str ( day ) , possible_birthdays ) == True ) :
            unique_days = ( unique_days + ( day , ) )
    for birthday in possible_birthdays :
        if ( birthday [ 0 ] == month ) :
            month_birthdays = ( month_birthdays + ( birthday , ) )
    for dates in month_birthdays :
        if ( int ( dates [ 1 ] ) in unique_days ) :
            return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( birthday [ 1 ] == day ) :
            count = ( count + 1 )
            if ( count > 1 ) :
                return False
            pass
        pass
    return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for birthday in possible_birthdays :
        pass
        if ( birthday [ 0 ] == month ) :
            count = ( count + 1 )
            if ( count > 1 ) :
                return False
            pass
        pass
    return True


def contains_unique_day ( month , possible_birthdays ) :
    unique_days = ( )
    month_birthdays = ( )
    for day in range ( 0 , 32 ) :
        pass
        if ( unique_day ( str ( day ) , possible_birthdays ) == True ) :
            unique_days = ( unique_days + ( day , ) )
        pass
    pass
    for birthday in possible_birthdays :
        pass
        if ( birthday [ 0 ] == month ) :
            month_birthdays = ( month_birthdays + ( birthday , ) )
        else :
            pass
        pass
    pass
    if ( outcome == ( ) ) :
        pass
        if ( int ( dates [ 1 ] ) in unique_days ) :
            return True
        pass
    else :
        return False
    pass
","

def unique_day(day, possible_birthdays):
    s = 0
    for b in possible_birthdays:
        if True:
            if (b[1] == day):
                s = (s + 1)
            continue
    return (s == 1)




def unique_month(month, possible_birthdays):
    s = 0
    for b in possible_birthdays:
        if True:
            if (b[0] == month):
                s = (s + 1)
            continue
    return (s == 1)




def contains_unique_day(month, possible_birthdays):
    (data, outcome) = ((), ())
    for birthday in possible_birthdays:
        if (month == birthday[0]):
            data += (birthday,)
    for birthday in data:
        if (unique_day(birthday[1], possible_birthdays) == True):
            outcome += birthday
        else:
            continue
    if (outcome == ()):
        if False:
            pass
        return False
    else:
        return unique_day(outcome[1], possible_birthdays)
","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_223.py', 'contains_unique_day': 'correct_2_246.py'}","{'unique_day': 'B1.f,A1.a', 'unique_month': 'B1.f,A1.a', 'contains_unique_day': 'B1.g'}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for ref_b in possible_birthdays :
        pass
        if True :
            if ( ref_b [ 1 ] == day ) :
                count = ( count + 1 )
            continue
        pass
    return ( count == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        pass
        if True :
            if ( ref_b [ 0 ] == month ) :
                ref_s = ( ref_s + 1 )
            continue
        pass
    return ( ref_s == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    ( month_birthdays , ref_outcome ) = ( ( ) , ( ) )
    for birthday in possible_birthdays :
        pass
        if ( month == birthday [ 0 ] ) :
            month_birthdays += ( birthday , )
        pass
    pass
    for birthday in month_birthdays :
        pass
        if ( unique_day ( birthday [ 1 ] , possible_birthdays ) == True ) :
            ref_outcome += birthday
        else :
            continue
        pass
    pass
    if ( ref_outcome == ( ) ) :
        pass
        if False :
            pass
        return False
    else :
        return unique_day ( ref_outcome [ 1 ] , possible_birthdays )
    pass
",N/A,13.035,2.314,0.000,0.002,0.594,1.627,17.610,17,17,0.745
question_2,100,0,wrong_2_166.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.496,N/A,N/A,N/A
question_2,100,0,wrong_2_176.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.493,N/A,N/A,N/A
question_2,100,0,wrong_2_257.py,fail_other,1,0,"def unique_day ( date , possible_birthdays ) :
    if ( date in possible_birthdays [ 1 ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( x and y ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( date in possible_birthdays [ 1 ] ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    if ( month in possible_birthdays [ 0 ] ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    if ( x and y ) :
        return False
    else :
        return True


","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    specific_set = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    get_days = tuple ( map ( ( lambda x : x [ 1 ] ) , specific_set ) )
    ans = tuple ( map ( ( lambda x : unique_day ( x , possible_birthdays ) ) , get_days ) )
    if ( True in ans ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_103.py', 'unique_month': 'correct_2_103.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    if ( count_dates ( date , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    if ( count_months ( month , possible_birthdays ) == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
    if ( True in ref_ans ) :
        return True
    else :
        return False
",N/A,0.839,0.032,0.000,0.000,0.076,0.548,1.516,0,17,N/A
question_2,100,0,wrong_2_113.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.497,N/A,N/A,N/A
question_2,100,0,wrong_2_319.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day in i ) :
            count += 1
    if ( count > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month in i ) :
            count += 1
    if ( count > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            days += ( i [ 1 ] , )
    for j in days :
        if unique_day ( j , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day in i ) :
            count += 1
    if ( count > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month in i ) :
            count += 1
    if ( count > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            days += ( i [ 1 ] , )
    for j in days :
        if unique_day ( j , possible_birthdays ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for date in possible_birthdays :
        if ( day in date ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    count = 0
    for possible_dates in possible_birthdays :
        if ( possible_dates [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True




def contains_unique_day ( month , possible_birthdays ) :
    daysinmonth = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            daysinmonth += ( i [ 1 ] , )
    for j in daysinmonth :
        if unique_day ( j , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_047.py', 'unique_month': 'correct_2_095.py', 'contains_unique_day': 'correct_2_011.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( day in i ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( month in i ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True


def contains_unique_day ( month , possible_birthdays ) :
    days = ( )
    for i in possible_birthdays :
        if ( month in i ) :
            days += ( i [ 1 ] , )
    for j in days :
        if unique_day ( j , possible_birthdays ) :
            return True
    return False
",N/A,0.500,0.473,0.000,0.000,0.254,0.206,1.459,17,17,0.021
question_2,100,0,wrong_2_191.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_109.py', 'unique_month': 'correct_2_109.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for i in range ( 0 , len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.499,0.377,0.000,0.000,0.231,0.131,1.261,17,17,0.356
question_2,100,0,wrong_2_373.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for i in range ( len ( possible_birthdays ) ) :
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
        new_day = ''
        counter = 0
        for n in range ( len ( possible_birthdays ) ) :
            if ( unique_day ( new_day , possible_birthdays ) == True ) :
                counter += 1
            if ( counter == 0 ) :
                return False
            else :
                return True


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def contains_unique_day ( month , possible_birthdays ) :
    new_possible_birthdays = ( )
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( month == possible_birthdays [ i ] [ 0 ] ) :
            new_possible_birthdays += ( possible_birthdays [ i ] , )
        new_day = ''
        counter = 0
    possible_days += ( x [ 1 ] , )
    for n in range ( len ( possible_birthdays ) ) :
        pass
        if ( unique_day ( new_day , possible_birthdays ) == True ) :
            pass
            if ( counter == 0 ) :
                return False
            else :
                return True
            pass
        pass
    pass
","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count += 1
    if ( count != 1 ) :
        return False
    else :
        return True






def contains_unique_day(month, possible_birthdays):
    possible_days = ()
    for x in possible_birthdays:
        if (month in x):
            possible_days += (x[1],)
    for x in possible_days:
        contains = unique_day(x, possible_birthdays)
        if True:
            if (contains == False):
                continue
            else:
                return True
    return False
","{'unique_day': 'correct_2_107.py', 'unique_month': 'correct_2_107.py', 'contains_unique_day': 'correct_2_165.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f'}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        pass
        if ( i [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count != 1 ) :
        return False
    else :
        return True
    pass


def contains_unique_day ( month , possible_birthdays ) :
    n = ( )
    for ref_x in possible_birthdays :
        pass
        if ( month in ref_x ) :
            n += ( ref_x [ 1 ] , )
    for ref_x in n :
        ref_contains = unique_day ( ref_x , possible_birthdays )
        if True :
            pass
            if ( ref_contains == False ) :
                continue
            else :
                return True
            pass
        pass
    return False
",N/A,8.218,0.490,0.000,0.002,0.369,0.594,9.706,17,17,0.439
question_2,100,0,wrong_2_234.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pd = p [ 1 ]
        if ( day == pd ) :
            result = ( result + ( day , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pm = p [ 0 ]
        if ( month == pm ) :
            result = ( result + ( month , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( p , ) )
    for r in result :
        if ( unique_day ( r [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pd = p [ 1 ]
        if ( day == pd ) :
            result = ( result + ( day , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        pm = p [ 0 ]
        if ( month == pm ) :
            result = ( result + ( month , ) )
    if ( len ( result ) > 1 ) :
        return False
    return True
def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( p , ) )
    for r in result :
        if ( unique_day ( r [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    unique = ( )
    for birthday in possible_birthdays :
        if ( day == birthday [ 1 ] ) :
            unique = ( unique + ( day , ) )
    if ( len ( unique ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    unique = ( )
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            unique = ( unique + ( month , ) )
    if ( len ( unique ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    month_day = ( )
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            month_day = ( month_day + ( j , ) )
    for t in month_day :
        if ( unique_day ( t [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_062.py', 'unique_month': 'correct_2_062.py', 'contains_unique_day': 'correct_2_211.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( day == p [ 1 ] ) :
            result = ( result + ( day , ) )
    if ( len ( result ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( month , ) )
    if ( len ( result ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    result = ( )
    for p in possible_birthdays :
        if ( month == p [ 0 ] ) :
            result = ( result + ( p , ) )
    for r in result :
        if ( unique_day ( r [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.839,0.672,0.000,0.000,0.327,0.696,2.566,17,17,0.161
question_2,100,0,wrong_2_054.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list = [ x for x in possible_birthdays [ i ] [ 1 ] ]
        list = sorted ( list )
        if ( ( date == list [ i ] ) and ( date != list [ ( i + 1 ) ] ) and ( date != list [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list = [ x for x in possible_birthdays [ i ] [ 0 ] ]
        list = sorted ( list )
        if ( ( month == list [ i ] ) and ( month != list [ ( i + 1 ) ] ) and ( month != list [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list = [ x for x in possible_birthdays [ i ] [ 1 ] ]
        list = sorted ( list )
        if ( ( date == list [ i ] ) and ( date != list [ ( i + 1 ) ] ) and ( date != list [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
def unique_month ( month , possible_birthdays ) :
    for i in range ( 0 , len ( possible_birthdays ) ) :
        list = [ x for x in possible_birthdays [ i ] [ 0 ] ]
        list = sorted ( list )
        if ( ( month == list [ i ] ) and ( month != list [ ( i + 1 ) ] ) and ( month != list [ ( i - 1 ) ] ) ) :
            return True
        else :
            return False
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 1 ] == day ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def unique_month ( month , possible_birthdays ) :
    s = 0
    for b in possible_birthdays :
        if ( b [ 0 ] == month ) :
            s = ( s + 1 )
        else :
            continue
    return ( s == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_229.py', 'unique_month': 'correct_2_229.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        if ( ref_b [ 1 ] == date ) :
            ref_s = ( ref_s + 1 )
        else :
            continue
    return ( ref_s == 1 )


def unique_month ( month , possible_birthdays ) :
    ref_s = 0
    for ref_b in possible_birthdays :
        if ( ref_b [ 0 ] == month ) :
            ref_s = ( ref_s + 1 )
        else :
            continue
    return ( ref_s == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.503,0.026,0.000,0.000,0.199,0.674,1.431,17,17,1.015
question_2,100,0,wrong_2_028.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    flag = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            flag += 1
    return ( True if ( flag == 1 ) else False )
def unique_month ( month , possible_birthdays ) :
    flag = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            flag += 1
    return ( True if ( flag == 1 ) else False )
def contains_unique_day ( month , possible_birthdays ) :
    flag = 0
    unique_days = [ ]
    for i in possible_birthdays :
        if ( i [ 1 ] not in unique_days ) :
            unique_days . append ( i [ 1 ] )
        else :
            unique_days . remove ( i [ 1 ] )
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and ( i [ 1 ] in unique_days ) ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    flag = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == day ) :
            flag += 1
    return ( True if ( flag == 1 ) else False )
def unique_month ( month , possible_birthdays ) :
    flag = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            flag += 1
    return ( True if ( flag == 1 ) else False )
def contains_unique_day ( month , possible_birthdays ) :
    flag = 0
    unique_days = [ ]
    for i in possible_birthdays :
        if ( i [ 1 ] not in unique_days ) :
            unique_days . append ( i [ 1 ] )
        else :
            unique_days . remove ( i [ 1 ] )
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and ( i [ 1 ] in unique_days ) ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    flag = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            flag += 1
    return ( True if ( flag == 1 ) else False )




def unique_month ( month , possible_birthdays ) :
    flag = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            flag += 1
    return ( True if ( flag == 1 ) else False )




def contains_unique_day ( month , possible_birthdays ) :
    flag = 0
    unique_days = [ ]
    for i in possible_birthdays :
        if ( i [ 1 ] not in unique_days ) :
            unique_days . append ( i [ 1 ] )
        else :
            unique_days . remove ( i [ 1 ] )
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and ( i [ 1 ] in unique_days ) ) :
            return True
    return False


","{'unique_day': 'correct_2_033.py', 'unique_month': 'correct_2_033.py', 'contains_unique_day': 'correct_2_033.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    flag = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            flag += 1
    return ( True if ( flag == 1 ) else False )


def unique_month ( month , possible_birthdays ) :
    flag = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            flag += 1
    return ( True if ( flag == 1 ) else False )


def contains_unique_day ( month , possible_birthdays ) :
    flag = 0
    unique_days = [ ]
    for i in possible_birthdays :
        if ( i [ 1 ] not in unique_days ) :
            unique_days . append ( i [ 1 ] )
        else :
            unique_days . remove ( i [ 1 ] )
    for i in possible_birthdays :
        if ( ( i [ 0 ] == month ) and ( i [ 1 ] in unique_days ) ) :
            return True
    return False
",N/A,0.501,0.287,0.000,0.000,0.239,0.170,1.223,17,17,0.008
question_2,100,0,wrong_2_181.py,fail_exception,N/A,0,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,0.498,N/A,N/A,N/A
question_2,100,0,wrong_2_425.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( date == birthdate [ 1 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( date == birthdate [ 1 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter > 1 ) :
        return False
    else :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False


","def unique_day ( day , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( day == j [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    counter = 0
    for j in possible_birthdays :
        if ( month == j [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True




def contains_unique_day ( month , possible_birthdays ) :
    a = 0
    b = 0
    for item in possible_birthdays :
        if ( month in item ) :
            a = item
            if ( unique_day ( item [ 1 ] , possible_birthdays ) == True ) :
                b += 1
    if ( b >= 1 ) :
        return True
    else :
        return False


","{'unique_day': 'correct_2_110.py', 'unique_month': 'correct_2_110.py', 'contains_unique_day': 'correct_2_286.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( date == birthdate [ 1 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def unique_month ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            counter += 1
    if ( counter != 1 ) :
        return False
    else :
        return True


def contains_unique_day ( month , possible_birthdays ) :
    counter = 0
    for birthdate in possible_birthdays :
        if ( month == birthdate [ 0 ] ) :
            r = unique_day ( birthdate [ 1 ] , possible_birthdays )
            if ( r == True ) :
                counter += 1
    if ( counter >= 1 ) :
        return True
    else :
        return False
",N/A,0.501,0.508,0.000,0.000,0.281,0.251,1.571,17,17,0.018
question_2,100,0,wrong_2_238.py,success_wo_mut,1,0,"def unique_day ( date , possible_birthdays ) :
    if ( ( day == '18' ) or '19' ) :
        return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( date , possible_birthdays ) :
    if ( ( day == '18' ) or '19' ) :
        return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    if ( tuple ( map ( ( lambda x : x [ 1 ] ) , possible_birthdays ) ) . count ( day ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_093.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    if ( tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , possible_birthdays ) ) . count ( date ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.498,0.025,0.000,0.000,0.074,0.226,0.843,17,17,2.556
question_2,100,0,wrong_2_412.py,success_w_mut,0,0,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    if ( month == 'June' ) :
        return True
    elif ( month == 'May' ) :
        return True
    else :
        return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    pass
    if ( month == 'June' ) :
        return True
        if ( True in ans ) :
            return True
        return False
    pass
","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
    if ( count == 1 ) :
        return True
    else :
        return False






def contains_unique_day(month, possible_birthdays):
    specific_set = tuple(filter((lambda x: (x[0] == month)), possible_birthdays))
    get_days = tuple(map((lambda x: x[1]), specific_set))
    if True:
        ans = tuple(map((lambda x: unique_day(x, possible_birthdays)), get_days))
        if (True in ans):
            return True
        return False
","{'unique_day': 'correct_2_065.py', 'unique_month': 'correct_2_065.py', 'contains_unique_day': 'correct_2_069.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.f,A1.a'}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 1 ] == date ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in range ( len ( possible_birthdays ) ) :
        pass
        if ( possible_birthdays [ i ] [ 0 ] == month ) :
            count += 1
        pass
    pass
    if ( count == 1 ) :
        return True
    else :
        return False
    pass


def contains_unique_day ( month , possible_birthdays ) :
    ref_specific_set = tuple ( filter ( ( lambda ref_x : ( ref_x [ 0 ] == month ) ) , possible_birthdays ) )
    ref_get_days = tuple ( map ( ( lambda ref_x : ref_x [ 1 ] ) , ref_specific_set ) )
    if True :
        ref_ans = tuple ( map ( ( lambda ref_x : unique_day ( ref_x , possible_birthdays ) ) , ref_get_days ) )
        if ( True in ref_ans ) :
            return True
        return False
    pass
",N/A,3.412,0.216,0.000,0.002,0.302,0.211,4.177,17,17,0.586
question_2,100,0,wrong_2_349.py,success_wo_mut,1,1,"def unique_day ( day , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False
def unique_month ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            b . append ( birthday [ 1 ] )
    for day in b :
        if ( unique_day ( day , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False
def unique_month ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
def contains_unique_day ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            b . append ( birthday [ 1 ] )
    for day in b :
        if ( unique_day ( day , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False




def unique_month ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
    return False




def contains_unique_day ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            b . append ( birthday [ 1 ] )
    for day in b :
        if ( unique_day ( day , possible_birthdays ) == True ) :
            return True
    return False


","{'unique_day': 'correct_2_233.py', 'unique_month': 'correct_2_233.py', 'contains_unique_day': 'correct_2_233.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 1 ] )
    if ( b . count ( day ) == 1 ) :
        return True
    return False


def unique_month ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        b . append ( birthday [ 0 ] )
    if ( b . count ( month ) == 1 ) :
        return True
    return False


def contains_unique_day ( month , possible_birthdays ) :
    b = [ ]
    for birthday in possible_birthdays :
        if ( month == birthday [ 0 ] ) :
            b . append ( birthday [ 1 ] )
    for day in b :
        if ( unique_day ( day , possible_birthdays ) == True ) :
            return True
    return False
",N/A,0.842,0.275,0.000,0.000,0.254,0.052,1.447,17,17,0.020
question_2,100,0,wrong_2_021.py,success_w_mut,0,0,"def unique_day ( day , possible_birthdays ) :
    possible_days = tuple ( map ( ( lambda x : x [ 1 ] ) , possible_birthdays ) )
    counter = 0
    for possible_day in possible_days :
        if ( day == possible_day ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    elif ( counter > 1 ) :
        return False
    else :
        return 'Not a day in possible_birthdays'
def unique_month ( month , possible_birthdays ) :
    possible_months = tuple ( map ( ( lambda x : x [ 0 ] ) , possible_birthdays ) )
    counter = 0
    for possible_month in possible_months :
        if ( month == possible_month ) :
            counter = ( counter + 1 )
    if ( counter == 1 ) :
        return True
    elif ( counter > 1 ) :
        return False
    else :
        return 'Not a month in possible_birthdays'
def contains_unique_day ( month , possible_birthdays ) :
    def contains_month ( month , elem ) :
        return ( month == elem [ 0 ] )
    pos_bd_containing_month = tuple ( filter ( ( lambda x : contains_month ( month , x ) ) , possible_birthdays ) )
    for element in pos_bd_containing_month :
        if ( unique_day ( element [ 1 ] , possible_birthdays ) == True ) :
            return True
    return False


","def unique_day ( day , possible_birthdays ) :
    possible_days = tuple ( map ( ( lambda x : x [ 1 ] ) , possible_birthdays ) )
    counter = 0
    for possible_day in possible_days :
        pass
        if ( day == possible_day ) :
            counter = ( counter + 1 )
        pass
    pass
    if ( counter == 1 ) :
        return True
    elif ( counter > 1 ) :
        return False
    else :
        return 'Not a day in possible_birthdays'
    pass


def unique_month ( month , possible_birthdays ) :
    possible_months = tuple ( map ( ( lambda x : x [ 0 ] ) , possible_birthdays ) )
    counter = 0
    for possible_month in possible_months :
        pass
        if ( month == possible_month ) :
            counter = ( counter + 1 )
        pass
    pass
    if ( counter == 1 ) :
        return True
    elif ( counter > 1 ) :
        return False
    else :
        return 'Not a month in possible_birthdays'
    pass


def contains_unique_day ( month , possible_birthdays ) :
    return False
    if True :
        return ( month == elem [ 0 ] )
    pos_bd_containing_month = tuple ( filter ( ( lambda x : contains_month ( month , x ) ) , possible_birthdays ) )
    for element in pos_bd_containing_month :
        pass
        if ( unique_day ( element [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
","def unique_day ( day , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( day in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True




def unique_month ( month , possible_birthdays ) :
    result = 0
    for i in possible_birthdays :
        if ( month in i ) :
            result = ( result + 1 )
    if ( result > 1 ) :
        return False
    elif ( result == 0 ) :
        return False
    else :
        return True






def contains_unique_day(month, possible_birthdays):
    if True:
        pass
    filter_month = tuple(filter((lambda x: (x[0] == month)), possible_birthdays))
    for day in filter_month:
        if unique_day(day[1], possible_birthdays):
            return True
    return False
","{'unique_day': 'correct_2_221.py', 'unique_month': 'correct_2_221.py', 'contains_unique_day': 'correct_2_036.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': 'B1.h'}","def unique_day ( day , possible_birthdays ) :
    possible_days = tuple ( map ( ( lambda x : x [ 1 ] ) , possible_birthdays ) )
    counter = 0
    for possible_day in possible_birthdays :
        pass
        if ( day in possible_day ) :
            counter = ( counter + 1 )
        pass
    pass
    if ( counter > 1 ) :
        return False
    elif ( counter == 0 ) :
        return False
    else :
        return True
    pass


def unique_month ( month , possible_birthdays ) :
    possible_months = tuple ( map ( ( lambda x : x [ 0 ] ) , possible_birthdays ) )
    counter = 0
    for possible_month in possible_birthdays :
        pass
        if ( month in possible_month ) :
            counter = ( counter + 1 )
        pass
    pass
    if ( counter > 1 ) :
        return False
    elif ( counter == 0 ) :
        return False
    else :
        return True
    pass


def contains_unique_day ( month , possible_birthdays ) :
    if True :
        pass
    pos_bd_containing_month = tuple ( filter ( ( lambda x : ( x [ 0 ] == month ) ) , possible_birthdays ) )
    for element in pos_bd_containing_month :
        pass
        if ( unique_day ( element [ 1 ] , possible_birthdays ) == True ) :
            return True
        pass
    return False
",N/A,3.834,0.309,0.000,0.002,0.359,1.007,5.550,17,17,0.268
question_2,100,0,wrong_2_216.py,success_wo_mut,1,0,"def unique_day ( day , possible_birthdays ) :
    count = 0
    for element in possible_birthdays :
        if ( element [ 1 ] == day ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for element in possible_birthdays :
        if ( element [ 1 ] == day ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True
def unique_month ( month , possible_birthdays ) :
    return
def contains_unique_day ( month , possible_birthdays ) :
    return


","def unique_day ( day , possible_birthdays ) :
    count = 0
    for element in possible_birthdays :
        if ( element [ 1 ] == day ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True




def unique_month ( month , possible_birthdays ) :
    months = [ birthday [ 0 ] for birthday in possible_birthdays ]
    return ( months . count ( month ) == 1 )




def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda x : unique_day ( x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda y : ( y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )


","{'unique_day': 'correct_2_122.py', 'unique_month': 'correct_2_275.py', 'contains_unique_day': 'correct_2_214.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( day , possible_birthdays ) :
    count = 0
    for element in possible_birthdays :
        if ( element [ 1 ] == day ) :
            count += 1
    if ( count != 1 ) :
        return False
    return True


def unique_month ( month , possible_birthdays ) :
    ref_months = [ ref_birthday [ 0 ] for ref_birthday in possible_birthdays ]
    return ( ref_months . count ( month ) == 1 )


def contains_unique_day ( month , possible_birthdays ) :
    return ( len ( tuple ( filter ( ( lambda ref_x : unique_day ( ref_x [ 1 ] , possible_birthdays ) ) , filter ( ( lambda ref_y : ( ref_y [ 0 ] == month ) ) , possible_birthdays ) ) ) ) > 0 )
",N/A,0.838,0.124,0.000,0.000,0.193,0.181,1.357,17,17,1.114
question_2,100,0,wrong_2_283.py,success_wo_mut,1,1,"def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    same_month_tuple = ( )
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            same_month_tuple = ( same_month_tuple + ( i , ) )
    for i in same_month_tuple :
        if unique_day ( i [ 0 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False
def contains_unique_day ( month , possible_birthdays ) :
    same_month_tuple = ( )
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            same_month_tuple = ( same_month_tuple + ( i , ) )
    for i in same_month_tuple :
        if unique_day ( i [ 0 ] , possible_birthdays ) :
            return True
    return False


","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False




def contains_unique_day ( month , possible_birthdays ) :
    same_month_tuple = ( )
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            same_month_tuple = ( same_month_tuple + ( i , ) )
    for i in same_month_tuple :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False


","{'unique_day': 'correct_2_242.py', 'unique_month': 'correct_2_126.py', 'contains_unique_day': 'correct_2_242.py'}","{'unique_day': '', 'unique_month': '', 'contains_unique_day': ''}","def unique_day ( date , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 1 ] == date ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def unique_month ( month , possible_birthdays ) :
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            count = ( count + 1 )
    if ( count == 1 ) :
        return True
    else :
        return False


def contains_unique_day ( month , possible_birthdays ) :
    same_month_tuple = ( )
    count = 0
    for i in possible_birthdays :
        if ( i [ 0 ] == month ) :
            same_month_tuple = ( same_month_tuple + ( i , ) )
    for i in same_month_tuple :
        if unique_day ( i [ 1 ] , possible_birthdays ) :
            return True
    return False
",N/A,0.500,0.451,0.000,0.000,0.280,0.170,1.429,17,17,0.009
